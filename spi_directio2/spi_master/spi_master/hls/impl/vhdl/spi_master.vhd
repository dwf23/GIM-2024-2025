-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity spi_master is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    sclk : OUT STD_LOGIC_VECTOR (0 downto 0);
    cs : OUT STD_LOGIC_VECTOR (0 downto 0);
    mosi : OUT STD_LOGIC_VECTOR (0 downto 0);
    miso : IN STD_LOGIC_VECTOR (0 downto 0);
    miso_ap_vld : IN STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (31 downto 0);
    data_out_ap_vld : IN STD_LOGIC;
    data_in : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_in_ap_vld : OUT STD_LOGIC;
    flag : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of spi_master is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "spi_master_spi_master,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sfvc784-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.883000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=156,HLS_SYN_LUT=325,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";

    signal sclk_ap_vld : STD_LOGIC;
    signal sclk_ap_ack : STD_LOGIC;
    signal cs_ap_vld : STD_LOGIC;
    signal cs_ap_ack : STD_LOGIC;
    signal mosi_ap_vld : STD_LOGIC;
    signal mosi_ap_ack : STD_LOGIC;
    signal miso_ap_ack : STD_LOGIC;
    signal data_out_ap_ack : STD_LOGIC;
    signal data_in_ap_ack : STD_LOGIC;
    signal cs_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_reg_195 : STD_LOGIC_VECTOR (0 downto 0);
    signal miso_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal flag_read_read_fu_78_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_nbreadreq_fu_84_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_nbreadreq_fu_92_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_out_blk_n : STD_LOGIC;
    signal data_in_blk_n : STD_LOGIC;
    signal received_data_load_1_reg_202 : STD_LOGIC_VECTOR (31 downto 0);
    signal send_data_reg_207 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_start : STD_LOGIC;
    signal grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_done : STD_LOGIC;
    signal grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_idle : STD_LOGIC;
    signal grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_ready : STD_LOGIC;
    signal grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_sclk_ap_ack : STD_LOGIC;
    signal grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_mosi_ap_ack : STD_LOGIC;
    signal grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_sclk : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_sclk_ap_vld : STD_LOGIC;
    signal grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_mosi : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_mosi_ap_vld : STD_LOGIC;
    signal grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_miso_ap_ack : STD_LOGIC;
    signal grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_received_data_3_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_received_data_3_out_ap_vld : STD_LOGIC;
    signal grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_start_reg : STD_LOGIC := '0';
    signal ap_predicate_op35_read_state2 : BOOLEAN;
    signal ap_predicate_op38_write_state2 : BOOLEAN;
    signal ap_predicate_op42_read_state2 : BOOLEAN;
    signal ap_block_state2_ignore_call3 : BOOLEAN;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sclk_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal mosi_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal received_data_fu_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal received_data_1_fu_155_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal ap_block_state2 : BOOLEAN;
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state5 : BOOLEAN;
    signal trunc_ln55_fu_151_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component spi_master_spi_master_Pipeline_VITIS_LOOP_30_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sclk_ap_ack : IN STD_LOGIC;
        mosi_ap_ack : IN STD_LOGIC;
        miso_ap_vld : IN STD_LOGIC;
        received_data : IN STD_LOGIC_VECTOR (31 downto 0);
        sclk : OUT STD_LOGIC_VECTOR (0 downto 0);
        sclk_ap_vld : OUT STD_LOGIC;
        send_data : IN STD_LOGIC_VECTOR (31 downto 0);
        mosi : OUT STD_LOGIC_VECTOR (0 downto 0);
        mosi_ap_vld : OUT STD_LOGIC;
        miso : IN STD_LOGIC_VECTOR (0 downto 0);
        miso_ap_ack : OUT STD_LOGIC;
        received_data_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        received_data_3_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128 : component spi_master_spi_master_Pipeline_VITIS_LOOP_30_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_start,
        ap_done => grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_done,
        ap_idle => grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_idle,
        ap_ready => grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_ready,
        sclk_ap_ack => grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_sclk_ap_ack,
        mosi_ap_ack => grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_mosi_ap_ack,
        miso_ap_vld => miso_ap_vld,
        received_data => received_data_load_1_reg_202,
        sclk => grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_sclk,
        sclk_ap_vld => grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_sclk_ap_vld,
        send_data => send_data_reg_207,
        mosi => grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_mosi,
        mosi_ap_vld => grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_mosi_ap_vld,
        miso => miso,
        miso_ap_ack => grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_miso_ap_ack,
        received_data_3_out => grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_received_data_3_out,
        received_data_3_out_ap_vld => grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_received_data_3_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_nbreadreq_fu_84_p3 = ap_const_lv1_1) and (flag = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_ignore_call3))) then 
                    grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_ready = ap_const_logic_1)) then 
                    grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    received_data_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                received_data_fu_70 <= ap_const_lv32_0;
            elsif (((tmp_1_nbreadreq_fu_92_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_84_p3 = ap_const_lv1_0) and (flag = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2))) then 
                received_data_fu_70 <= received_data_1_fu_155_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4))) then 
                received_data_fu_70 <= grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_received_data_3_out;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_mosi_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                mosi_reg <= grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_mosi;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                received_data_load_1_reg_202 <= received_data_fu_70;
                send_data_reg_207 <= data_out;
                tmp_reg_195 <= tmp_nbreadreq_fu_84_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_sclk_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                sclk_reg <= grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_sclk;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (flag, ap_CS_fsm, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2, flag_read_read_fu_78_p2, tmp_nbreadreq_fu_84_p3, grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_done, ap_CS_fsm_state3, ap_block_state4, ap_block_state2, ap_block_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                if (((flag_read_read_fu_78_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((tmp_nbreadreq_fu_84_p3 = ap_const_lv1_0) and (flag = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((tmp_nbreadreq_fu_84_p3 = ap_const_lv1_1) and (flag = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_ST_fsm_state1_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2)
    begin
        if ((ap_const_boolean_1 = ap_block_state2)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_done)
    begin
        if ((grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4)
    begin
        if ((ap_const_boolean_1 = ap_block_state4)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(ap_block_state5)
    begin
        if ((ap_const_boolean_1 = ap_block_state5)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state2_assign_proc : process(miso_ap_vld, data_out_ap_vld, data_in_ap_ack, ap_predicate_op35_read_state2, ap_predicate_op38_write_state2, ap_predicate_op42_read_state2)
    begin
                ap_block_state2 <= (((ap_predicate_op35_read_state2 = ap_const_boolean_1) and (miso_ap_vld = ap_const_logic_0)) or ((data_out_ap_vld = ap_const_logic_0) and (ap_predicate_op42_read_state2 = ap_const_boolean_1)) or ((data_in_ap_ack = ap_const_logic_0) and (ap_predicate_op38_write_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state2_ignore_call3_assign_proc : process(miso_ap_vld, data_out_ap_vld, data_in_ap_ack, ap_predicate_op35_read_state2, ap_predicate_op38_write_state2, ap_predicate_op42_read_state2)
    begin
                ap_block_state2_ignore_call3 <= (((ap_predicate_op35_read_state2 = ap_const_boolean_1) and (miso_ap_vld = ap_const_logic_0)) or ((data_out_ap_vld = ap_const_logic_0) and (ap_predicate_op42_read_state2 = ap_const_boolean_1)) or ((data_in_ap_ack = ap_const_logic_0) and (ap_predicate_op38_write_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state4_assign_proc : process(cs_ap_ack, data_in_ap_ack)
    begin
                ap_block_state4 <= ((data_in_ap_ack = ap_const_logic_0) or (cs_ap_ack = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(cs_ap_ack, tmp_reg_195)
    begin
                ap_block_state5 <= ((tmp_reg_195 = ap_const_lv1_1) and (cs_ap_ack = ap_const_logic_0));
    end process;


    ap_predicate_op35_read_state2_assign_proc : process(flag, tmp_nbreadreq_fu_84_p3, tmp_1_nbreadreq_fu_92_p3)
    begin
                ap_predicate_op35_read_state2 <= ((tmp_1_nbreadreq_fu_92_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_84_p3 = ap_const_lv1_0) and (flag = ap_const_lv1_1));
    end process;


    ap_predicate_op38_write_state2_assign_proc : process(flag, tmp_nbreadreq_fu_84_p3, tmp_1_nbreadreq_fu_92_p3)
    begin
                ap_predicate_op38_write_state2 <= ((tmp_1_nbreadreq_fu_92_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_84_p3 = ap_const_lv1_0) and (flag = ap_const_lv1_1));
    end process;


    ap_predicate_op42_read_state2_assign_proc : process(flag, tmp_nbreadreq_fu_84_p3)
    begin
                ap_predicate_op42_read_state2 <= ((tmp_nbreadreq_fu_84_p3 = ap_const_lv1_1) and (flag = ap_const_lv1_1));
    end process;


    cs_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, tmp_reg_195, ap_block_state4, ap_block_state5)
    begin
        if (((tmp_reg_195 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5))) then 
            cs <= ap_const_lv1_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4))) then 
            cs <= ap_const_lv1_0;
        else 
            cs <= "X";
        end if; 
    end process;

    cs_ap_ack <= ap_const_logic_1;

    cs_ap_vld_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, tmp_reg_195, ap_block_state4, ap_block_state5)
    begin
        if ((((tmp_reg_195 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4)))) then 
            cs_ap_vld <= ap_const_logic_1;
        else 
            cs_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    cs_blk_n <= ap_const_logic_1;

    data_in_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_received_data_3_out, ap_predicate_op38_write_state2, received_data_1_fu_155_p3, ap_block_state4, ap_block_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4))) then 
            data_in <= grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_received_data_3_out;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2) and (ap_predicate_op38_write_state2 = ap_const_boolean_1))) then 
            data_in <= received_data_1_fu_155_p3;
        else 
            data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    data_in_ap_ack <= ap_const_logic_1;

    data_in_ap_vld_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, ap_predicate_op38_write_state2, ap_block_state4, ap_block_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2) and (ap_predicate_op38_write_state2 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4)))) then 
            data_in_ap_vld <= ap_const_logic_1;
        else 
            data_in_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    data_in_blk_n <= ap_const_logic_1;

    data_out_ap_ack_assign_proc : process(ap_CS_fsm_state2, ap_predicate_op42_read_state2, ap_block_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2) and (ap_predicate_op42_read_state2 = ap_const_boolean_1))) then 
            data_out_ap_ack <= ap_const_logic_1;
        else 
            data_out_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    data_out_blk_n_assign_proc : process(data_out_ap_vld, flag, ap_CS_fsm_state2, tmp_nbreadreq_fu_84_p3)
    begin
        if (((tmp_nbreadreq_fu_84_p3 = ap_const_lv1_1) and (flag = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_out_blk_n <= data_out_ap_vld;
        else 
            data_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    flag_read_read_fu_78_p2 <= flag;
    grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_start <= grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_ap_start_reg;
    grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_mosi_ap_ack <= (mosi_ap_ack and ap_CS_fsm_state3);
    grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_sclk_ap_ack <= (sclk_ap_ack and ap_CS_fsm_state3);

    miso_ap_ack_assign_proc : process(ap_CS_fsm_state2, grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_miso_ap_ack, ap_predicate_op35_read_state2, ap_CS_fsm_state3, ap_block_state2)
    begin
        if (((ap_predicate_op35_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2))) then 
            miso_ap_ack <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            miso_ap_ack <= grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_miso_ap_ack;
        else 
            miso_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    miso_blk_n_assign_proc : process(miso_ap_vld, flag, ap_CS_fsm_state2, tmp_nbreadreq_fu_84_p3, tmp_1_nbreadreq_fu_92_p3)
    begin
        if (((tmp_1_nbreadreq_fu_92_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_84_p3 = ap_const_lv1_0) and (flag = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            miso_blk_n <= miso_ap_vld;
        else 
            miso_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mosi_assign_proc : process(grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_mosi, grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_mosi_ap_vld, ap_CS_fsm_state3, mosi_reg)
    begin
        if (((grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_mosi_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            mosi <= grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_mosi;
        else 
            mosi <= mosi_reg;
        end if; 
    end process;

    mosi_ap_ack <= ap_const_logic_1;
    mosi_ap_vld <= grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_mosi_ap_vld;
    received_data_1_fu_155_p3 <= (trunc_ln55_fu_151_p1 & miso);

    sclk_assign_proc : process(grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_sclk, grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_sclk_ap_vld, ap_CS_fsm_state3, sclk_reg)
    begin
        if (((grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_sclk_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            sclk <= grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_sclk;
        else 
            sclk <= sclk_reg;
        end if; 
    end process;

    sclk_ap_ack <= ap_const_logic_1;
    sclk_ap_vld <= grp_spi_master_Pipeline_VITIS_LOOP_30_2_fu_128_sclk_ap_vld;
    tmp_1_nbreadreq_fu_92_p3 <= (0=>(miso_ap_vld), others=>'-');
    tmp_nbreadreq_fu_84_p3 <= (0=>(data_out_ap_vld), others=>'-');
    trunc_ln55_fu_151_p1 <= received_data_fu_70(31 - 1 downto 0);
end behav;
