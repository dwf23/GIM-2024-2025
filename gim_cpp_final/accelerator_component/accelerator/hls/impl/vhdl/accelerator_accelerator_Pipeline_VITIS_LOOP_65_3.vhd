-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity accelerator_accelerator_Pipeline_VITIS_LOOP_65_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    w2_local_1_reload : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_reload : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_3_reload : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_2_reload : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_1_reload : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_reload : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_3_reload : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_2_reload : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_idx4_promoted151_reload : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_idx_promoted149_reload : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_idx1_promoted147_reload : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_idx_promoted145_reload : IN STD_LOGIC_VECTOR (15 downto 0);
    training : IN STD_LOGIC_VECTOR (15 downto 0);
    cmp_i_i : IN STD_LOGIC_VECTOR (0 downto 0);
    w2_local_3_0_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_3_0_out_ap_vld : OUT STD_LOGIC;
    w2_local_2_0_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_2_0_out_ap_vld : OUT STD_LOGIC;
    w2_local_1_0_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_1_0_out_ap_vld : OUT STD_LOGIC;
    w2_local_0_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_0_out_ap_vld : OUT STD_LOGIC;
    w1_local_3_0_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_3_0_out_ap_vld : OUT STD_LOGIC;
    w1_local_2_0_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_2_0_out_ap_vld : OUT STD_LOGIC;
    w1_local_1_0_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_1_0_out_ap_vld : OUT STD_LOGIC;
    w1_local_0_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_0_out_ap_vld : OUT STD_LOGIC;
    bias_2_local_idx4_val110_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_idx4_val110_out_ap_vld : OUT STD_LOGIC;
    bias_2_local_idx_val109_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_idx_val109_out_ap_vld : OUT STD_LOGIC;
    bias_1_local_idx1_val108_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_idx1_val108_out_ap_vld : OUT STD_LOGIC;
    bias_1_local_idx_val107_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_idx_val107_out_ap_vld : OUT STD_LOGIC;
    output_array_inference_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_inference_3_out_ap_vld : OUT STD_LOGIC;
    output_array_inference_2_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_inference_2_out_ap_vld : OUT STD_LOGIC;
    output_array_inference_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_inference_1_out_ap_vld : OUT STD_LOGIC;
    output_array_inference_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_inference_out_ap_vld : OUT STD_LOGIC;
    output_array_inference_4_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_inference_4_out_ap_vld : OUT STD_LOGIC;
    output_array_inference_5_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_inference_5_out_ap_vld : OUT STD_LOGIC;
    output_array_inference_6_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_inference_6_out_ap_vld : OUT STD_LOGIC;
    output_array_inference_7_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_inference_7_out_ap_vld : OUT STD_LOGIC;
    array_back2_weight_changes_24_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_weight_changes_24_out_ap_vld : OUT STD_LOGIC;
    array_back2_weight_changes_25_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_weight_changes_25_out_ap_vld : OUT STD_LOGIC;
    array_back2_weight_changes_26_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_weight_changes_26_out_ap_vld : OUT STD_LOGIC;
    array_back2_weight_changes_27_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_weight_changes_27_out_ap_vld : OUT STD_LOGIC;
    array_back2_bias_change_8_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_bias_change_8_out_ap_vld : OUT STD_LOGIC;
    array_back2_bias_change_9_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_bias_change_9_out_ap_vld : OUT STD_LOGIC;
    array_back1_weight_changes_24_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_weight_changes_24_out_ap_vld : OUT STD_LOGIC;
    array_back1_weight_changes_25_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_weight_changes_25_out_ap_vld : OUT STD_LOGIC;
    array_back1_weight_changes_26_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_weight_changes_26_out_ap_vld : OUT STD_LOGIC;
    array_back1_weight_changes_27_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_weight_changes_27_out_ap_vld : OUT STD_LOGIC;
    array_back1_bias_change_8_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_bias_change_8_out_ap_vld : OUT STD_LOGIC;
    array_back1_bias_change_9_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_bias_change_9_out_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of accelerator_accelerator_Pipeline_VITIS_LOOP_65_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (84 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (84 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (84 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (84 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (84 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (84 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (84 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (84 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (84 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (84 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (84 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_200 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv64_3FE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_FE00 : STD_LOGIC_VECTOR (15 downto 0) := "1111111000000000";
    constant ap_const_lv9_1F4 : STD_LOGIC_VECTOR (8 downto 0) := "111110100";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_FFFFFFCB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_FFFFFFCA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv11_7 : STD_LOGIC_VECTOR (10 downto 0) := "00000000111";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (84 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_731 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal reg_736 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_652_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_741 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal reg_750 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_756 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_762 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_768 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_774 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_780 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_786 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal reg_792 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_798 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_804 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_810 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_816 : STD_LOGIC_VECTOR (15 downto 0);
    signal cmp_i_i_read_read_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_fu_890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_reg_2648 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_2_fu_896_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_2_reg_2652 : STD_LOGIC_VECTOR (8 downto 0);
    signal bias_1_local_idx_val107_load_1_reg_2657 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal bias_1_local_idx1_val108_load_1_reg_2663 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_0_load_1_reg_2669 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_1_0_load_1_reg_2675 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_2_0_load_1_reg_2681 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_3_0_load_1_reg_2687 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_2_local_idx_val109_load_1_reg_2693 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_2_local_idx4_val110_load_1_reg_2699 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_0_load_1_reg_2705 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_1_0_load_1_reg_2711 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_2_0_load_1_reg_2717 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_3_0_load_1_reg_2723 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_2729 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_638_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2735 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln94_fu_974_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln94_reg_2740 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln94_1_fu_978_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln94_1_reg_2745 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_fu_1078_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln_reg_2751 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln94_3_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_3_reg_2756 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln94_fu_1105_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln94_reg_2761 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal lshr_ln94_fu_1118_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln94_reg_2766 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln748_fu_1213_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln748_reg_2771 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal or_ln94_7_fu_1240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln94_7_reg_2776 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_2782 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_2787 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln94_5_reg_2792 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_2798 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln94_4_fu_1266_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln94_4_reg_2803 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln94_5_fu_1270_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln94_5_reg_2808 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln94_1_fu_1370_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln94_1_reg_2814 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln94_9_fu_1378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_9_reg_2819 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln94_4_fu_1384_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln94_4_reg_2824 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal lshr_ln94_2_fu_1397_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln94_2_reg_2829 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln748_1_fu_1492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln748_1_reg_2834 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal or_ln94_8_fu_1519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln94_8_reg_2839 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_2845 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_2850 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal icmp_ln94_10_reg_2855 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_2861 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln94_8_fu_1545_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln94_8_reg_2866 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln94_9_fu_1549_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln94_9_reg_2871 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln94_2_fu_1649_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln94_2_reg_2877 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln94_14_fu_1657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_14_reg_2882 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln94_8_fu_1663_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln94_8_reg_2887 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal lshr_ln94_4_fu_1676_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln94_4_reg_2892 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln748_2_fu_1771_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln748_2_reg_2897 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal or_ln94_9_fu_1798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln94_9_reg_2902 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_2908 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_2913 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal icmp_ln94_15_reg_2918 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_2924 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln94_10_fu_1828_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln94_10_reg_2929 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln94_13_fu_1832_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln94_13_reg_2934 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln94_3_fu_1932_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln94_3_reg_2940 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln94_19_fu_1940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_19_reg_2945 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln94_12_fu_1959_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln94_12_reg_2950 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal lshr_ln94_6_fu_1972_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln94_6_reg_2955 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln748_3_fu_2067_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln748_3_reg_2960 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal or_ln94_10_fu_2094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln94_10_reg_2965 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_2971 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_2976 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal output_array_inference_load_1_reg_2981 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_1_load_1_reg_2986 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_2_load_1_reg_2991 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_3_load_1_reg_2996 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_4_fu_2154_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_4_reg_3001 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_5_fu_2216_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_5_reg_3006 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_6_fu_2278_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_6_reg_3011 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_7_fu_2340_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_7_reg_3016 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_ap_start : STD_LOGIC;
    signal grp_model_array_fu_596_ap_done : STD_LOGIC;
    signal grp_model_array_fu_596_ap_idle : STD_LOGIC;
    signal grp_model_array_fu_596_ap_ready : STD_LOGIC;
    signal grp_model_array_fu_596_p_read10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_p_read29 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_p_read30 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_p_read31 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_biases_0_0_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_biases_0_1_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_output_kmin1_0_0_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_output_kmin1_0_1_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_delta_k_0_0_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_delta_k_0_1_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_596_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_UnifiedRetVal_phi_fu_588_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal UnifiedRetVal_reg_584 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal grp_model_array_fu_596_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (84 downto 0);
    signal ap_NS_fsm_state3 : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm_state8 : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_NS_fsm_state13 : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_NS_fsm_state18 : STD_LOGIC;
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_NS_fsm_state23 : STD_LOGIC;
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_NS_fsm_state28 : STD_LOGIC;
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_NS_fsm_state33 : STD_LOGIC;
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_NS_fsm_state38 : STD_LOGIC;
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_NS_fsm_state43 : STD_LOGIC;
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_NS_fsm_state48 : STD_LOGIC;
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_NS_fsm_state53 : STD_LOGIC;
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_NS_fsm_state58 : STD_LOGIC;
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ap_NS_fsm_state63 : STD_LOGIC;
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_NS_fsm_state68 : STD_LOGIC;
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal ap_NS_fsm_state73 : STD_LOGIC;
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal ap_NS_fsm_state78 : STD_LOGIC;
    signal zext_ln124_fu_1100_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_722_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln124_1_fu_1954_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_fu_208 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal output_array_inference_fu_212 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal output_array_inference_1_fu_216 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal output_array_inference_2_fu_220 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal output_array_inference_3_fu_224 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal bias_1_local_idx_val107_fu_228 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal bias_1_local_idx1_val108_fu_232 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal bias_2_local_idx_val109_fu_236 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal bias_2_local_idx4_val110_fu_240 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w1_local_0_fu_244 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w1_local_1_0_fu_248 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w1_local_2_0_fu_252 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w1_local_3_0_fu_256 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w2_local_0_fu_260 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w2_local_1_0_fu_264 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w2_local_2_0_fu_268 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w2_local_3_0_fu_272 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal grp_fu_617_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_646_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_716_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_660_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_954_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln94_fu_962_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_966_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln94_fu_984_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_990_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln94_1_fu_1006_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln94_16_fu_1010_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln94_20_fu_1016_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln94_8_fu_1020_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln94_12_fu_1026_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln94_1_fu_1000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_2_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_1044_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_1058_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_4_fu_1052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln94_fu_1038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln94_4_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln89_fu_950_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln106_fu_1092_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln94_1_fu_1109_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln94_1_fu_1114_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln94_2_fu_1124_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln94_2_fu_1129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln94_fu_1133_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal cond50_i_i315_fu_1138_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln94_3_fu_1144_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln94_2_fu_1147_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln94_1_fu_1153_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_9_fu_1167_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln94_1_fu_1175_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln94_3_fu_1183_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln94_3_fu_1188_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln94_16_fu_1163_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1194_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal LD_fu_1201_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln94_2_fu_1218_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln94_6_fu_1234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_4_fu_1228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1246_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln94_1_fu_1254_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1258_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln94_4_fu_1276_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1282_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln94_6_fu_1298_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln94_17_fu_1302_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln94_21_fu_1308_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln94_9_fu_1312_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln94_13_fu_1318_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln94_8_fu_1292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_7_fu_1324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1336_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1350_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_5_fu_1344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_3_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln94_1_fu_1330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln94_fu_1364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln94_5_fu_1388_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln94_5_fu_1393_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln94_6_fu_1403_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln94_6_fu_1408_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln94_1_fu_1412_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal cond50_i_i315_1_fu_1417_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln94_7_fu_1423_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln94_6_fu_1426_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln94_3_fu_1432_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_23_fu_1446_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln94_3_fu_1454_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln94_7_fu_1462_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln94_7_fu_1467_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln94_17_fu_1442_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_1473_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal LD_1_fu_1480_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln94_3_fu_1497_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln94_13_fu_1513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_11_fu_1507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1525_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln94_2_fu_1533_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_1537_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln94_8_fu_1555_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_1561_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln94_9_fu_1577_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln94_18_fu_1581_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln94_22_fu_1587_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln94_10_fu_1591_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln94_14_fu_1597_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln94_16_fu_1571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_12_fu_1603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1615_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1629_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_6_fu_1623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_6_fu_1637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln94_2_fu_1609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln94_5_fu_1643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln94_9_fu_1667_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln94_9_fu_1672_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln94_10_fu_1682_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln94_10_fu_1687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln94_2_fu_1691_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal cond50_i_i315_2_fu_1696_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln94_11_fu_1702_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln94_10_fu_1705_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln94_5_fu_1711_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_34_fu_1725_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln94_5_fu_1733_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln94_11_fu_1741_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln94_11_fu_1746_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln94_18_fu_1721_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_1752_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal LD_2_fu_1759_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln94_5_fu_1776_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln94_20_fu_1792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_18_fu_1786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1808_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln94_3_fu_1816_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_1820_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln94_12_fu_1838_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_1844_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln94_11_fu_1860_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln94_19_fu_1864_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln94_23_fu_1870_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln94_11_fu_1874_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln94_15_fu_1880_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln94_21_fu_1854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_17_fu_1886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_1898_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_1912_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_7_fu_1906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_9_fu_1920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln94_3_fu_1892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln94_6_fu_1926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln89_1_fu_1804_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln106_3_fu_1946_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln94_13_fu_1963_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln94_13_fu_1968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln94_14_fu_1978_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln94_14_fu_1983_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln94_3_fu_1987_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal cond50_i_i315_3_fu_1992_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln94_15_fu_1998_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln94_14_fu_2001_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln94_7_fu_2007_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_42_fu_2021_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln94_7_fu_2029_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln94_15_fu_2037_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln94_15_fu_2042_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln94_19_fu_2017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_2048_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal LD_3_fu_2055_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln94_7_fu_2072_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln94_23_fu_2088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_22_fu_2082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_1_fu_2112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln97_fu_2124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_fu_2136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_2_fu_2141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_array_inference_4_fu_2154_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_4_fu_2154_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_4_fu_2154_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_4_fu_2154_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln94_4_fu_2174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln97_1_fu_2186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_1_fu_2198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_5_fu_2203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_array_inference_5_fu_2216_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_5_fu_2216_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_5_fu_2216_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_5_fu_2216_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln94_7_fu_2236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln97_2_fu_2248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_2_fu_2260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_8_fu_2265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_array_inference_6_fu_2278_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_6_fu_2278_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_6_fu_2278_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_6_fu_2278_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln94_10_fu_2298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln97_3_fu_2310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln94_3_fu_2322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_11_fu_2327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_array_inference_7_fu_2340_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_7_fu_2340_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_7_fu_2340_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_inference_7_fu_2340_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_617_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_fsm_state84_blk : STD_LOGIC;
    signal ap_ST_fsm_state85_blk : STD_LOGIC;
    signal output_array_inference_4_fu_2154_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_array_inference_4_fu_2154_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_array_inference_4_fu_2154_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_array_inference_5_fu_2216_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_array_inference_5_fu_2216_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_array_inference_5_fu_2216_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_array_inference_6_fu_2278_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_array_inference_6_fu_2278_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_array_inference_6_fu_2278_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_array_inference_7_fu_2340_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_array_inference_7_fu_2340_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_array_inference_7_fu_2340_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component accelerator_model_array IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (15 downto 0);
        biases_0_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        biases_0_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        output_kmin1_0_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        output_kmin1_0_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        delta_k_0_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        delta_k_0_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        training : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component accelerator_dcmp_64ns_64ns_1_1_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component accelerator_sparsemux_7_2_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        def : IN STD_LOGIC_VECTOR (15 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    grp_model_array_fu_596 : component accelerator_model_array
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_model_array_fu_596_ap_start,
        ap_done => grp_model_array_fu_596_ap_done,
        ap_idle => grp_model_array_fu_596_ap_idle,
        ap_ready => grp_model_array_fu_596_ap_ready,
        ap_ce => ap_const_logic_1,
        p_read10 => grp_model_array_fu_596_p_read10,
        p_read29 => grp_model_array_fu_596_p_read29,
        p_read30 => grp_model_array_fu_596_p_read30,
        p_read31 => grp_model_array_fu_596_p_read31,
        biases_0_0_val => grp_model_array_fu_596_biases_0_0_val,
        biases_0_1_val => grp_model_array_fu_596_biases_0_1_val,
        output_kmin1_0_0_val => grp_model_array_fu_596_output_kmin1_0_0_val,
        output_kmin1_0_1_val => grp_model_array_fu_596_output_kmin1_0_1_val,
        delta_k_0_0_val => grp_model_array_fu_596_delta_k_0_0_val,
        delta_k_0_1_val => grp_model_array_fu_596_delta_k_0_1_val,
        training => training,
        ap_return_0 => grp_model_array_fu_596_ap_return_0,
        ap_return_1 => grp_model_array_fu_596_ap_return_1,
        ap_return_2 => grp_model_array_fu_596_ap_return_2,
        ap_return_3 => grp_model_array_fu_596_ap_return_3,
        ap_return_4 => grp_model_array_fu_596_ap_return_4,
        ap_return_5 => grp_model_array_fu_596_ap_return_5,
        ap_return_6 => grp_model_array_fu_596_ap_return_6,
        ap_return_7 => grp_model_array_fu_596_ap_return_7,
        ap_return_8 => grp_model_array_fu_596_ap_return_8,
        ap_return_9 => grp_model_array_fu_596_ap_return_9);

    dcmp_64ns_64ns_1_1_no_dsp_1_U49 : component accelerator_dcmp_64ns_64ns_1_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_617_p0,
        din1 => ap_const_lv64_3FE0000000000000,
        opcode => grp_fu_617_opcode,
        dout => grp_fu_617_p2);

    sparsemux_7_2_16_1_1_U50 : component accelerator_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_0,
        din1 => output_array_inference_4_fu_2154_p4,
        din2 => output_array_inference_4_fu_2154_p6,
        def => output_array_inference_4_fu_2154_p7,
        sel => output_array_inference_4_fu_2154_p8,
        dout => output_array_inference_4_fu_2154_p9);

    sparsemux_7_2_16_1_1_U51 : component accelerator_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_0,
        din1 => output_array_inference_5_fu_2216_p4,
        din2 => output_array_inference_5_fu_2216_p6,
        def => output_array_inference_5_fu_2216_p7,
        sel => output_array_inference_5_fu_2216_p8,
        dout => output_array_inference_5_fu_2216_p9);

    sparsemux_7_2_16_1_1_U52 : component accelerator_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_0,
        din1 => output_array_inference_6_fu_2278_p4,
        din2 => output_array_inference_6_fu_2278_p6,
        def => output_array_inference_6_fu_2278_p7,
        sel => output_array_inference_6_fu_2278_p8,
        dout => output_array_inference_6_fu_2278_p9);

    sparsemux_7_2_16_1_1_U53 : component accelerator_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_0,
        din1 => output_array_inference_7_fu_2340_p4,
        din2 => output_array_inference_7_fu_2340_p6,
        def => output_array_inference_7_fu_2340_p7,
        sel => output_array_inference_7_fu_2340_p8,
        dout => output_array_inference_7_fu_2340_p9);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
                    ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_588_p4;
                end if; 
            end if;
        end if;
    end process;


    grp_model_array_fu_596_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_model_array_fu_596_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln65_fu_890_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state3) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state78) and (ap_const_logic_1 = ap_CS_fsm_state77)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state73) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state68) and (ap_const_logic_1 = ap_CS_fsm_state67)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state63) and (ap_const_logic_1 = ap_CS_fsm_state62)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state58) and (ap_const_logic_1 = ap_CS_fsm_state57)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state53) and (ap_const_logic_1 = ap_CS_fsm_state52)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state48) and (ap_const_logic_1 = ap_CS_fsm_state47)) 
    or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state43) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state38) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state33) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state28) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state23) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state18) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state13) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_NS_fsm_state8) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
                    grp_model_array_fu_596_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_model_array_fu_596_ap_ready = ap_const_logic_1)) then 
                    grp_model_array_fu_596_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    UnifiedRetVal_reg_584_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
                UnifiedRetVal_reg_584 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
                UnifiedRetVal_reg_584 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    bias_1_local_idx1_val108_fu_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bias_1_local_idx1_val108_fu_232 <= bias_1_local_idx1_promoted147_reload;
            elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                bias_1_local_idx1_val108_fu_232 <= grp_model_array_fu_596_ap_return_9;
            end if; 
        end if;
    end process;

    bias_1_local_idx_val107_fu_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bias_1_local_idx_val107_fu_228 <= bias_1_local_idx_promoted145_reload;
            elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                bias_1_local_idx_val107_fu_228 <= grp_model_array_fu_596_ap_return_8;
            end if; 
        end if;
    end process;

    bias_2_local_idx4_val110_fu_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bias_2_local_idx4_val110_fu_240 <= bias_2_local_idx4_promoted151_reload;
            elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                bias_2_local_idx4_val110_fu_240 <= reg_780;
            end if; 
        end if;
    end process;

    bias_2_local_idx_val109_fu_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bias_2_local_idx_val109_fu_236 <= bias_2_local_idx_promoted149_reload;
            elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                bias_2_local_idx_val109_fu_236 <= reg_774;
            end if; 
        end if;
    end process;

    i_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_208 <= ap_const_lv9_0;
            elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                i_fu_208 <= i_2_reg_2652;
            end if; 
        end if;
    end process;

    w1_local_0_fu_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w1_local_0_fu_244 <= w1_local_2_reload;
            elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                w1_local_0_fu_244 <= grp_model_array_fu_596_ap_return_4;
            end if; 
        end if;
    end process;

    w1_local_1_0_fu_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w1_local_1_0_fu_248 <= w1_local_3_reload;
            elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                w1_local_1_0_fu_248 <= grp_model_array_fu_596_ap_return_5;
            end if; 
        end if;
    end process;

    w1_local_2_0_fu_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w1_local_2_0_fu_252 <= w1_local_reload;
            elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                w1_local_2_0_fu_252 <= grp_model_array_fu_596_ap_return_6;
            end if; 
        end if;
    end process;

    w1_local_3_0_fu_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w1_local_3_0_fu_256 <= w1_local_1_reload;
            elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                w1_local_3_0_fu_256 <= grp_model_array_fu_596_ap_return_7;
            end if; 
        end if;
    end process;

    w2_local_0_fu_260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w2_local_0_fu_260 <= w2_local_2_reload;
            elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                w2_local_0_fu_260 <= reg_750;
            end if; 
        end if;
    end process;

    w2_local_1_0_fu_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w2_local_1_0_fu_264 <= w2_local_3_reload;
            elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                w2_local_1_0_fu_264 <= reg_756;
            end if; 
        end if;
    end process;

    w2_local_2_0_fu_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w2_local_2_0_fu_268 <= w2_local_reload;
            elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                w2_local_2_0_fu_268 <= reg_762;
            end if; 
        end if;
    end process;

    w2_local_3_0_fu_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w2_local_3_0_fu_272 <= w2_local_1_reload;
            elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then 
                w2_local_3_0_fu_272 <= reg_768;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                bias_1_local_idx1_val108_load_1_reg_2663 <= bias_1_local_idx1_val108_fu_232;
                bias_1_local_idx_val107_load_1_reg_2657 <= bias_1_local_idx_val107_fu_228;
                w1_local_0_load_1_reg_2669 <= w1_local_0_fu_244;
                w1_local_1_0_load_1_reg_2675 <= w1_local_1_0_fu_248;
                w1_local_2_0_load_1_reg_2681 <= w1_local_2_0_fu_252;
                w1_local_3_0_load_1_reg_2687 <= w1_local_3_0_fu_256;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                bias_2_local_idx4_val110_load_1_reg_2699 <= bias_2_local_idx4_val110_fu_240;
                bias_2_local_idx_val109_load_1_reg_2693 <= bias_2_local_idx_val109_fu_236;
                w2_local_0_load_1_reg_2705 <= w2_local_0_fu_260;
                w2_local_1_0_load_1_reg_2711 <= w2_local_1_0_fu_264;
                w2_local_2_0_load_1_reg_2717 <= w2_local_2_0_fu_268;
                w2_local_3_0_load_1_reg_2723 <= w2_local_3_0_fu_272;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                bitcast_ln748_1_reg_2834 <= bitcast_ln748_1_fu_1492_p1;
                or_ln94_8_reg_2839 <= or_ln94_8_fu_1519_p2;
                tmp_17_reg_2845 <= grp_fu_617_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                bitcast_ln748_2_reg_2897 <= bitcast_ln748_2_fu_1771_p1;
                or_ln94_9_reg_2902 <= or_ln94_9_fu_1798_p2;
                tmp_27_reg_2908 <= grp_fu_617_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then
                bitcast_ln748_3_reg_2960 <= bitcast_ln748_3_fu_2067_p1;
                or_ln94_10_reg_2965 <= or_ln94_10_fu_2094_p2;
                tmp_37_reg_2971 <= grp_fu_617_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                bitcast_ln748_reg_2771 <= bitcast_ln748_fu_1213_p1;
                or_ln94_7_reg_2776 <= or_ln94_7_fu_1240_p2;
                tmp_7_reg_2782 <= grp_fu_617_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_2_reg_2652 <= i_2_fu_896_p2;
                icmp_ln65_reg_2648 <= icmp_ln65_fu_890_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                icmp_ln94_10_reg_2855 <= grp_fu_632_p2;
                icmp_ln94_14_reg_2882 <= icmp_ln94_14_fu_1657_p2;
                    or_ln94_2_reg_2877(0) <= or_ln94_2_fu_1649_p3(0);
                sub_ln94_9_reg_2871 <= sub_ln94_9_fu_1549_p2;
                tmp_24_reg_2861 <= grp_model_array_fu_596_ap_return_0(15 downto 15);
                trunc_ln94_8_reg_2866 <= trunc_ln94_8_fu_1545_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then
                icmp_ln94_15_reg_2918 <= grp_fu_632_p2;
                icmp_ln94_19_reg_2945 <= icmp_ln94_19_fu_1940_p2;
                    or_ln94_3_reg_2940(0) <= or_ln94_3_fu_1932_p3(0);
                sub_ln94_13_reg_2934 <= sub_ln94_13_fu_1832_p2;
                tmp_35_reg_2924 <= grp_model_array_fu_596_ap_return_0(15 downto 15);
                trunc_ln94_10_reg_2929 <= trunc_ln94_10_fu_1828_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                icmp_ln94_3_reg_2756 <= icmp_ln94_3_fu_1086_p2;
                icmp_ln94_reg_2729 <= grp_fu_632_p2;
                    or_ln_reg_2751(0) <= or_ln_fu_1078_p3(0);
                sub_ln94_1_reg_2745 <= sub_ln94_1_fu_978_p2;
                tmp_reg_2735 <= grp_model_array_fu_596_ap_return_0(15 downto 15);
                trunc_ln94_reg_2740 <= trunc_ln94_fu_974_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                icmp_ln94_5_reg_2792 <= grp_fu_632_p2;
                icmp_ln94_9_reg_2819 <= icmp_ln94_9_fu_1378_p2;
                    or_ln94_1_reg_2814(0) <= or_ln94_1_fu_1370_p3(0);
                sub_ln94_5_reg_2808 <= sub_ln94_5_fu_1270_p2;
                tmp_13_reg_2798 <= grp_model_array_fu_596_ap_return_0(15 downto 15);
                trunc_ln94_4_reg_2803 <= trunc_ln94_4_fu_1266_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                lshr_ln94_2_reg_2829 <= lshr_ln94_2_fu_1397_p2;
                    zext_ln94_4_reg_2824(15 downto 0) <= zext_ln94_4_fu_1384_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                lshr_ln94_4_reg_2892 <= lshr_ln94_4_fu_1676_p2;
                    zext_ln94_8_reg_2887(15 downto 0) <= zext_ln94_8_fu_1663_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state74)) then
                lshr_ln94_6_reg_2955 <= lshr_ln94_6_fu_1972_p2;
                    zext_ln94_12_reg_2950(15 downto 0) <= zext_ln94_12_fu_1959_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                lshr_ln94_reg_2766 <= lshr_ln94_fu_1118_p2;
                    zext_ln94_reg_2761(15 downto 0) <= zext_ln94_fu_1105_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then
                output_array_inference_1_fu_216 <= output_array_inference_6_fu_2278_p9;
                output_array_inference_2_fu_220 <= output_array_inference_5_fu_2216_p9;
                output_array_inference_3_fu_224 <= output_array_inference_4_fu_2154_p9;
                output_array_inference_fu_212 <= output_array_inference_7_fu_2340_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state83)) then
                output_array_inference_1_load_1_reg_2986 <= output_array_inference_1_fu_216;
                output_array_inference_2_load_1_reg_2991 <= output_array_inference_2_fu_220;
                output_array_inference_3_load_1_reg_2996 <= output_array_inference_3_fu_224;
                output_array_inference_4_reg_3001 <= output_array_inference_4_fu_2154_p9;
                output_array_inference_5_reg_3006 <= output_array_inference_5_fu_2216_p9;
                output_array_inference_6_reg_3011 <= output_array_inference_6_fu_2278_p9;
                output_array_inference_7_reg_3016 <= output_array_inference_7_fu_2340_p9;
                output_array_inference_load_1_reg_2981 <= output_array_inference_fu_212;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state8))) then
                reg_731 <= grp_model_array_fu_596_ap_return_0;
                reg_736 <= grp_model_array_fu_596_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state13))) then
                reg_741 <= grp_fu_652_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state18))) then
                reg_750 <= grp_model_array_fu_596_ap_return_4;
                reg_756 <= grp_model_array_fu_596_ap_return_5;
                reg_762 <= grp_model_array_fu_596_ap_return_6;
                reg_768 <= grp_model_array_fu_596_ap_return_7;
                reg_774 <= grp_model_array_fu_596_ap_return_8;
                reg_780 <= grp_model_array_fu_596_ap_return_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state23))) then
                reg_786 <= grp_model_array_fu_596_ap_return_4;
                reg_792 <= grp_model_array_fu_596_ap_return_5;
                reg_798 <= grp_model_array_fu_596_ap_return_6;
                reg_804 <= grp_model_array_fu_596_ap_return_7;
                reg_810 <= grp_model_array_fu_596_ap_return_8;
                reg_816 <= grp_model_array_fu_596_ap_return_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                tmp_18_reg_2850 <= grp_fu_617_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                tmp_28_reg_2913 <= grp_fu_617_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state76)) then
                tmp_38_reg_2976 <= grp_fu_617_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                tmp_8_reg_2787 <= grp_fu_617_p2;
            end if;
        end if;
    end process;
    or_ln_reg_2751(1) <= '0';
    zext_ln94_reg_2761(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    or_ln94_1_reg_2814(1) <= '0';
    zext_ln94_4_reg_2824(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    or_ln94_2_reg_2877(1) <= '0';
    zext_ln94_8_reg_2887(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    or_ln94_3_reg_2940(1) <= '0';
    zext_ln94_12_reg_2950(63 downto 16) <= "000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state83, cmp_i_i_read_read_fu_276_p2, icmp_ln65_reg_2648)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (cmp_i_i_read_read_fu_276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((icmp_ln65_reg_2648 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83))) then
                    ap_NS_fsm <= ap_ST_fsm_state85;
                else
                    ap_NS_fsm <= ap_ST_fsm_state84;
                end if;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    LD_1_fu_1480_p5 <= (tmp_16_fu_1473_p3 & zext_ln94_17_fu_1442_p1(51 downto 0));
    LD_2_fu_1759_p5 <= (tmp_26_fu_1752_p3 & zext_ln94_18_fu_1721_p1(51 downto 0));
    LD_3_fu_2055_p5 <= (tmp_36_fu_2048_p3 & zext_ln94_19_fu_2017_p1(51 downto 0));
    LD_fu_1201_p5 <= (tmp_s_fu_1194_p3 & zext_ln94_16_fu_1163_p1(51 downto 0));
    add_ln94_10_fu_1705_p2 <= std_logic_vector(unsigned(cond50_i_i315_2_fu_1696_p3) + unsigned(zext_ln94_11_fu_1702_p1));
    add_ln94_11_fu_1746_p2 <= std_logic_vector(unsigned(select_ln94_5_fu_1733_p3) + unsigned(sub_ln94_11_fu_1741_p2));
    add_ln94_12_fu_1838_p2 <= std_logic_vector(unsigned(sub_ln94_13_fu_1832_p2) + unsigned(ap_const_lv32_FFFFFFCB));
    add_ln94_13_fu_1963_p2 <= std_logic_vector(unsigned(sub_ln94_13_reg_2934) + unsigned(ap_const_lv32_FFFFFFCA));
    add_ln94_14_fu_2001_p2 <= std_logic_vector(unsigned(cond50_i_i315_3_fu_1992_p3) + unsigned(zext_ln94_15_fu_1998_p1));
    add_ln94_15_fu_2042_p2 <= std_logic_vector(unsigned(select_ln94_7_fu_2029_p3) + unsigned(sub_ln94_15_fu_2037_p2));
    add_ln94_1_fu_1109_p2 <= std_logic_vector(unsigned(sub_ln94_1_reg_2745) + unsigned(ap_const_lv32_FFFFFFCA));
    add_ln94_2_fu_1147_p2 <= std_logic_vector(unsigned(cond50_i_i315_fu_1138_p3) + unsigned(zext_ln94_3_fu_1144_p1));
    add_ln94_3_fu_1188_p2 <= std_logic_vector(unsigned(select_ln94_1_fu_1175_p3) + unsigned(sub_ln94_3_fu_1183_p2));
    add_ln94_4_fu_1276_p2 <= std_logic_vector(unsigned(sub_ln94_5_fu_1270_p2) + unsigned(ap_const_lv32_FFFFFFCB));
    add_ln94_5_fu_1388_p2 <= std_logic_vector(unsigned(sub_ln94_5_reg_2808) + unsigned(ap_const_lv32_FFFFFFCA));
    add_ln94_6_fu_1426_p2 <= std_logic_vector(unsigned(cond50_i_i315_1_fu_1417_p3) + unsigned(zext_ln94_7_fu_1423_p1));
    add_ln94_7_fu_1467_p2 <= std_logic_vector(unsigned(select_ln94_3_fu_1454_p3) + unsigned(sub_ln94_7_fu_1462_p2));
    add_ln94_8_fu_1555_p2 <= std_logic_vector(unsigned(sub_ln94_9_fu_1549_p2) + unsigned(ap_const_lv32_FFFFFFCB));
    add_ln94_9_fu_1667_p2 <= std_logic_vector(unsigned(sub_ln94_9_reg_2871) + unsigned(ap_const_lv32_FFFFFFCA));
    add_ln94_fu_984_p2 <= std_logic_vector(unsigned(sub_ln94_1_fu_978_p2) + unsigned(ap_const_lv32_FFFFFFCB));
    and_ln94_10_fu_2298_p2 <= (tmp_37_reg_2971 and or_ln94_10_reg_2965);
    and_ln94_11_fu_2327_p2 <= (xor_ln94_3_fu_2322_p2 and and_ln94_10_fu_2298_p2);
    and_ln94_12_fu_1026_p2 <= (lshr_ln94_8_fu_1020_p2 and grp_fu_652_p3);
    and_ln94_13_fu_1318_p2 <= (lshr_ln94_9_fu_1312_p2 and grp_fu_652_p3);
    and_ln94_14_fu_1597_p2 <= (lshr_ln94_10_fu_1591_p2 and grp_fu_652_p3);
    and_ln94_15_fu_1880_p2 <= (lshr_ln94_11_fu_1874_p2 and grp_fu_652_p3);
    and_ln94_1_fu_2112_p2 <= (tmp_7_reg_2782 and or_ln94_7_reg_2776);
    and_ln94_2_fu_2141_p2 <= (xor_ln94_fu_2136_p2 and and_ln94_1_fu_2112_p2);
    and_ln94_3_fu_1358_p2 <= (xor_ln94_5_fu_1344_p2 and tmp_19_fu_1350_p3);
    and_ln94_4_fu_2174_p2 <= (tmp_17_reg_2845 and or_ln94_8_reg_2839);
    and_ln94_5_fu_2203_p2 <= (xor_ln94_1_fu_2198_p2 and and_ln94_4_fu_2174_p2);
    and_ln94_6_fu_1637_p2 <= (xor_ln94_6_fu_1623_p2 and tmp_33_fu_1629_p3);
    and_ln94_7_fu_2236_p2 <= (tmp_27_reg_2908 and or_ln94_9_reg_2902);
    and_ln94_8_fu_2265_p2 <= (xor_ln94_2_fu_2260_p2 and and_ln94_7_fu_2236_p2);
    and_ln94_9_fu_1920_p2 <= (xor_ln94_7_fu_1906_p2 and tmp_41_fu_1912_p3);
    and_ln94_fu_1066_p2 <= (xor_ln94_4_fu_1052_p2 and tmp_6_fu_1058_p3);
    and_ln97_1_fu_2186_p2 <= (tmp_18_reg_2850 and or_ln94_8_reg_2839);
    and_ln97_2_fu_2248_p2 <= (tmp_28_reg_2913 and or_ln94_9_reg_2902);
    and_ln97_3_fu_2310_p2 <= (tmp_38_reg_2976 and or_ln94_10_reg_2965);
    and_ln97_fu_2124_p2 <= (tmp_8_reg_2787 and or_ln94_7_reg_2776);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_NS_fsm_state13 <= ap_NS_fsm(12);
    ap_NS_fsm_state18 <= ap_NS_fsm(17);
    ap_NS_fsm_state23 <= ap_NS_fsm(22);
    ap_NS_fsm_state28 <= ap_NS_fsm(27);
    ap_NS_fsm_state3 <= ap_NS_fsm(2);
    ap_NS_fsm_state33 <= ap_NS_fsm(32);
    ap_NS_fsm_state38 <= ap_NS_fsm(37);
    ap_NS_fsm_state43 <= ap_NS_fsm(42);
    ap_NS_fsm_state48 <= ap_NS_fsm(47);
    ap_NS_fsm_state53 <= ap_NS_fsm(52);
    ap_NS_fsm_state58 <= ap_NS_fsm(57);
    ap_NS_fsm_state63 <= ap_NS_fsm(62);
    ap_NS_fsm_state68 <= ap_NS_fsm(67);
    ap_NS_fsm_state73 <= ap_NS_fsm(72);
    ap_NS_fsm_state78 <= ap_NS_fsm(77);
    ap_NS_fsm_state8 <= ap_NS_fsm(7);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;
    ap_ST_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;
    ap_ST_fsm_state82_blk <= ap_const_logic_0;
    ap_ST_fsm_state83_blk <= ap_const_logic_0;
    ap_ST_fsm_state84_blk <= ap_const_logic_0;
    ap_ST_fsm_state85_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state84) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_UnifiedRetVal_phi_fu_588_p4_assign_proc : process(icmp_ln65_reg_2648, UnifiedRetVal_reg_584, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            ap_phi_mux_UnifiedRetVal_phi_fu_588_p4 <= ap_const_lv1_0;
        else 
            ap_phi_mux_UnifiedRetVal_phi_fu_588_p4 <= UnifiedRetVal_reg_584;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_UnifiedRetVal_phi_fu_588_p4, ap_CS_fsm_state84, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            ap_return <= ap_phi_mux_UnifiedRetVal_phi_fu_588_p4;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    array_back1_bias_change_8_out <= reg_810;

    array_back1_bias_change_8_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            array_back1_bias_change_8_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_bias_change_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_bias_change_9_out <= reg_816;

    array_back1_bias_change_9_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            array_back1_bias_change_9_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_bias_change_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_weight_changes_24_out <= reg_786;

    array_back1_weight_changes_24_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            array_back1_weight_changes_24_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_weight_changes_24_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_weight_changes_25_out <= reg_792;

    array_back1_weight_changes_25_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            array_back1_weight_changes_25_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_weight_changes_25_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_weight_changes_26_out <= reg_798;

    array_back1_weight_changes_26_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            array_back1_weight_changes_26_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_weight_changes_26_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_weight_changes_27_out <= reg_804;

    array_back1_weight_changes_27_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            array_back1_weight_changes_27_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_weight_changes_27_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_bias_change_8_out <= reg_774;

    array_back2_bias_change_8_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            array_back2_bias_change_8_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_bias_change_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_bias_change_9_out <= reg_780;

    array_back2_bias_change_9_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            array_back2_bias_change_9_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_bias_change_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_weight_changes_24_out <= reg_750;

    array_back2_weight_changes_24_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            array_back2_weight_changes_24_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_weight_changes_24_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_weight_changes_25_out <= reg_756;

    array_back2_weight_changes_25_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            array_back2_weight_changes_25_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_weight_changes_25_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_weight_changes_26_out <= reg_762;

    array_back2_weight_changes_26_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            array_back2_weight_changes_26_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_weight_changes_26_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_weight_changes_27_out <= reg_768;

    array_back2_weight_changes_27_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            array_back2_weight_changes_27_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_weight_changes_27_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bias_1_local_idx1_val108_out_assign_proc : process(icmp_ln65_reg_2648, bias_1_local_idx1_val108_load_1_reg_2663, ap_CS_fsm_state85, ap_CS_fsm_state84, bias_1_local_idx1_val108_fu_232)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            bias_1_local_idx1_val108_out <= bias_1_local_idx1_val108_fu_232;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            bias_1_local_idx1_val108_out <= bias_1_local_idx1_val108_load_1_reg_2663;
        else 
            bias_1_local_idx1_val108_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_1_local_idx1_val108_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            bias_1_local_idx1_val108_out_ap_vld <= ap_const_logic_1;
        else 
            bias_1_local_idx1_val108_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bias_1_local_idx_val107_out_assign_proc : process(icmp_ln65_reg_2648, bias_1_local_idx_val107_load_1_reg_2657, ap_CS_fsm_state85, ap_CS_fsm_state84, bias_1_local_idx_val107_fu_228)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            bias_1_local_idx_val107_out <= bias_1_local_idx_val107_fu_228;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            bias_1_local_idx_val107_out <= bias_1_local_idx_val107_load_1_reg_2657;
        else 
            bias_1_local_idx_val107_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_1_local_idx_val107_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            bias_1_local_idx_val107_out_ap_vld <= ap_const_logic_1;
        else 
            bias_1_local_idx_val107_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bias_2_local_idx4_val110_out_assign_proc : process(icmp_ln65_reg_2648, bias_2_local_idx4_val110_load_1_reg_2699, ap_CS_fsm_state85, ap_CS_fsm_state84, bias_2_local_idx4_val110_fu_240)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            bias_2_local_idx4_val110_out <= bias_2_local_idx4_val110_fu_240;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            bias_2_local_idx4_val110_out <= bias_2_local_idx4_val110_load_1_reg_2699;
        else 
            bias_2_local_idx4_val110_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_2_local_idx4_val110_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            bias_2_local_idx4_val110_out_ap_vld <= ap_const_logic_1;
        else 
            bias_2_local_idx4_val110_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bias_2_local_idx_val109_out_assign_proc : process(icmp_ln65_reg_2648, bias_2_local_idx_val109_load_1_reg_2693, ap_CS_fsm_state85, ap_CS_fsm_state84, bias_2_local_idx_val109_fu_236)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            bias_2_local_idx_val109_out <= bias_2_local_idx_val109_fu_236;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            bias_2_local_idx_val109_out <= bias_2_local_idx_val109_load_1_reg_2693;
        else 
            bias_2_local_idx_val109_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_2_local_idx_val109_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            bias_2_local_idx_val109_out_ap_vld <= ap_const_logic_1;
        else 
            bias_2_local_idx_val109_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln748_1_fu_1492_p1 <= LD_1_fu_1480_p5;
    bitcast_ln748_2_fu_1771_p1 <= LD_2_fu_1759_p5;
    bitcast_ln748_3_fu_2067_p1 <= LD_3_fu_2055_p5;
    bitcast_ln748_fu_1213_p1 <= LD_fu_1201_p5;
    cmp_i_i_read_read_fu_276_p2 <= cmp_i_i;
    cond50_i_i315_1_fu_1417_p3 <= 
        lshr_ln94_2_reg_2829 when (icmp_ln94_9_reg_2819(0) = '1') else 
        shl_ln94_1_fu_1412_p2;
    cond50_i_i315_2_fu_1696_p3 <= 
        lshr_ln94_4_reg_2892 when (icmp_ln94_14_reg_2882(0) = '1') else 
        shl_ln94_2_fu_1691_p2;
    cond50_i_i315_3_fu_1992_p3 <= 
        lshr_ln94_6_reg_2955 when (icmp_ln94_19_reg_2945(0) = '1') else 
        shl_ln94_3_fu_1987_p2;
    cond50_i_i315_fu_1138_p3 <= 
        lshr_ln94_reg_2766 when (icmp_ln94_3_reg_2756(0) = '1') else 
        shl_ln94_fu_1133_p2;

    grp_fu_617_opcode_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state75, ap_CS_fsm_state76)
    begin
        if ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state76)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            grp_fu_617_opcode <= ap_const_lv5_5;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state75)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            grp_fu_617_opcode <= ap_const_lv5_2;
        else 
            grp_fu_617_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_617_p0_assign_proc : process(bitcast_ln748_fu_1213_p1, bitcast_ln748_reg_2771, ap_CS_fsm_state15, ap_CS_fsm_state16, bitcast_ln748_1_fu_1492_p1, bitcast_ln748_1_reg_2834, ap_CS_fsm_state35, ap_CS_fsm_state36, bitcast_ln748_2_fu_1771_p1, bitcast_ln748_2_reg_2897, ap_CS_fsm_state55, ap_CS_fsm_state56, bitcast_ln748_3_fu_2067_p1, bitcast_ln748_3_reg_2960, ap_CS_fsm_state75, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_fu_617_p0 <= bitcast_ln748_3_reg_2960;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            grp_fu_617_p0 <= bitcast_ln748_3_fu_2067_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            grp_fu_617_p0 <= bitcast_ln748_2_reg_2897;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_617_p0 <= bitcast_ln748_2_fu_1771_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_617_p0 <= bitcast_ln748_1_reg_2834;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_617_p0 <= bitcast_ln748_1_fu_1492_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_617_p0 <= bitcast_ln748_reg_2771;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_617_p0 <= bitcast_ln748_fu_1213_p1;
        else 
            grp_fu_617_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_632_p2 <= "1" when (grp_model_array_fu_596_ap_return_0 = ap_const_lv16_0) else "0";
    grp_fu_638_p3 <= grp_model_array_fu_596_ap_return_0(15 downto 15);
    grp_fu_646_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(grp_model_array_fu_596_ap_return_0));
    grp_fu_652_p3 <= 
        grp_fu_646_p2 when (grp_fu_638_p3(0) = '1') else 
        grp_model_array_fu_596_ap_return_0;
    
    grp_fu_660_p4_proc : process(grp_fu_652_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable grp_fu_660_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := grp_fu_652_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for grp_fu_660_p4_i in 0 to 16-1 loop
                v0_cpy(grp_fu_660_p4_i) := grp_fu_652_p3(16-1-grp_fu_660_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        grp_fu_660_p4 <= resvalue(16-1 downto 0);
    end process;

    grp_fu_670_p2 <= "1" when (signed(grp_model_array_fu_596_ap_return_0) > signed(ap_const_lv16_0)) else "0";
    grp_fu_716_p2 <= std_logic_vector(unsigned(grp_model_array_fu_596_ap_return_0) + unsigned(ap_const_lv16_FE00));
    grp_fu_722_p3 <= 
        grp_fu_716_p2 when (grp_fu_670_p2(0) = '1') else 
        ap_const_lv16_0;
    grp_model_array_fu_596_ap_start <= grp_model_array_fu_596_ap_start_reg;

    grp_model_array_fu_596_biases_0_0_val_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state28, ap_CS_fsm_state48, ap_CS_fsm_state68, ap_CS_fsm_state13, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state73, ap_CS_fsm_state18, ap_CS_fsm_state38, ap_CS_fsm_state58, ap_CS_fsm_state78, reg_774, ap_CS_fsm_state23, ap_CS_fsm_state43, ap_CS_fsm_state63, reg_810, icmp_ln65_reg_2648, bias_1_local_idx_val107_load_1_reg_2657, ap_CS_fsm_state3, bias_2_local_idx_val109_load_1_reg_2693, grp_model_array_fu_596_ap_return_8, bias_1_local_idx_val107_fu_228, bias_2_local_idx_val109_fu_236)
    begin
        if ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state58)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            grp_model_array_fu_596_biases_0_0_val <= reg_810;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28)))) then 
            grp_model_array_fu_596_biases_0_0_val <= reg_774;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
            grp_model_array_fu_596_biases_0_0_val <= grp_model_array_fu_596_ap_return_8;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            grp_model_array_fu_596_biases_0_0_val <= bias_1_local_idx_val107_load_1_reg_2657;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_model_array_fu_596_biases_0_0_val <= bias_2_local_idx_val109_load_1_reg_2693;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_model_array_fu_596_biases_0_0_val <= bias_2_local_idx_val109_fu_236;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_model_array_fu_596_biases_0_0_val <= bias_1_local_idx_val107_fu_228;
        else 
            grp_model_array_fu_596_biases_0_0_val <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_596_biases_0_1_val_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state28, ap_CS_fsm_state48, ap_CS_fsm_state68, ap_CS_fsm_state13, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state73, ap_CS_fsm_state18, ap_CS_fsm_state38, ap_CS_fsm_state58, ap_CS_fsm_state78, reg_780, ap_CS_fsm_state23, ap_CS_fsm_state43, ap_CS_fsm_state63, reg_816, icmp_ln65_reg_2648, ap_CS_fsm_state3, bias_1_local_idx1_val108_load_1_reg_2663, bias_2_local_idx4_val110_load_1_reg_2699, grp_model_array_fu_596_ap_return_9, bias_1_local_idx1_val108_fu_232, bias_2_local_idx4_val110_fu_240)
    begin
        if ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state58)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            grp_model_array_fu_596_biases_0_1_val <= reg_816;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28)))) then 
            grp_model_array_fu_596_biases_0_1_val <= reg_780;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
            grp_model_array_fu_596_biases_0_1_val <= grp_model_array_fu_596_ap_return_9;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            grp_model_array_fu_596_biases_0_1_val <= bias_1_local_idx1_val108_load_1_reg_2663;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_model_array_fu_596_biases_0_1_val <= bias_2_local_idx4_val110_load_1_reg_2699;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_model_array_fu_596_biases_0_1_val <= bias_2_local_idx4_val110_fu_240;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_model_array_fu_596_biases_0_1_val <= bias_1_local_idx1_val108_fu_232;
        else 
            grp_model_array_fu_596_biases_0_1_val <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_596_delta_k_0_0_val_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state28, ap_CS_fsm_state48, ap_CS_fsm_state68, ap_CS_fsm_state13, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state73, ap_CS_fsm_state18, ap_CS_fsm_state38, ap_CS_fsm_state58, ap_CS_fsm_state78, ap_CS_fsm_state23, ap_CS_fsm_state43, ap_CS_fsm_state63, icmp_ln65_reg_2648, ap_CS_fsm_state3, grp_model_array_fu_596_ap_return_2, zext_ln124_fu_1100_p1, grp_fu_722_p3, zext_ln124_1_fu_1954_p1)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            grp_model_array_fu_596_delta_k_0_0_val <= zext_ln124_1_fu_1954_p1;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            grp_model_array_fu_596_delta_k_0_0_val <= grp_fu_722_p3;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state58)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then 
            grp_model_array_fu_596_delta_k_0_0_val <= grp_model_array_fu_596_ap_return_2;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_model_array_fu_596_delta_k_0_0_val <= zext_ln124_fu_1100_p1;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            grp_model_array_fu_596_delta_k_0_0_val <= ap_const_lv16_0;
        else 
            grp_model_array_fu_596_delta_k_0_0_val <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_596_delta_k_0_1_val_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state28, ap_CS_fsm_state48, ap_CS_fsm_state68, ap_CS_fsm_state13, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state73, ap_CS_fsm_state18, ap_CS_fsm_state38, ap_CS_fsm_state58, ap_CS_fsm_state78, ap_CS_fsm_state23, ap_CS_fsm_state43, ap_CS_fsm_state63, icmp_ln65_reg_2648, ap_CS_fsm_state3, grp_model_array_fu_596_ap_return_3)
    begin
        if ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state58)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then 
            grp_model_array_fu_596_delta_k_0_1_val <= grp_model_array_fu_596_ap_return_3;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            grp_model_array_fu_596_delta_k_0_1_val <= ap_const_lv16_0;
        else 
            grp_model_array_fu_596_delta_k_0_1_val <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_596_output_kmin1_0_0_val_assign_proc : process(reg_731, ap_CS_fsm_state8, ap_CS_fsm_state28, ap_CS_fsm_state48, ap_CS_fsm_state68, ap_CS_fsm_state13, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state73, ap_CS_fsm_state18, ap_CS_fsm_state38, ap_CS_fsm_state58, ap_CS_fsm_state78, ap_CS_fsm_state23, ap_CS_fsm_state43, ap_CS_fsm_state63, icmp_ln65_reg_2648, ap_CS_fsm_state3, grp_model_array_fu_596_ap_return_0)
    begin
        if ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state58)))) then 
            grp_model_array_fu_596_output_kmin1_0_0_val <= ap_const_lv16_200;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            grp_model_array_fu_596_output_kmin1_0_0_val <= reg_731;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            grp_model_array_fu_596_output_kmin1_0_0_val <= grp_model_array_fu_596_ap_return_0;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then 
            grp_model_array_fu_596_output_kmin1_0_0_val <= ap_const_lv16_0;
        else 
            grp_model_array_fu_596_output_kmin1_0_0_val <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_596_output_kmin1_0_1_val_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state28, ap_CS_fsm_state48, ap_CS_fsm_state68, reg_736, ap_CS_fsm_state13, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state73, ap_CS_fsm_state18, ap_CS_fsm_state38, ap_CS_fsm_state58, ap_CS_fsm_state78, ap_CS_fsm_state23, ap_CS_fsm_state43, ap_CS_fsm_state63, icmp_ln65_reg_2648, ap_CS_fsm_state3, grp_model_array_fu_596_ap_return_1)
    begin
        if ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            grp_model_array_fu_596_output_kmin1_0_1_val <= ap_const_lv16_200;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            grp_model_array_fu_596_output_kmin1_0_1_val <= reg_736;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            grp_model_array_fu_596_output_kmin1_0_1_val <= grp_model_array_fu_596_ap_return_1;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state58)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then 
            grp_model_array_fu_596_output_kmin1_0_1_val <= ap_const_lv16_0;
        else 
            grp_model_array_fu_596_output_kmin1_0_1_val <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_596_p_read10_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state28, ap_CS_fsm_state48, ap_CS_fsm_state68, ap_CS_fsm_state13, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state73, ap_CS_fsm_state18, ap_CS_fsm_state38, ap_CS_fsm_state58, ap_CS_fsm_state78, reg_750, reg_786, ap_CS_fsm_state23, ap_CS_fsm_state43, ap_CS_fsm_state63, icmp_ln65_reg_2648, ap_CS_fsm_state3, w1_local_0_load_1_reg_2669, w2_local_0_load_1_reg_2705, grp_model_array_fu_596_ap_return_4, w1_local_0_fu_244, w2_local_0_fu_260)
    begin
        if ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state58)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            grp_model_array_fu_596_p_read10 <= reg_786;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28)))) then 
            grp_model_array_fu_596_p_read10 <= reg_750;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
            grp_model_array_fu_596_p_read10 <= grp_model_array_fu_596_ap_return_4;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            grp_model_array_fu_596_p_read10 <= w1_local_0_load_1_reg_2669;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_model_array_fu_596_p_read10 <= w2_local_0_load_1_reg_2705;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_model_array_fu_596_p_read10 <= w2_local_0_fu_260;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_model_array_fu_596_p_read10 <= w1_local_0_fu_244;
        else 
            grp_model_array_fu_596_p_read10 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_596_p_read29_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state28, ap_CS_fsm_state48, ap_CS_fsm_state68, ap_CS_fsm_state13, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state73, ap_CS_fsm_state18, ap_CS_fsm_state38, ap_CS_fsm_state58, ap_CS_fsm_state78, reg_756, ap_CS_fsm_state23, ap_CS_fsm_state43, ap_CS_fsm_state63, reg_792, icmp_ln65_reg_2648, ap_CS_fsm_state3, w1_local_1_0_load_1_reg_2675, w2_local_1_0_load_1_reg_2711, grp_model_array_fu_596_ap_return_5, w1_local_1_0_fu_248, w2_local_1_0_fu_264)
    begin
        if ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state58)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            grp_model_array_fu_596_p_read29 <= reg_792;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28)))) then 
            grp_model_array_fu_596_p_read29 <= reg_756;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
            grp_model_array_fu_596_p_read29 <= grp_model_array_fu_596_ap_return_5;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            grp_model_array_fu_596_p_read29 <= w1_local_1_0_load_1_reg_2675;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_model_array_fu_596_p_read29 <= w2_local_1_0_load_1_reg_2711;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_model_array_fu_596_p_read29 <= w2_local_1_0_fu_264;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_model_array_fu_596_p_read29 <= w1_local_1_0_fu_248;
        else 
            grp_model_array_fu_596_p_read29 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_596_p_read30_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state28, ap_CS_fsm_state48, ap_CS_fsm_state68, ap_CS_fsm_state13, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state73, ap_CS_fsm_state18, ap_CS_fsm_state38, ap_CS_fsm_state58, ap_CS_fsm_state78, reg_762, ap_CS_fsm_state23, ap_CS_fsm_state43, ap_CS_fsm_state63, reg_798, icmp_ln65_reg_2648, ap_CS_fsm_state3, w1_local_2_0_load_1_reg_2681, w2_local_2_0_load_1_reg_2717, grp_model_array_fu_596_ap_return_6, w1_local_2_0_fu_252, w2_local_2_0_fu_268)
    begin
        if ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state58)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            grp_model_array_fu_596_p_read30 <= reg_798;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28)))) then 
            grp_model_array_fu_596_p_read30 <= reg_762;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
            grp_model_array_fu_596_p_read30 <= grp_model_array_fu_596_ap_return_6;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            grp_model_array_fu_596_p_read30 <= w1_local_2_0_load_1_reg_2681;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_model_array_fu_596_p_read30 <= w2_local_2_0_load_1_reg_2717;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_model_array_fu_596_p_read30 <= w2_local_2_0_fu_268;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_model_array_fu_596_p_read30 <= w1_local_2_0_fu_252;
        else 
            grp_model_array_fu_596_p_read30 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_596_p_read31_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state28, ap_CS_fsm_state48, ap_CS_fsm_state68, ap_CS_fsm_state13, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state73, ap_CS_fsm_state18, ap_CS_fsm_state38, ap_CS_fsm_state58, ap_CS_fsm_state78, reg_768, ap_CS_fsm_state23, ap_CS_fsm_state43, ap_CS_fsm_state63, reg_804, icmp_ln65_reg_2648, ap_CS_fsm_state3, w1_local_3_0_load_1_reg_2687, w2_local_3_0_load_1_reg_2723, grp_model_array_fu_596_ap_return_7, w1_local_3_0_fu_256, w2_local_3_0_fu_272)
    begin
        if ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state78)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state58)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            grp_model_array_fu_596_p_read31 <= reg_804;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28)))) then 
            grp_model_array_fu_596_p_read31 <= reg_768;
        elsif ((((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
            grp_model_array_fu_596_p_read31 <= grp_model_array_fu_596_ap_return_7;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            grp_model_array_fu_596_p_read31 <= w1_local_3_0_load_1_reg_2687;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_model_array_fu_596_p_read31 <= w2_local_3_0_load_1_reg_2723;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_model_array_fu_596_p_read31 <= w2_local_3_0_fu_272;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_model_array_fu_596_p_read31 <= w1_local_3_0_fu_256;
        else 
            grp_model_array_fu_596_p_read31 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_2_fu_896_p2 <= std_logic_vector(unsigned(i_fu_208) + unsigned(ap_const_lv9_1));
    icmp_ln65_fu_890_p2 <= "1" when (i_fu_208 = ap_const_lv9_1F4) else "0";
    icmp_ln94_11_fu_1507_p2 <= "0" when (add_ln94_7_fu_1467_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln94_12_fu_1603_p2 <= "0" when (and_ln94_14_fu_1597_p2 = ap_const_lv16_0) else "1";
    icmp_ln94_13_fu_1513_p2 <= "1" when (trunc_ln94_3_fu_1497_p4 = ap_const_lv52_0) else "0";
    icmp_ln94_14_fu_1657_p2 <= "1" when (signed(add_ln94_8_fu_1555_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln94_16_fu_1571_p2 <= "1" when (signed(tmp_25_fu_1561_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln94_17_fu_1886_p2 <= "0" when (and_ln94_15_fu_1880_p2 = ap_const_lv16_0) else "1";
    icmp_ln94_18_fu_1786_p2 <= "0" when (add_ln94_11_fu_1746_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln94_19_fu_1940_p2 <= "1" when (signed(add_ln94_12_fu_1838_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln94_1_fu_1000_p2 <= "1" when (signed(tmp_4_fu_990_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln94_20_fu_1792_p2 <= "1" when (trunc_ln94_5_fu_1776_p4 = ap_const_lv52_0) else "0";
    icmp_ln94_21_fu_1854_p2 <= "1" when (signed(tmp_39_fu_1844_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln94_22_fu_2082_p2 <= "0" when (add_ln94_15_fu_2042_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln94_23_fu_2088_p2 <= "1" when (trunc_ln94_7_fu_2072_p4 = ap_const_lv52_0) else "0";
    icmp_ln94_2_fu_1032_p2 <= "0" when (and_ln94_12_fu_1026_p2 = ap_const_lv16_0) else "1";
    icmp_ln94_3_fu_1086_p2 <= "1" when (signed(add_ln94_fu_984_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln94_4_fu_1228_p2 <= "0" when (add_ln94_3_fu_1188_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln94_6_fu_1234_p2 <= "1" when (trunc_ln94_2_fu_1218_p4 = ap_const_lv52_0) else "0";
    icmp_ln94_7_fu_1324_p2 <= "0" when (and_ln94_13_fu_1318_p2 = ap_const_lv16_0) else "1";
    icmp_ln94_8_fu_1292_p2 <= "1" when (signed(tmp_14_fu_1282_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln94_9_fu_1378_p2 <= "1" when (signed(add_ln94_4_fu_1276_p2) > signed(ap_const_lv32_0)) else "0";
    lshr_ln94_10_fu_1591_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & zext_ln94_22_fu_1587_p1(16-1 downto 0)))));
    lshr_ln94_11_fu_1874_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & zext_ln94_23_fu_1870_p1(16-1 downto 0)))));
    lshr_ln94_1_fu_1153_p4 <= add_ln94_2_fu_1147_p2(63 downto 1);
    lshr_ln94_2_fu_1397_p2 <= std_logic_vector(shift_right(unsigned(zext_ln94_4_fu_1384_p1),to_integer(unsigned('0' & zext_ln94_5_fu_1393_p1(31-1 downto 0)))));
    lshr_ln94_3_fu_1432_p4 <= add_ln94_6_fu_1426_p2(63 downto 1);
    lshr_ln94_4_fu_1676_p2 <= std_logic_vector(shift_right(unsigned(zext_ln94_8_fu_1663_p1),to_integer(unsigned('0' & zext_ln94_9_fu_1672_p1(31-1 downto 0)))));
    lshr_ln94_5_fu_1711_p4 <= add_ln94_10_fu_1705_p2(63 downto 1);
    lshr_ln94_6_fu_1972_p2 <= std_logic_vector(shift_right(unsigned(zext_ln94_12_fu_1959_p1),to_integer(unsigned('0' & zext_ln94_13_fu_1968_p1(31-1 downto 0)))));
    lshr_ln94_7_fu_2007_p4 <= add_ln94_14_fu_2001_p2(63 downto 1);
    lshr_ln94_8_fu_1020_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & zext_ln94_20_fu_1016_p1(16-1 downto 0)))));
    lshr_ln94_9_fu_1312_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & zext_ln94_21_fu_1308_p1(16-1 downto 0)))));
    lshr_ln94_fu_1118_p2 <= std_logic_vector(shift_right(unsigned(zext_ln94_fu_1105_p1),to_integer(unsigned('0' & zext_ln94_1_fu_1114_p1(31-1 downto 0)))));
    or_ln94_10_fu_2094_p2 <= (icmp_ln94_23_fu_2088_p2 or icmp_ln94_22_fu_2082_p2);
    or_ln94_1_fu_1370_p3 <= (ap_const_lv1_0 & or_ln94_fu_1364_p2);
    or_ln94_2_fu_1649_p3 <= (ap_const_lv1_0 & or_ln94_5_fu_1643_p2);
    or_ln94_3_fu_1932_p3 <= (ap_const_lv1_0 & or_ln94_6_fu_1926_p2);
    or_ln94_4_fu_1072_p2 <= (phi_ln94_fu_1038_p2 or and_ln94_fu_1066_p2);
    or_ln94_5_fu_1643_p2 <= (phi_ln94_2_fu_1609_p2 or and_ln94_6_fu_1637_p2);
    or_ln94_6_fu_1926_p2 <= (phi_ln94_3_fu_1892_p2 or and_ln94_9_fu_1920_p2);
    or_ln94_7_fu_1240_p2 <= (icmp_ln94_6_fu_1234_p2 or icmp_ln94_4_fu_1228_p2);
    or_ln94_8_fu_1519_p2 <= (icmp_ln94_13_fu_1513_p2 or icmp_ln94_11_fu_1507_p2);
    or_ln94_9_fu_1798_p2 <= (icmp_ln94_20_fu_1792_p2 or icmp_ln94_18_fu_1786_p2);
    or_ln94_fu_1364_p2 <= (phi_ln94_1_fu_1330_p2 or and_ln94_3_fu_1358_p2);
    or_ln_fu_1078_p3 <= (ap_const_lv1_0 & or_ln94_4_fu_1072_p2);

    output_array_inference_1_out_assign_proc : process(icmp_ln65_reg_2648, output_array_inference_1_load_1_reg_2986, ap_CS_fsm_state85, ap_CS_fsm_state84, output_array_inference_1_fu_216)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            output_array_inference_1_out <= output_array_inference_1_fu_216;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            output_array_inference_1_out <= output_array_inference_1_load_1_reg_2986;
        else 
            output_array_inference_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_array_inference_1_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            output_array_inference_1_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_inference_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    output_array_inference_2_out_assign_proc : process(icmp_ln65_reg_2648, output_array_inference_2_load_1_reg_2991, ap_CS_fsm_state85, ap_CS_fsm_state84, output_array_inference_2_fu_220)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            output_array_inference_2_out <= output_array_inference_2_fu_220;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            output_array_inference_2_out <= output_array_inference_2_load_1_reg_2991;
        else 
            output_array_inference_2_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_array_inference_2_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            output_array_inference_2_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_inference_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    output_array_inference_3_out_assign_proc : process(icmp_ln65_reg_2648, output_array_inference_3_load_1_reg_2996, ap_CS_fsm_state85, ap_CS_fsm_state84, output_array_inference_3_fu_224)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            output_array_inference_3_out <= output_array_inference_3_fu_224;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            output_array_inference_3_out <= output_array_inference_3_load_1_reg_2996;
        else 
            output_array_inference_3_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_array_inference_3_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            output_array_inference_3_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_inference_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_inference_4_fu_2154_p4 <= 
        ap_const_lv16_200 when (and_ln94_1_fu_2112_p2(0) = '1') else 
        ap_const_lv16_0;
    output_array_inference_4_fu_2154_p6 <= 
        ap_const_lv16_0 when (and_ln97_fu_2124_p2(0) = '1') else 
        output_array_inference_3_fu_224;
    output_array_inference_4_fu_2154_p7 <= "XXXXXXXXXXXXXXXX";
    output_array_inference_4_fu_2154_p8 <= (icmp_ln94_reg_2729 & and_ln94_2_fu_2141_p2);
    output_array_inference_4_out <= output_array_inference_4_reg_3001;

    output_array_inference_4_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            output_array_inference_4_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_inference_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_inference_5_fu_2216_p4 <= 
        ap_const_lv16_200 when (and_ln94_4_fu_2174_p2(0) = '1') else 
        ap_const_lv16_0;
    output_array_inference_5_fu_2216_p6 <= 
        ap_const_lv16_0 when (and_ln97_1_fu_2186_p2(0) = '1') else 
        output_array_inference_2_fu_220;
    output_array_inference_5_fu_2216_p7 <= "XXXXXXXXXXXXXXXX";
    output_array_inference_5_fu_2216_p8 <= (icmp_ln94_5_reg_2792 & and_ln94_5_fu_2203_p2);
    output_array_inference_5_out <= output_array_inference_5_reg_3006;

    output_array_inference_5_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            output_array_inference_5_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_inference_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_inference_6_fu_2278_p4 <= 
        ap_const_lv16_200 when (and_ln94_7_fu_2236_p2(0) = '1') else 
        ap_const_lv16_0;
    output_array_inference_6_fu_2278_p6 <= 
        ap_const_lv16_0 when (and_ln97_2_fu_2248_p2(0) = '1') else 
        output_array_inference_1_fu_216;
    output_array_inference_6_fu_2278_p7 <= "XXXXXXXXXXXXXXXX";
    output_array_inference_6_fu_2278_p8 <= (icmp_ln94_10_reg_2855 & and_ln94_8_fu_2265_p2);
    output_array_inference_6_out <= output_array_inference_6_reg_3011;

    output_array_inference_6_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            output_array_inference_6_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_inference_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_inference_7_fu_2340_p4 <= 
        ap_const_lv16_200 when (and_ln94_10_fu_2298_p2(0) = '1') else 
        ap_const_lv16_0;
    output_array_inference_7_fu_2340_p6 <= 
        ap_const_lv16_0 when (and_ln97_3_fu_2310_p2(0) = '1') else 
        output_array_inference_fu_212;
    output_array_inference_7_fu_2340_p7 <= "XXXXXXXXXXXXXXXX";
    output_array_inference_7_fu_2340_p8 <= (icmp_ln94_15_reg_2918 & and_ln94_11_fu_2327_p2);
    output_array_inference_7_out <= output_array_inference_7_reg_3016;

    output_array_inference_7_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state84)
    begin
        if (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            output_array_inference_7_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_inference_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    output_array_inference_out_assign_proc : process(icmp_ln65_reg_2648, output_array_inference_load_1_reg_2981, ap_CS_fsm_state85, ap_CS_fsm_state84, output_array_inference_fu_212)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            output_array_inference_out <= output_array_inference_fu_212;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            output_array_inference_out <= output_array_inference_load_1_reg_2981;
        else 
            output_array_inference_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_array_inference_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            output_array_inference_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_inference_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    phi_ln94_1_fu_1330_p2 <= (icmp_ln94_8_fu_1292_p2 and icmp_ln94_7_fu_1324_p2);
    phi_ln94_2_fu_1609_p2 <= (icmp_ln94_16_fu_1571_p2 and icmp_ln94_12_fu_1603_p2);
    phi_ln94_3_fu_1892_p2 <= (icmp_ln94_21_fu_1854_p2 and icmp_ln94_17_fu_1886_p2);
    phi_ln94_fu_1038_p2 <= (icmp_ln94_2_fu_1032_p2 and icmp_ln94_1_fu_1000_p2);
    select_ln106_3_fu_1946_p3 <= 
        trunc_ln89_1_fu_1804_p1 when (grp_fu_670_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln106_fu_1092_p3 <= 
        trunc_ln89_fu_950_p1 when (grp_fu_670_p2(0) = '1') else 
        ap_const_lv15_0;
    select_ln94_1_fu_1175_p3 <= 
        ap_const_lv11_3FF when (tmp_9_fu_1167_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln94_3_fu_1454_p3 <= 
        ap_const_lv11_3FF when (tmp_23_fu_1446_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln94_5_fu_1733_p3 <= 
        ap_const_lv11_3FF when (tmp_34_fu_1725_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln94_7_fu_2029_p3 <= 
        ap_const_lv11_3FF when (tmp_42_fu_2021_p3(0) = '1') else 
        ap_const_lv11_3FE;
        sext_ln94_1_fu_1254_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_11_fu_1246_p3),32));

        sext_ln94_2_fu_1533_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_fu_1525_p3),32));

        sext_ln94_3_fu_1816_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_31_fu_1808_p3),32));

        sext_ln94_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_954_p3),32));

    shl_ln94_1_fu_1412_p2 <= std_logic_vector(shift_left(unsigned(zext_ln94_4_reg_2824),to_integer(unsigned('0' & zext_ln94_6_fu_1408_p1(31-1 downto 0)))));
    shl_ln94_2_fu_1691_p2 <= std_logic_vector(shift_left(unsigned(zext_ln94_8_reg_2887),to_integer(unsigned('0' & zext_ln94_10_fu_1687_p1(31-1 downto 0)))));
    shl_ln94_3_fu_1987_p2 <= std_logic_vector(shift_left(unsigned(zext_ln94_12_reg_2950),to_integer(unsigned('0' & zext_ln94_14_fu_1983_p1(31-1 downto 0)))));
    shl_ln94_fu_1133_p2 <= std_logic_vector(shift_left(unsigned(zext_ln94_reg_2761),to_integer(unsigned('0' & zext_ln94_2_fu_1129_p1(31-1 downto 0)))));
    sub_ln94_10_fu_1682_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln94_9_reg_2871));
    sub_ln94_11_fu_1741_p2 <= std_logic_vector(unsigned(ap_const_lv11_7) - unsigned(trunc_ln94_8_reg_2866));
    sub_ln94_13_fu_1832_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(tmp_32_fu_1820_p3));
    sub_ln94_14_fu_1978_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln94_13_reg_2934));
    sub_ln94_15_fu_2037_p2 <= std_logic_vector(unsigned(ap_const_lv11_7) - unsigned(trunc_ln94_10_reg_2929));
    sub_ln94_16_fu_1010_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) - unsigned(trunc_ln94_1_fu_1006_p1));
    sub_ln94_17_fu_1302_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) - unsigned(trunc_ln94_6_fu_1298_p1));
    sub_ln94_18_fu_1581_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) - unsigned(trunc_ln94_9_fu_1577_p1));
    sub_ln94_19_fu_1864_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) - unsigned(trunc_ln94_11_fu_1860_p1));
    sub_ln94_1_fu_978_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(tmp_3_fu_966_p3));
    sub_ln94_2_fu_1124_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln94_1_reg_2745));
    sub_ln94_3_fu_1183_p2 <= std_logic_vector(unsigned(ap_const_lv11_7) - unsigned(trunc_ln94_reg_2740));
    sub_ln94_5_fu_1270_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(tmp_12_fu_1258_p3));
    sub_ln94_6_fu_1403_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln94_5_reg_2808));
    sub_ln94_7_fu_1462_p2 <= std_logic_vector(unsigned(ap_const_lv11_7) - unsigned(trunc_ln94_4_reg_2803));
    sub_ln94_9_fu_1549_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(tmp_22_fu_1537_p3));
    tmp_11_fu_1246_p3 <= (ap_const_lv1_1 & grp_fu_660_p4);
    
    tmp_12_fu_1258_p3_proc : process(sext_ln94_1_fu_1254_p1)
    begin
        tmp_12_fu_1258_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln94_1_fu_1254_p1(i) = '1' then
                tmp_12_fu_1258_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    tmp_14_fu_1282_p4 <= add_ln94_4_fu_1276_p2(31 downto 1);
    tmp_15_fu_1336_p3 <= add_ln94_4_fu_1276_p2(31 downto 31);
    tmp_16_fu_1473_p3 <= (tmp_13_reg_2798 & add_ln94_7_fu_1467_p2);
    tmp_19_fu_1350_p3 <= grp_fu_652_p3(to_integer(unsigned(add_ln94_4_fu_1276_p2)) downto to_integer(unsigned(add_ln94_4_fu_1276_p2))) when (to_integer(unsigned(add_ln94_4_fu_1276_p2)) >= 0 and to_integer(unsigned(add_ln94_4_fu_1276_p2)) <=15) else "-";
    tmp_21_fu_1525_p3 <= (ap_const_lv1_1 & grp_fu_660_p4);
    
    tmp_22_fu_1537_p3_proc : process(sext_ln94_2_fu_1533_p1)
    begin
        tmp_22_fu_1537_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln94_2_fu_1533_p1(i) = '1' then
                tmp_22_fu_1537_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    tmp_23_fu_1446_p3 <= add_ln94_6_fu_1426_p2(54 downto 54);
    tmp_25_fu_1561_p4 <= add_ln94_8_fu_1555_p2(31 downto 1);
    tmp_26_fu_1752_p3 <= (tmp_24_reg_2861 & add_ln94_11_fu_1746_p2);
    tmp_29_fu_1615_p3 <= add_ln94_8_fu_1555_p2(31 downto 31);
    tmp_2_fu_954_p3 <= (ap_const_lv1_1 & grp_fu_660_p4);
    tmp_31_fu_1808_p3 <= (ap_const_lv1_1 & grp_fu_660_p4);
    
    tmp_32_fu_1820_p3_proc : process(sext_ln94_3_fu_1816_p1)
    begin
        tmp_32_fu_1820_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln94_3_fu_1816_p1(i) = '1' then
                tmp_32_fu_1820_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    tmp_33_fu_1629_p3 <= grp_fu_652_p3(to_integer(unsigned(add_ln94_8_fu_1555_p2)) downto to_integer(unsigned(add_ln94_8_fu_1555_p2))) when (to_integer(unsigned(add_ln94_8_fu_1555_p2)) >= 0 and to_integer(unsigned(add_ln94_8_fu_1555_p2)) <=15) else "-";
    tmp_34_fu_1725_p3 <= add_ln94_10_fu_1705_p2(54 downto 54);
    tmp_36_fu_2048_p3 <= (tmp_35_reg_2924 & add_ln94_15_fu_2042_p2);
    tmp_39_fu_1844_p4 <= add_ln94_12_fu_1838_p2(31 downto 1);
    
    tmp_3_fu_966_p3_proc : process(sext_ln94_fu_962_p1)
    begin
        tmp_3_fu_966_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln94_fu_962_p1(i) = '1' then
                tmp_3_fu_966_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    tmp_40_fu_1898_p3 <= add_ln94_12_fu_1838_p2(31 downto 31);
    tmp_41_fu_1912_p3 <= grp_fu_652_p3(to_integer(unsigned(add_ln94_12_fu_1838_p2)) downto to_integer(unsigned(add_ln94_12_fu_1838_p2))) when (to_integer(unsigned(add_ln94_12_fu_1838_p2)) >= 0 and to_integer(unsigned(add_ln94_12_fu_1838_p2)) <=15) else "-";
    tmp_42_fu_2021_p3 <= add_ln94_14_fu_2001_p2(54 downto 54);
    tmp_4_fu_990_p4 <= add_ln94_fu_984_p2(31 downto 1);
    tmp_5_fu_1044_p3 <= add_ln94_fu_984_p2(31 downto 31);
    tmp_6_fu_1058_p3 <= grp_fu_652_p3(to_integer(unsigned(add_ln94_fu_984_p2)) downto to_integer(unsigned(add_ln94_fu_984_p2))) when (to_integer(unsigned(add_ln94_fu_984_p2)) >= 0 and to_integer(unsigned(add_ln94_fu_984_p2)) <=15) else "-";
    tmp_9_fu_1167_p3 <= add_ln94_2_fu_1147_p2(54 downto 54);
    tmp_s_fu_1194_p3 <= (tmp_reg_2735 & add_ln94_3_fu_1188_p2);
    trunc_ln89_1_fu_1804_p1 <= grp_model_array_fu_596_ap_return_0(15 - 1 downto 0);
    trunc_ln89_fu_950_p1 <= grp_model_array_fu_596_ap_return_0(15 - 1 downto 0);
    trunc_ln94_10_fu_1828_p1 <= tmp_32_fu_1820_p3(11 - 1 downto 0);
    trunc_ln94_11_fu_1860_p1 <= sub_ln94_13_fu_1832_p2(4 - 1 downto 0);
    trunc_ln94_1_fu_1006_p1 <= sub_ln94_1_fu_978_p2(4 - 1 downto 0);
    trunc_ln94_2_fu_1218_p4 <= add_ln94_2_fu_1147_p2(52 downto 1);
    trunc_ln94_3_fu_1497_p4 <= add_ln94_6_fu_1426_p2(52 downto 1);
    trunc_ln94_4_fu_1266_p1 <= tmp_12_fu_1258_p3(11 - 1 downto 0);
    trunc_ln94_5_fu_1776_p4 <= add_ln94_10_fu_1705_p2(52 downto 1);
    trunc_ln94_6_fu_1298_p1 <= sub_ln94_5_fu_1270_p2(4 - 1 downto 0);
    trunc_ln94_7_fu_2072_p4 <= add_ln94_14_fu_2001_p2(52 downto 1);
    trunc_ln94_8_fu_1545_p1 <= tmp_22_fu_1537_p3(11 - 1 downto 0);
    trunc_ln94_9_fu_1577_p1 <= sub_ln94_9_fu_1549_p2(4 - 1 downto 0);
    trunc_ln94_fu_974_p1 <= tmp_3_fu_966_p3(11 - 1 downto 0);

    w1_local_0_out_assign_proc : process(icmp_ln65_reg_2648, w1_local_0_load_1_reg_2669, ap_CS_fsm_state85, ap_CS_fsm_state84, w1_local_0_fu_244)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            w1_local_0_out <= w1_local_0_fu_244;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            w1_local_0_out <= w1_local_0_load_1_reg_2669;
        else 
            w1_local_0_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w1_local_0_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            w1_local_0_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w1_local_1_0_out_assign_proc : process(icmp_ln65_reg_2648, w1_local_1_0_load_1_reg_2675, ap_CS_fsm_state85, ap_CS_fsm_state84, w1_local_1_0_fu_248)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            w1_local_1_0_out <= w1_local_1_0_fu_248;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            w1_local_1_0_out <= w1_local_1_0_load_1_reg_2675;
        else 
            w1_local_1_0_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w1_local_1_0_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            w1_local_1_0_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_1_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w1_local_2_0_out_assign_proc : process(icmp_ln65_reg_2648, w1_local_2_0_load_1_reg_2681, ap_CS_fsm_state85, ap_CS_fsm_state84, w1_local_2_0_fu_252)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            w1_local_2_0_out <= w1_local_2_0_fu_252;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            w1_local_2_0_out <= w1_local_2_0_load_1_reg_2681;
        else 
            w1_local_2_0_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w1_local_2_0_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            w1_local_2_0_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_2_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w1_local_3_0_out_assign_proc : process(icmp_ln65_reg_2648, w1_local_3_0_load_1_reg_2687, ap_CS_fsm_state85, ap_CS_fsm_state84, w1_local_3_0_fu_256)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            w1_local_3_0_out <= w1_local_3_0_fu_256;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            w1_local_3_0_out <= w1_local_3_0_load_1_reg_2687;
        else 
            w1_local_3_0_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w1_local_3_0_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            w1_local_3_0_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_3_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_0_out_assign_proc : process(icmp_ln65_reg_2648, w2_local_0_load_1_reg_2705, ap_CS_fsm_state85, ap_CS_fsm_state84, w2_local_0_fu_260)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            w2_local_0_out <= w2_local_0_fu_260;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            w2_local_0_out <= w2_local_0_load_1_reg_2705;
        else 
            w2_local_0_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w2_local_0_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            w2_local_0_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_1_0_out_assign_proc : process(icmp_ln65_reg_2648, w2_local_1_0_load_1_reg_2711, ap_CS_fsm_state85, ap_CS_fsm_state84, w2_local_1_0_fu_264)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            w2_local_1_0_out <= w2_local_1_0_fu_264;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            w2_local_1_0_out <= w2_local_1_0_load_1_reg_2711;
        else 
            w2_local_1_0_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w2_local_1_0_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            w2_local_1_0_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_1_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_2_0_out_assign_proc : process(icmp_ln65_reg_2648, w2_local_2_0_load_1_reg_2717, ap_CS_fsm_state85, ap_CS_fsm_state84, w2_local_2_0_fu_268)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            w2_local_2_0_out <= w2_local_2_0_fu_268;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            w2_local_2_0_out <= w2_local_2_0_load_1_reg_2717;
        else 
            w2_local_2_0_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w2_local_2_0_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            w2_local_2_0_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_2_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_3_0_out_assign_proc : process(icmp_ln65_reg_2648, w2_local_3_0_load_1_reg_2723, ap_CS_fsm_state85, ap_CS_fsm_state84, w2_local_3_0_fu_272)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            w2_local_3_0_out <= w2_local_3_0_fu_272;
        elsif (((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            w2_local_3_0_out <= w2_local_3_0_load_1_reg_2723;
        else 
            w2_local_3_0_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w2_local_3_0_out_ap_vld_assign_proc : process(icmp_ln65_reg_2648, ap_CS_fsm_state85, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((icmp_ln65_reg_2648 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state84)))) then 
            w2_local_3_0_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_3_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln94_1_fu_2198_p2 <= (icmp_ln94_5_reg_2792 xor ap_const_lv1_1);
    xor_ln94_2_fu_2260_p2 <= (icmp_ln94_10_reg_2855 xor ap_const_lv1_1);
    xor_ln94_3_fu_2322_p2 <= (icmp_ln94_15_reg_2918 xor ap_const_lv1_1);
    xor_ln94_4_fu_1052_p2 <= (tmp_5_fu_1044_p3 xor ap_const_lv1_1);
    xor_ln94_5_fu_1344_p2 <= (tmp_15_fu_1336_p3 xor ap_const_lv1_1);
    xor_ln94_6_fu_1623_p2 <= (tmp_29_fu_1615_p3 xor ap_const_lv1_1);
    xor_ln94_7_fu_1906_p2 <= (tmp_40_fu_1898_p3 xor ap_const_lv1_1);
    xor_ln94_fu_2136_p2 <= (icmp_ln94_reg_2729 xor ap_const_lv1_1);
    zext_ln124_1_fu_1954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln106_3_fu_1946_p3),16));
    zext_ln124_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln106_fu_1092_p3),16));
    zext_ln94_10_fu_1687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln94_10_fu_1682_p2),64));
    zext_ln94_11_fu_1702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln94_2_reg_2877),64));
    zext_ln94_12_fu_1959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_741),64));
    zext_ln94_13_fu_1968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln94_13_fu_1963_p2),64));
    zext_ln94_14_fu_1983_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln94_14_fu_1978_p2),64));
    zext_ln94_15_fu_1998_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln94_3_reg_2940),64));
    zext_ln94_16_fu_1163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln94_1_fu_1153_p4),64));
    zext_ln94_17_fu_1442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln94_3_fu_1432_p4),64));
    zext_ln94_18_fu_1721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln94_5_fu_1711_p4),64));
    zext_ln94_19_fu_2017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln94_7_fu_2007_p4),64));
    zext_ln94_1_fu_1114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln94_1_fu_1109_p2),64));
    zext_ln94_20_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln94_16_fu_1010_p2),16));
    zext_ln94_21_fu_1308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln94_17_fu_1302_p2),16));
    zext_ln94_22_fu_1587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln94_18_fu_1581_p2),16));
    zext_ln94_23_fu_1870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln94_19_fu_1864_p2),16));
    zext_ln94_2_fu_1129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln94_2_fu_1124_p2),64));
    zext_ln94_3_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_reg_2751),64));
    zext_ln94_4_fu_1384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_741),64));
    zext_ln94_5_fu_1393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln94_5_fu_1388_p2),64));
    zext_ln94_6_fu_1408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln94_6_fu_1403_p2),64));
    zext_ln94_7_fu_1423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln94_1_reg_2814),64));
    zext_ln94_8_fu_1663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_741),64));
    zext_ln94_9_fu_1672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln94_9_fu_1667_p2),64));
    zext_ln94_fu_1105_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_741),64));
end behav;
