// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module accelerator_accelerator_Pipeline_VITIS_LOOP_55_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bias_1_address0,
        bias_1_ce0,
        bias_1_q0,
        bias_2_address0,
        bias_2_ce0,
        bias_2_q0,
        w1_1_load,
        w1_0_load,
        w1_1_load_1,
        w1_0_load_1,
        w2_1_load,
        w2_0_load,
        w2_1_load_1,
        w2_0_load_1,
        w2_local_3_out,
        w2_local_3_out_ap_vld,
        w2_local_2_out,
        w2_local_2_out_ap_vld,
        w1_local_3_out,
        w1_local_3_out_ap_vld,
        w1_local_2_out,
        w1_local_2_out_ap_vld,
        w2_local_1_out,
        w2_local_1_out_ap_vld,
        w2_local_out,
        w2_local_out_ap_vld,
        w1_local_1_out,
        w1_local_1_out_ap_vld,
        w1_local_out,
        w1_local_out_ap_vld,
        bias_2_local_idx90_promoted157_out,
        bias_2_local_idx90_promoted157_out_ap_vld,
        bias_2_local_idx89_promoted155_out,
        bias_2_local_idx89_promoted155_out_ap_vld,
        bias_1_local_idx97_promoted153_out,
        bias_1_local_idx97_promoted153_out_ap_vld,
        bias_1_local_idx96_promoted151_out,
        bias_1_local_idx96_promoted151_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [0:0] bias_1_address0;
output   bias_1_ce0;
input  [15:0] bias_1_q0;
output  [0:0] bias_2_address0;
output   bias_2_ce0;
input  [15:0] bias_2_q0;
input  [15:0] w1_1_load;
input  [15:0] w1_0_load;
input  [15:0] w1_1_load_1;
input  [15:0] w1_0_load_1;
input  [15:0] w2_1_load;
input  [15:0] w2_0_load;
input  [15:0] w2_1_load_1;
input  [15:0] w2_0_load_1;
output  [15:0] w2_local_3_out;
output   w2_local_3_out_ap_vld;
output  [15:0] w2_local_2_out;
output   w2_local_2_out_ap_vld;
output  [15:0] w1_local_3_out;
output   w1_local_3_out_ap_vld;
output  [15:0] w1_local_2_out;
output   w1_local_2_out_ap_vld;
output  [15:0] w2_local_1_out;
output   w2_local_1_out_ap_vld;
output  [15:0] w2_local_out;
output   w2_local_out_ap_vld;
output  [15:0] w1_local_1_out;
output   w1_local_1_out_ap_vld;
output  [15:0] w1_local_out;
output   w1_local_out_ap_vld;
output  [15:0] bias_2_local_idx90_promoted157_out;
output   bias_2_local_idx90_promoted157_out_ap_vld;
output  [15:0] bias_2_local_idx89_promoted155_out;
output   bias_2_local_idx89_promoted155_out_ap_vld;
output  [15:0] bias_1_local_idx97_promoted153_out;
output   bias_1_local_idx97_promoted153_out_ap_vld;
output  [15:0] bias_1_local_idx96_promoted151_out;
output   bias_1_local_idx96_promoted151_out_ap_vld;

reg ap_idle;
reg w2_local_3_out_ap_vld;
reg w2_local_2_out_ap_vld;
reg w1_local_3_out_ap_vld;
reg w1_local_2_out_ap_vld;
reg w2_local_1_out_ap_vld;
reg w2_local_out_ap_vld;
reg w1_local_1_out_ap_vld;
reg w1_local_out_ap_vld;
reg bias_2_local_idx90_promoted157_out_ap_vld;
reg bias_2_local_idx89_promoted155_out_ap_vld;
reg bias_1_local_idx97_promoted153_out_ap_vld;
reg bias_1_local_idx96_promoted151_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln55_fu_366_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln56_fu_408_p2;
reg   [0:0] icmp_ln56_reg_812;
wire   [63:0] zext_ln55_fu_402_p1;
wire    ap_block_pp0_stage0;
reg   [1:0] n_fu_88;
wire   [1:0] add_ln55_fu_372_p2;
wire    ap_loop_init;
reg   [15:0] bias_1_local_idx96_promoted151_fu_92;
wire   [15:0] select_ln56_8_fu_565_p3;
reg   [15:0] bias_1_local_idx97_promoted153_fu_96;
wire   [15:0] select_ln56_9_fu_572_p3;
reg   [15:0] bias_2_local_idx89_promoted155_fu_100;
wire   [15:0] select_ln56_11_fu_586_p3;
reg   [15:0] bias_2_local_idx90_promoted157_fu_104;
wire   [15:0] select_ln56_10_fu_579_p3;
reg   [15:0] w1_local_fu_108;
wire   [15:0] select_ln56_7_fu_500_p3;
reg   [15:0] w1_local_1_fu_112;
wire   [15:0] select_ln56_6_fu_492_p3;
reg   [15:0] w2_local_fu_116;
wire   [15:0] select_ln56_5_fu_484_p3;
reg   [15:0] w2_local_1_fu_120;
wire   [15:0] select_ln56_4_fu_476_p3;
reg   [15:0] w1_local_2_fu_124;
wire   [15:0] select_ln56_3_fu_468_p3;
reg   [15:0] w1_local_3_fu_128;
wire   [15:0] select_ln56_2_fu_460_p3;
reg   [15:0] w2_local_2_fu_132;
wire   [15:0] select_ln56_1_fu_452_p3;
reg   [15:0] w2_local_3_fu_136;
wire   [15:0] select_ln56_fu_444_p3;
wire    ap_block_pp0_stage0_01001;
reg    bias_1_ce0_local;
reg    bias_2_ce0_local;
wire   [0:0] icmp_ln59_fu_414_p2;
wire   [15:0] select_ln60_1_fu_438_p3;
wire   [15:0] select_ln60_fu_432_p3;
wire   [15:0] select_ln59_1_fu_426_p3;
wire   [15:0] select_ln59_fu_420_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 n_fu_88 = 2'd0;
#0 bias_1_local_idx96_promoted151_fu_92 = 16'd0;
#0 bias_1_local_idx97_promoted153_fu_96 = 16'd0;
#0 bias_2_local_idx89_promoted155_fu_100 = 16'd0;
#0 bias_2_local_idx90_promoted157_fu_104 = 16'd0;
#0 w1_local_fu_108 = 16'd0;
#0 w1_local_1_fu_112 = 16'd0;
#0 w2_local_fu_116 = 16'd0;
#0 w2_local_1_fu_120 = 16'd0;
#0 w1_local_2_fu_124 = 16'd0;
#0 w1_local_3_fu_128 = 16'd0;
#0 w2_local_2_fu_132 = 16'd0;
#0 w2_local_3_fu_136 = 16'd0;
#0 ap_done_reg = 1'b0;
end

accelerator_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            bias_1_local_idx96_promoted151_fu_92 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            bias_1_local_idx96_promoted151_fu_92 <= select_ln56_8_fu_565_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            bias_1_local_idx97_promoted153_fu_96 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            bias_1_local_idx97_promoted153_fu_96 <= select_ln56_9_fu_572_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            bias_2_local_idx89_promoted155_fu_100 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            bias_2_local_idx89_promoted155_fu_100 <= select_ln56_11_fu_586_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            bias_2_local_idx90_promoted157_fu_104 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            bias_2_local_idx90_promoted157_fu_104 <= select_ln56_10_fu_579_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            n_fu_88 <= 2'd0;
        end else if (((icmp_ln55_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            n_fu_88 <= add_ln55_fu_372_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            w1_local_1_fu_112 <= 16'd0;
        end else if (((icmp_ln55_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            w1_local_1_fu_112 <= select_ln56_6_fu_492_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            w1_local_2_fu_124 <= 16'd0;
        end else if (((icmp_ln55_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            w1_local_2_fu_124 <= select_ln56_3_fu_468_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            w1_local_3_fu_128 <= 16'd0;
        end else if (((icmp_ln55_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            w1_local_3_fu_128 <= select_ln56_2_fu_460_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            w1_local_fu_108 <= 16'd0;
        end else if (((icmp_ln55_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            w1_local_fu_108 <= select_ln56_7_fu_500_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            w2_local_1_fu_120 <= 16'd0;
        end else if (((icmp_ln55_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            w2_local_1_fu_120 <= select_ln56_4_fu_476_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            w2_local_2_fu_132 <= 16'd0;
        end else if (((icmp_ln55_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            w2_local_2_fu_132 <= select_ln56_1_fu_452_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            w2_local_3_fu_136 <= 16'd0;
        end else if (((icmp_ln55_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            w2_local_3_fu_136 <= select_ln56_fu_444_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            w2_local_fu_116 <= 16'd0;
        end else if (((icmp_ln55_fu_366_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            w2_local_fu_116 <= select_ln56_5_fu_484_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln56_reg_812 <= icmp_ln56_fu_408_p2;
    end
end

always @ (*) begin
    if (((icmp_ln55_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_1_ce0_local = 1'b1;
    end else begin
        bias_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln55_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_1_local_idx96_promoted151_out_ap_vld = 1'b1;
    end else begin
        bias_1_local_idx96_promoted151_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln55_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_1_local_idx97_promoted153_out_ap_vld = 1'b1;
    end else begin
        bias_1_local_idx97_promoted153_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_2_ce0_local = 1'b1;
    end else begin
        bias_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln55_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_2_local_idx89_promoted155_out_ap_vld = 1'b1;
    end else begin
        bias_2_local_idx89_promoted155_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln55_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_2_local_idx90_promoted157_out_ap_vld = 1'b1;
    end else begin
        bias_2_local_idx90_promoted157_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln55_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w1_local_1_out_ap_vld = 1'b1;
    end else begin
        w1_local_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln55_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w1_local_2_out_ap_vld = 1'b1;
    end else begin
        w1_local_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln55_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w1_local_3_out_ap_vld = 1'b1;
    end else begin
        w1_local_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln55_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w1_local_out_ap_vld = 1'b1;
    end else begin
        w1_local_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln55_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w2_local_1_out_ap_vld = 1'b1;
    end else begin
        w2_local_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln55_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w2_local_2_out_ap_vld = 1'b1;
    end else begin
        w2_local_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln55_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w2_local_3_out_ap_vld = 1'b1;
    end else begin
        w2_local_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln55_fu_366_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w2_local_out_ap_vld = 1'b1;
    end else begin
        w2_local_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln55_fu_372_p2 = (n_fu_88 + 2'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign bias_1_address0 = zext_ln55_fu_402_p1;

assign bias_1_ce0 = bias_1_ce0_local;

assign bias_1_local_idx96_promoted151_out = bias_1_local_idx96_promoted151_fu_92;

assign bias_1_local_idx97_promoted153_out = bias_1_local_idx97_promoted153_fu_96;

assign bias_2_address0 = zext_ln55_fu_402_p1;

assign bias_2_ce0 = bias_2_ce0_local;

assign bias_2_local_idx89_promoted155_out = bias_2_local_idx89_promoted155_fu_100;

assign bias_2_local_idx90_promoted157_out = bias_2_local_idx90_promoted157_fu_104;

assign icmp_ln55_fu_366_p2 = ((n_fu_88 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_408_p2 = ((n_fu_88 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_414_p2 = ((n_fu_88 == 2'd1) ? 1'b1 : 1'b0);

assign select_ln56_10_fu_579_p3 = ((icmp_ln56_reg_812[0:0] == 1'b1) ? bias_2_local_idx90_promoted157_fu_104 : bias_2_q0);

assign select_ln56_11_fu_586_p3 = ((icmp_ln56_reg_812[0:0] == 1'b1) ? bias_2_q0 : bias_2_local_idx89_promoted155_fu_100);

assign select_ln56_1_fu_452_p3 = ((icmp_ln56_fu_408_p2[0:0] == 1'b1) ? select_ln60_fu_432_p3 : w2_local_2_fu_132);

assign select_ln56_2_fu_460_p3 = ((icmp_ln56_fu_408_p2[0:0] == 1'b1) ? select_ln59_1_fu_426_p3 : w1_local_3_fu_128);

assign select_ln56_3_fu_468_p3 = ((icmp_ln56_fu_408_p2[0:0] == 1'b1) ? select_ln59_fu_420_p3 : w1_local_2_fu_124);

assign select_ln56_4_fu_476_p3 = ((icmp_ln56_fu_408_p2[0:0] == 1'b1) ? w2_local_1_fu_120 : select_ln60_1_fu_438_p3);

assign select_ln56_5_fu_484_p3 = ((icmp_ln56_fu_408_p2[0:0] == 1'b1) ? w2_local_fu_116 : select_ln60_fu_432_p3);

assign select_ln56_6_fu_492_p3 = ((icmp_ln56_fu_408_p2[0:0] == 1'b1) ? w1_local_1_fu_112 : select_ln59_1_fu_426_p3);

assign select_ln56_7_fu_500_p3 = ((icmp_ln56_fu_408_p2[0:0] == 1'b1) ? w1_local_fu_108 : select_ln59_fu_420_p3);

assign select_ln56_8_fu_565_p3 = ((icmp_ln56_reg_812[0:0] == 1'b1) ? bias_1_q0 : bias_1_local_idx96_promoted151_fu_92);

assign select_ln56_9_fu_572_p3 = ((icmp_ln56_reg_812[0:0] == 1'b1) ? bias_1_local_idx97_promoted153_fu_96 : bias_1_q0);

assign select_ln56_fu_444_p3 = ((icmp_ln56_fu_408_p2[0:0] == 1'b1) ? select_ln60_1_fu_438_p3 : w2_local_3_fu_136);

assign select_ln59_1_fu_426_p3 = ((icmp_ln59_fu_414_p2[0:0] == 1'b1) ? w1_1_load_1 : w1_0_load_1);

assign select_ln59_fu_420_p3 = ((icmp_ln59_fu_414_p2[0:0] == 1'b1) ? w1_1_load : w1_0_load);

assign select_ln60_1_fu_438_p3 = ((icmp_ln59_fu_414_p2[0:0] == 1'b1) ? w2_1_load_1 : w2_0_load_1);

assign select_ln60_fu_432_p3 = ((icmp_ln59_fu_414_p2[0:0] == 1'b1) ? w2_1_load : w2_0_load);

assign w1_local_1_out = w1_local_1_fu_112;

assign w1_local_2_out = w1_local_2_fu_124;

assign w1_local_3_out = w1_local_3_fu_128;

assign w1_local_out = w1_local_fu_108;

assign w2_local_1_out = w2_local_1_fu_120;

assign w2_local_2_out = w2_local_2_fu_132;

assign w2_local_3_out = w2_local_3_fu_136;

assign w2_local_out = w2_local_fu_116;

assign zext_ln55_fu_402_p1 = n_fu_88;

endmodule //accelerator_accelerator_Pipeline_VITIS_LOOP_55_1
