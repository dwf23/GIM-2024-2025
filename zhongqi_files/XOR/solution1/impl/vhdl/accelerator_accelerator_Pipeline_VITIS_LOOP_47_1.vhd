-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity accelerator_accelerator_Pipeline_VITIS_LOOP_47_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    w1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    w1_ce0 : OUT STD_LOGIC;
    w1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    w1_ce1 : OUT STD_LOGIC;
    w1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    w2_ce0 : OUT STD_LOGIC;
    w2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    w2_ce1 : OUT STD_LOGIC;
    w2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_1_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    bias_1_ce0 : OUT STD_LOGIC;
    bias_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_2_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    bias_2_ce0 : OUT STD_LOGIC;
    bias_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_1_0_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_1_0_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_1_0_out_o_ap_vld : OUT STD_LOGIC;
    bias_2_local_0_0_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_0_0_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_0_0_out_o_ap_vld : OUT STD_LOGIC;
    bias_1_local_1_0_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_1_0_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_1_0_out_o_ap_vld : OUT STD_LOGIC;
    bias_1_local_0_0_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_0_0_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_0_0_out_o_ap_vld : OUT STD_LOGIC;
    w2_local_1_1_0_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_1_1_0_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_1_1_0_out_o_ap_vld : OUT STD_LOGIC;
    w2_local_1_0_0_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_1_0_0_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_1_0_0_out_o_ap_vld : OUT STD_LOGIC;
    w2_local_0_1_0_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_0_1_0_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_0_1_0_out_o_ap_vld : OUT STD_LOGIC;
    w2_local_0_0_0_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_0_0_0_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_0_0_0_out_o_ap_vld : OUT STD_LOGIC;
    w1_local_1_1_0_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_1_1_0_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_1_1_0_out_o_ap_vld : OUT STD_LOGIC;
    w1_local_1_0_0_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_1_0_0_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_1_0_0_out_o_ap_vld : OUT STD_LOGIC;
    w1_local_0_1_0_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_0_1_0_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_0_1_0_out_o_ap_vld : OUT STD_LOGIC;
    w1_local_0_0_0_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_0_0_0_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_0_0_0_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of accelerator_accelerator_Pipeline_VITIS_LOOP_47_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln47_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal empty_fu_226_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_488 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln51_fu_254_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln51_1_fu_266_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_cast_fu_242_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bias_2_local_1_3_fu_339_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal bias_2_local_1_4_fu_346_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_1_local_1_3_fu_325_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_1_local_1_4_fu_332_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_1_1_3_fu_395_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_1_1_4_fu_402_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_0_1_3_fu_367_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_0_1_4_fu_374_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_1_1_3_fu_381_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_1_1_4_fu_388_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_0_1_3_fu_353_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_0_1_4_fu_360_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal n_fu_66 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln47_fu_236_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_n_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln51_fu_248_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln51_fu_260_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component accelerator_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component accelerator_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    n_fu_66_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln47_fu_230_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    n_fu_66 <= add_ln47_fu_236_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n_fu_66 <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_reg_488 <= empty_fu_226_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln47_fu_236_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_n_1) + unsigned(ap_const_lv2_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln47_fu_230_p2)
    begin
        if (((icmp_ln47_fu_230_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_n_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, n_fu_66)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_n_1 <= ap_const_lv2_0;
        else 
            ap_sig_allocacmp_n_1 <= n_fu_66;
        end if; 
    end process;

    bias_1_address0 <= n_cast_fu_242_p1(1 - 1 downto 0);

    bias_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_1_ce0 <= ap_const_logic_1;
        else 
            bias_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_1_local_0_0_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, bias_1_local_0_0_out_i, ap_block_pp0_stage0, ap_loop_init, bias_1_local_1_4_fu_332_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                bias_1_local_0_0_out_o <= ap_const_lv16_0;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                bias_1_local_0_0_out_o <= bias_1_local_1_4_fu_332_p3;
            else 
                bias_1_local_0_0_out_o <= bias_1_local_0_0_out_i;
            end if;
        else 
            bias_1_local_0_0_out_o <= bias_1_local_0_0_out_i;
        end if; 
    end process;


    bias_1_local_0_0_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bias_1_local_0_0_out_o_ap_vld <= ap_const_logic_1;
        else 
            bias_1_local_0_0_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bias_1_local_1_0_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, bias_1_local_1_0_out_i, ap_block_pp0_stage0, ap_loop_init, bias_1_local_1_3_fu_325_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                bias_1_local_1_0_out_o <= ap_const_lv16_0;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                bias_1_local_1_0_out_o <= bias_1_local_1_3_fu_325_p3;
            else 
                bias_1_local_1_0_out_o <= bias_1_local_1_0_out_i;
            end if;
        else 
            bias_1_local_1_0_out_o <= bias_1_local_1_0_out_i;
        end if; 
    end process;


    bias_1_local_1_0_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bias_1_local_1_0_out_o_ap_vld <= ap_const_logic_1;
        else 
            bias_1_local_1_0_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    bias_1_local_1_3_fu_325_p3 <= 
        bias_1_q0 when (empty_reg_488(0) = '1') else 
        bias_1_local_1_0_out_i;
    bias_1_local_1_4_fu_332_p3 <= 
        bias_1_local_0_0_out_i when (empty_reg_488(0) = '1') else 
        bias_1_q0;
    bias_2_address0 <= n_cast_fu_242_p1(1 - 1 downto 0);

    bias_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_2_ce0 <= ap_const_logic_1;
        else 
            bias_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_2_local_0_0_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, bias_2_local_0_0_out_i, ap_block_pp0_stage0, ap_loop_init, bias_2_local_1_4_fu_346_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                bias_2_local_0_0_out_o <= ap_const_lv16_0;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                bias_2_local_0_0_out_o <= bias_2_local_1_4_fu_346_p3;
            else 
                bias_2_local_0_0_out_o <= bias_2_local_0_0_out_i;
            end if;
        else 
            bias_2_local_0_0_out_o <= bias_2_local_0_0_out_i;
        end if; 
    end process;


    bias_2_local_0_0_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bias_2_local_0_0_out_o_ap_vld <= ap_const_logic_1;
        else 
            bias_2_local_0_0_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bias_2_local_1_0_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, bias_2_local_1_0_out_i, ap_block_pp0_stage0, bias_2_local_1_3_fu_339_p3, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                bias_2_local_1_0_out_o <= ap_const_lv16_0;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                bias_2_local_1_0_out_o <= bias_2_local_1_3_fu_339_p3;
            else 
                bias_2_local_1_0_out_o <= bias_2_local_1_0_out_i;
            end if;
        else 
            bias_2_local_1_0_out_o <= bias_2_local_1_0_out_i;
        end if; 
    end process;


    bias_2_local_1_0_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            bias_2_local_1_0_out_o_ap_vld <= ap_const_logic_1;
        else 
            bias_2_local_1_0_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    bias_2_local_1_3_fu_339_p3 <= 
        bias_2_q0 when (empty_reg_488(0) = '1') else 
        bias_2_local_1_0_out_i;
    bias_2_local_1_4_fu_346_p3 <= 
        bias_2_local_0_0_out_i when (empty_reg_488(0) = '1') else 
        bias_2_q0;
    empty_fu_226_p1 <= ap_sig_allocacmp_n_1(1 - 1 downto 0);
    icmp_ln47_fu_230_p2 <= "1" when (ap_sig_allocacmp_n_1 = ap_const_lv2_2) else "0";
    n_cast_fu_242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_n_1),64));
    or_ln51_fu_260_p2 <= (shl_ln51_fu_248_p2 or ap_const_lv2_1);
    shl_ln51_fu_248_p2 <= std_logic_vector(shift_left(unsigned(ap_sig_allocacmp_n_1),to_integer(unsigned('0' & ap_const_lv2_1(2-1 downto 0)))));
    w1_address0 <= zext_ln51_1_fu_266_p1(2 - 1 downto 0);
    w1_address1 <= zext_ln51_fu_254_p1(2 - 1 downto 0);

    w1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w1_ce0 <= ap_const_logic_1;
        else 
            w1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w1_ce1 <= ap_const_logic_1;
        else 
            w1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    w1_local_0_0_0_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, w1_local_0_0_0_out_i, ap_block_pp0_stage0, ap_loop_init, w1_local_0_1_4_fu_360_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                w1_local_0_0_0_out_o <= ap_const_lv16_0;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                w1_local_0_0_0_out_o <= w1_local_0_1_4_fu_360_p3;
            else 
                w1_local_0_0_0_out_o <= w1_local_0_0_0_out_i;
            end if;
        else 
            w1_local_0_0_0_out_o <= w1_local_0_0_0_out_i;
        end if; 
    end process;


    w1_local_0_0_0_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            w1_local_0_0_0_out_o_ap_vld <= ap_const_logic_1;
        else 
            w1_local_0_0_0_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w1_local_0_1_0_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, w1_local_0_1_0_out_i, ap_block_pp0_stage0, ap_loop_init, w1_local_0_1_3_fu_353_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                w1_local_0_1_0_out_o <= ap_const_lv16_0;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                w1_local_0_1_0_out_o <= w1_local_0_1_3_fu_353_p3;
            else 
                w1_local_0_1_0_out_o <= w1_local_0_1_0_out_i;
            end if;
        else 
            w1_local_0_1_0_out_o <= w1_local_0_1_0_out_i;
        end if; 
    end process;


    w1_local_0_1_0_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            w1_local_0_1_0_out_o_ap_vld <= ap_const_logic_1;
        else 
            w1_local_0_1_0_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    w1_local_0_1_3_fu_353_p3 <= 
        w1_q1 when (empty_reg_488(0) = '1') else 
        w1_local_0_1_0_out_i;
    w1_local_0_1_4_fu_360_p3 <= 
        w1_local_0_0_0_out_i when (empty_reg_488(0) = '1') else 
        w1_q1;

    w1_local_1_0_0_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, w1_local_1_0_0_out_i, ap_block_pp0_stage0, ap_loop_init, w1_local_1_1_4_fu_388_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                w1_local_1_0_0_out_o <= ap_const_lv16_0;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                w1_local_1_0_0_out_o <= w1_local_1_1_4_fu_388_p3;
            else 
                w1_local_1_0_0_out_o <= w1_local_1_0_0_out_i;
            end if;
        else 
            w1_local_1_0_0_out_o <= w1_local_1_0_0_out_i;
        end if; 
    end process;


    w1_local_1_0_0_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            w1_local_1_0_0_out_o_ap_vld <= ap_const_logic_1;
        else 
            w1_local_1_0_0_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w1_local_1_1_0_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, w1_local_1_1_0_out_i, ap_block_pp0_stage0, ap_loop_init, w1_local_1_1_3_fu_381_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                w1_local_1_1_0_out_o <= ap_const_lv16_0;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                w1_local_1_1_0_out_o <= w1_local_1_1_3_fu_381_p3;
            else 
                w1_local_1_1_0_out_o <= w1_local_1_1_0_out_i;
            end if;
        else 
            w1_local_1_1_0_out_o <= w1_local_1_1_0_out_i;
        end if; 
    end process;


    w1_local_1_1_0_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            w1_local_1_1_0_out_o_ap_vld <= ap_const_logic_1;
        else 
            w1_local_1_1_0_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    w1_local_1_1_3_fu_381_p3 <= 
        w1_q0 when (empty_reg_488(0) = '1') else 
        w1_local_1_1_0_out_i;
    w1_local_1_1_4_fu_388_p3 <= 
        w1_local_1_0_0_out_i when (empty_reg_488(0) = '1') else 
        w1_q0;
    w2_address0 <= zext_ln51_1_fu_266_p1(2 - 1 downto 0);
    w2_address1 <= zext_ln51_fu_254_p1(2 - 1 downto 0);

    w2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w2_ce0 <= ap_const_logic_1;
        else 
            w2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w2_ce1 <= ap_const_logic_1;
        else 
            w2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_0_0_0_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, w2_local_0_0_0_out_i, ap_block_pp0_stage0, ap_loop_init, w2_local_0_1_4_fu_374_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                w2_local_0_0_0_out_o <= ap_const_lv16_0;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                w2_local_0_0_0_out_o <= w2_local_0_1_4_fu_374_p3;
            else 
                w2_local_0_0_0_out_o <= w2_local_0_0_0_out_i;
            end if;
        else 
            w2_local_0_0_0_out_o <= w2_local_0_0_0_out_i;
        end if; 
    end process;


    w2_local_0_0_0_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            w2_local_0_0_0_out_o_ap_vld <= ap_const_logic_1;
        else 
            w2_local_0_0_0_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_0_1_0_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, w2_local_0_1_0_out_i, ap_block_pp0_stage0, ap_loop_init, w2_local_0_1_3_fu_367_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                w2_local_0_1_0_out_o <= ap_const_lv16_0;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                w2_local_0_1_0_out_o <= w2_local_0_1_3_fu_367_p3;
            else 
                w2_local_0_1_0_out_o <= w2_local_0_1_0_out_i;
            end if;
        else 
            w2_local_0_1_0_out_o <= w2_local_0_1_0_out_i;
        end if; 
    end process;


    w2_local_0_1_0_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            w2_local_0_1_0_out_o_ap_vld <= ap_const_logic_1;
        else 
            w2_local_0_1_0_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    w2_local_0_1_3_fu_367_p3 <= 
        w2_q1 when (empty_reg_488(0) = '1') else 
        w2_local_0_1_0_out_i;
    w2_local_0_1_4_fu_374_p3 <= 
        w2_local_0_0_0_out_i when (empty_reg_488(0) = '1') else 
        w2_q1;

    w2_local_1_0_0_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, w2_local_1_0_0_out_i, ap_block_pp0_stage0, ap_loop_init, w2_local_1_1_4_fu_402_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                w2_local_1_0_0_out_o <= ap_const_lv16_0;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                w2_local_1_0_0_out_o <= w2_local_1_1_4_fu_402_p3;
            else 
                w2_local_1_0_0_out_o <= w2_local_1_0_0_out_i;
            end if;
        else 
            w2_local_1_0_0_out_o <= w2_local_1_0_0_out_i;
        end if; 
    end process;


    w2_local_1_0_0_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            w2_local_1_0_0_out_o_ap_vld <= ap_const_logic_1;
        else 
            w2_local_1_0_0_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_1_1_0_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, w2_local_1_1_0_out_i, ap_block_pp0_stage0, ap_loop_init, w2_local_1_1_3_fu_395_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                w2_local_1_1_0_out_o <= ap_const_lv16_0;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                w2_local_1_1_0_out_o <= w2_local_1_1_3_fu_395_p3;
            else 
                w2_local_1_1_0_out_o <= w2_local_1_1_0_out_i;
            end if;
        else 
            w2_local_1_1_0_out_o <= w2_local_1_1_0_out_i;
        end if; 
    end process;


    w2_local_1_1_0_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            w2_local_1_1_0_out_o_ap_vld <= ap_const_logic_1;
        else 
            w2_local_1_1_0_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    w2_local_1_1_3_fu_395_p3 <= 
        w2_q0 when (empty_reg_488(0) = '1') else 
        w2_local_1_1_0_out_i;
    w2_local_1_1_4_fu_402_p3 <= 
        w2_local_1_0_0_out_i when (empty_reg_488(0) = '1') else 
        w2_q0;
    zext_ln51_1_fu_266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln51_fu_260_p2),64));
    zext_ln51_fu_254_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln51_fu_248_p2),64));
end behav;
