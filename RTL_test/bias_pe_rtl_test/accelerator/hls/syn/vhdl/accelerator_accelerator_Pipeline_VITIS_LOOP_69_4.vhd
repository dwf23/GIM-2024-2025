-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity accelerator_accelerator_Pipeline_VITIS_LOOP_69_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bias_2_local_1_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_1_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_3_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_2_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_1_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_3_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_2_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_1_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_15664 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_05560 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_15456 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_05352 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_15248 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_05144 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_15040 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_04936 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_14832 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_04728 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_14624 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_04520 : IN STD_LOGIC_VECTOR (15 downto 0);
    retval_0_3_0_0_0_load82 : IN STD_LOGIC_VECTOR (15 downto 0);
    retval_0_2_0_0_0_load76 : IN STD_LOGIC_VECTOR (15 downto 0);
    retval_0_1_0_0_0_load70 : IN STD_LOGIC_VECTOR (15 downto 0);
    retval_0_0_0_0_0_load64 : IN STD_LOGIC_VECTOR (15 downto 0);
    training : IN STD_LOGIC_VECTOR (15 downto 0);
    cmp_i_i100 : IN STD_LOGIC_VECTOR (0 downto 0);
    bias_2_local_1_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_1_1_out_ap_vld : OUT STD_LOGIC;
    bias_2_local_193_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_193_out_ap_vld : OUT STD_LOGIC;
    bias_1_local_1_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_1_1_out_ap_vld : OUT STD_LOGIC;
    bias_1_local_191_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_191_out_ap_vld : OUT STD_LOGIC;
    w2_local_3_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_3_1_out_ap_vld : OUT STD_LOGIC;
    w2_local_2_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_2_1_out_ap_vld : OUT STD_LOGIC;
    w2_local_1_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_1_1_out_ap_vld : OUT STD_LOGIC;
    w2_local_189_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_189_out_ap_vld : OUT STD_LOGIC;
    w1_local_3_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_3_1_out_ap_vld : OUT STD_LOGIC;
    w1_local_2_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_2_1_out_ap_vld : OUT STD_LOGIC;
    w1_local_1_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_1_1_out_ap_vld : OUT STD_LOGIC;
    w1_local_187_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_187_out_ap_vld : OUT STD_LOGIC;
    mux_case_15663_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_15663_out_ap_vld : OUT STD_LOGIC;
    mux_case_05559_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_05559_out_ap_vld : OUT STD_LOGIC;
    mux_case_15455_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_15455_out_ap_vld : OUT STD_LOGIC;
    mux_case_05351_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_05351_out_ap_vld : OUT STD_LOGIC;
    mux_case_15247_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_15247_out_ap_vld : OUT STD_LOGIC;
    mux_case_05143_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_05143_out_ap_vld : OUT STD_LOGIC;
    mux_case_15039_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_15039_out_ap_vld : OUT STD_LOGIC;
    mux_case_04935_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_04935_out_ap_vld : OUT STD_LOGIC;
    mux_case_14831_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_14831_out_ap_vld : OUT STD_LOGIC;
    mux_case_04727_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_04727_out_ap_vld : OUT STD_LOGIC;
    mux_case_14623_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_14623_out_ap_vld : OUT STD_LOGIC;
    mux_case_04519_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_04519_out_ap_vld : OUT STD_LOGIC;
    retval_0_3_0_0_0_load81_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_3_0_0_0_load81_out_ap_vld : OUT STD_LOGIC;
    retval_0_2_0_0_0_load75_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_2_0_0_0_load75_out_ap_vld : OUT STD_LOGIC;
    retval_0_1_0_0_0_load69_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_1_0_0_0_load69_out_ap_vld : OUT STD_LOGIC;
    retval_0_0_0_0_0_load63_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_0_0_0_0_load63_out_ap_vld : OUT STD_LOGIC;
    retval_0_3_0_0_0_load_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_3_0_0_0_load_out_ap_vld : OUT STD_LOGIC;
    retval_0_2_0_0_0_load_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_2_0_0_0_load_out_ap_vld : OUT STD_LOGIC;
    retval_0_1_0_0_0_load_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_1_0_0_0_load_out_ap_vld : OUT STD_LOGIC;
    retval_0_0_0_0_0_load_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_0_0_0_0_load_out_ap_vld : OUT STD_LOGIC;
    array_back2_weight_changes_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_weight_changes_out_ap_vld : OUT STD_LOGIC;
    array_back2_weight_changes_4_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_weight_changes_4_out_ap_vld : OUT STD_LOGIC;
    array_back2_weight_changes_5_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_weight_changes_5_out_ap_vld : OUT STD_LOGIC;
    array_back2_weight_changes_6_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_weight_changes_6_out_ap_vld : OUT STD_LOGIC;
    array_back2_bias_change_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_bias_change_out_ap_vld : OUT STD_LOGIC;
    array_back2_bias_change_2_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_bias_change_2_out_ap_vld : OUT STD_LOGIC;
    array_back1_weight_changes_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_weight_changes_out_ap_vld : OUT STD_LOGIC;
    array_back1_weight_changes_4_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_weight_changes_4_out_ap_vld : OUT STD_LOGIC;
    array_back1_weight_changes_5_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_weight_changes_5_out_ap_vld : OUT STD_LOGIC;
    array_back1_weight_changes_6_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_weight_changes_6_out_ap_vld : OUT STD_LOGIC;
    array_back1_bias_change_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_bias_change_out_ap_vld : OUT STD_LOGIC;
    array_back1_bias_change_2_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_bias_change_2_out_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of accelerator_accelerator_Pipeline_VITIS_LOOP_69_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_3FE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_FFFFFFCB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv32_FFFFFFCA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv11_7 : STD_LOGIC_VECTOR (10 downto 0) := "00000000111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv16_200 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal j_1_reg_2341 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_1_reg_2341_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln69_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln69_reg_2352 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln69_reg_2352_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_fu_1155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_reg_2356 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_reg_2356_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal w1_local_187_load_1_reg_2360 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal w1_local_1_1_load_1_reg_2366 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_2_1_load_1_reg_2372 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_3_1_load_1_reg_2378 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_1_local_191_load_1_reg_2384 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_1_local_1_1_load_1_reg_2390 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln69_fu_1189_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln69_reg_2396 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln73_fu_1216_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln73_reg_2401 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln72_fu_1245_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln72_reg_2406 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_189_load_1_reg_2411 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal w2_local_1_1_load_1_reg_2417 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_2_1_load_1_reg_2423 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_3_1_load_1_reg_2429 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_2_local_193_load_1_reg_2435 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_2_local_1_1_load_1_reg_2441 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_out1_output_k_reg_2447 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_out1_output_k_2_reg_2452 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln93_fu_1279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_2457 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal tmp_fu_1285_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2463 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln93_fu_1299_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln93_reg_2468 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln93_fu_1337_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln93_reg_2473 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln93_1_fu_1341_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln93_1_reg_2478 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_fu_1441_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln_reg_2484 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln93_3_fu_1449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_3_reg_2489 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln93_fu_1503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln93_reg_2494 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal lshr_ln93_fu_1515_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln93_reg_2499 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln748_fu_1610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln748_reg_2504 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal or_ln93_1_fu_1637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln93_1_reg_2509 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_2515 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln93_2_fu_1657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln93_2_reg_2520 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal or_ln96_fu_1675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln96_reg_2528 : STD_LOGIC_VECTOR (0 downto 0);
    signal array_back2_weight_changes_reg_2536 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back2_weight_changes_4_reg_2541 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back2_weight_changes_5_reg_2546 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back2_weight_changes_6_reg_2551 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back2_bias_change_reg_2556 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back2_bias_change_2_reg_2561 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_0_0_0_0_load_2_reg_2566 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal retval_0_1_0_0_0_load_2_reg_2571 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_2_0_0_0_load_2_reg_2576 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_3_0_0_0_load_2_reg_2581 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_3_0_0_0_load_fu_1819_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_3_0_0_0_load_reg_2586 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_2_0_0_0_load_fu_1862_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_2_0_0_0_load_reg_2591 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_1_0_0_0_load_fu_1905_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_1_0_0_0_load_reg_2596 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_0_0_0_0_load_fu_1948_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_0_0_0_0_load_reg_2601 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back1_weight_changes_reg_2606 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back1_weight_changes_4_reg_2611 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back1_weight_changes_5_reg_2616 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back1_weight_changes_6_reg_2621 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back1_bias_change_reg_2626 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back1_bias_change_2_reg_2631 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_predicate_tran15to16_state13 : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal grp_model_array_fu_890_ap_start : STD_LOGIC;
    signal grp_model_array_fu_890_ap_done : STD_LOGIC;
    signal grp_model_array_fu_890_ap_idle : STD_LOGIC;
    signal grp_model_array_fu_890_ap_ready : STD_LOGIC;
    signal grp_model_array_fu_890_p_read10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_p_read29 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_p_read30 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_p_read31 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_p_read32 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_p_read33 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_p_read34 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_p_read35 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_p_read36 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_p_read37 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_890_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_UnifiedRetVal_phi_fu_882_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal UnifiedRetVal_reg_878 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_model_array_fu_890_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_pp0_stage1_ignoreCallOp126 : BOOLEAN;
    signal ap_block_pp0_stage4_ignoreCallOp138 : BOOLEAN;
    signal ap_block_pp0_stage7_ignoreCallOp175 : BOOLEAN;
    signal ap_block_pp0_stage10_ignoreCallOp219 : BOOLEAN;
    signal delta_2_1_fu_1494_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_fu_274 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln69_fu_1143_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal retval_0_0_0_0_0_load63_fu_278 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal retval_0_1_0_0_0_load69_fu_282 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal retval_0_2_0_0_0_load75_fu_286 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal retval_0_3_0_0_0_load81_fu_290 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_04519_fu_294 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_14623_fu_298 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_04727_fu_302 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_14831_fu_306 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_04935_fu_310 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_15039_fu_314 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_05143_fu_318 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_15247_fu_322 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_05351_fu_326 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_15455_fu_330 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_05559_fu_334 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_15663_fu_338 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w1_local_187_fu_342 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_sig_allocacmp_w1_local_187_load_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_1_1_fu_346 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_sig_allocacmp_w1_local_1_1_load_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_2_1_fu_350 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_sig_allocacmp_w1_local_2_1_load_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_3_1_fu_354 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_sig_allocacmp_w1_local_3_1_load_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_189_fu_358 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal w2_local_1_1_fu_362 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w2_local_2_1_fu_366 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w2_local_3_1_fu_370 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal bias_1_local_191_fu_374 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_sig_allocacmp_bias_1_local_191_load_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_1_local_1_1_fu_378 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_sig_allocacmp_bias_1_local_1_1_load_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_2_local_193_fu_382 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal bias_2_local_1_1_fu_386 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal grp_fu_907_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal icmp_ln143_fu_1149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_0_fu_1192_p9 : STD_LOGIC_VECTOR (9 downto 0);
    signal output_0_fu_1192_p11 : STD_LOGIC_VECTOR (9 downto 0);
    signal output_0_1_fu_1221_p9 : STD_LOGIC_VECTOR (9 downto 0);
    signal output_0_1_fu_1221_p11 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln93_fu_1293_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_1307_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_1317_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln93_fu_1325_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1329_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln93_fu_1347_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1353_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln93_2_fu_1369_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln93_4_fu_1373_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln93_5_fu_1379_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln93_2_fu_1383_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln93_3_fu_1389_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln93_1_fu_1363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_2_fu_1395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_1407_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_1421_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln93_1_fu_1415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln93_fu_1429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln93_fu_1401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln93_fu_1435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln106_cast_fu_1461_p9 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln106_cast_fu_1461_p11 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln106_fu_1484_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln105_fu_1455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal delta_2_fu_1488_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal add_ln93_1_fu_1506_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln93_1_fu_1511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln93_2_fu_1521_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln93_2_fu_1526_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln93_fu_1530_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal cond50_i_i315_fu_1535_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln93_3_fu_1541_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln93_2_fu_1544_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln93_1_fu_1550_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_9_fu_1564_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln93_1_fu_1572_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln93_3_fu_1580_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln93_3_fu_1585_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln93_4_fu_1560_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1591_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal LD_fu_1598_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln93_1_fu_1615_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln93_5_fu_1631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_4_fu_1625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln93_1_fu_1643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln93_fu_1652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_fu_1647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln96_fu_1663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_1_fu_1669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_fu_1762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_1_fu_1767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_2_fu_1772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_1_fu_1782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_fu_1777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_3_fu_1800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_2_fu_1794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_2_fu_1788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_4_fu_1805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_0_3_0_0_0_load_fu_1819_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_3_0_0_0_load_fu_1819_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln94_3_fu_1839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_3_fu_1844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_5_fu_1849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_0_2_0_0_0_load_fu_1862_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_2_0_0_0_load_fu_1862_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln94_4_fu_1882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_4_fu_1887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_6_fu_1892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_0_1_0_0_0_load_fu_1905_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_1_0_0_0_load_fu_1905_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln94_5_fu_1925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_5_fu_1930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_7_fu_1935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_0_0_0_0_0_load_fu_1948_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_0_0_0_0_load_fu_1948_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_907_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage9_00001 : BOOLEAN;
    signal ap_block_pp0_stage10_00001 : BOOLEAN;
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_exit_tran_regpp0 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal output_0_fu_1192_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_0_fu_1192_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_0_fu_1192_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_0_fu_1192_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_0_1_fu_1221_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_0_1_fu_1221_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_0_1_fu_1221_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_0_1_fu_1221_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln106_cast_fu_1461_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln106_cast_fu_1461_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln106_cast_fu_1461_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln106_cast_fu_1461_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_3_0_0_0_load_fu_1819_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_3_0_0_0_load_fu_1819_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_3_0_0_0_load_fu_1819_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_2_0_0_0_load_fu_1862_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_2_0_0_0_load_fu_1862_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_2_0_0_0_load_fu_1862_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_1_0_0_0_load_fu_1905_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_1_0_0_0_load_fu_1905_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_1_0_0_0_load_fu_1905_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_0_0_0_0_load_fu_1948_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_0_0_0_0_load_fu_1948_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_0_0_0_0_load_fu_1948_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component accelerator_model_array IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read32 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read33 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read34 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read35 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read36 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read37 : IN STD_LOGIC_VECTOR (15 downto 0);
        training : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component accelerator_dcmp_64ns_64ns_1_1_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component accelerator_sparsemux_9_2_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (1 downto 0);
        din3_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        din3 : IN STD_LOGIC_VECTOR (9 downto 0);
        def : IN STD_LOGIC_VECTOR (9 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component accelerator_sparsemux_7_2_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        def : IN STD_LOGIC_VECTOR (15 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    grp_model_array_fu_890 : component accelerator_model_array
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_model_array_fu_890_ap_start,
        ap_done => grp_model_array_fu_890_ap_done,
        ap_idle => grp_model_array_fu_890_ap_idle,
        ap_ready => grp_model_array_fu_890_ap_ready,
        ap_ce => ap_const_logic_1,
        p_read10 => grp_model_array_fu_890_p_read10,
        p_read29 => grp_model_array_fu_890_p_read29,
        p_read30 => grp_model_array_fu_890_p_read30,
        p_read31 => grp_model_array_fu_890_p_read31,
        p_read32 => grp_model_array_fu_890_p_read32,
        p_read33 => grp_model_array_fu_890_p_read33,
        p_read34 => grp_model_array_fu_890_p_read34,
        p_read35 => grp_model_array_fu_890_p_read35,
        p_read36 => grp_model_array_fu_890_p_read36,
        p_read37 => grp_model_array_fu_890_p_read37,
        training => training,
        ap_return_0 => grp_model_array_fu_890_ap_return_0,
        ap_return_1 => grp_model_array_fu_890_ap_return_1,
        ap_return_2 => grp_model_array_fu_890_ap_return_2,
        ap_return_3 => grp_model_array_fu_890_ap_return_3,
        ap_return_4 => grp_model_array_fu_890_ap_return_4,
        ap_return_5 => grp_model_array_fu_890_ap_return_5,
        ap_return_6 => grp_model_array_fu_890_ap_return_6,
        ap_return_7 => grp_model_array_fu_890_ap_return_7,
        ap_return_8 => grp_model_array_fu_890_ap_return_8,
        ap_return_9 => grp_model_array_fu_890_ap_return_9);

    dcmp_64ns_64ns_1_1_no_dsp_1_U51 : component accelerator_dcmp_64ns_64ns_1_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_907_p0,
        din1 => ap_const_lv64_3FE0000000000000,
        opcode => grp_fu_907_opcode,
        dout => grp_fu_907_p2);

    sparsemux_9_2_10_1_1_U52 : component accelerator_sparsemux_9_2_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 10,
        CASE1 => "01",
        din1_WIDTH => 10,
        CASE2 => "10",
        din2_WIDTH => 10,
        CASE3 => "11",
        din3_WIDTH => 10,
        def_WIDTH => 10,
        sel_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => ap_const_lv10_0,
        din1 => ap_const_lv10_0,
        din2 => ap_const_lv10_200,
        din3 => ap_const_lv10_200,
        def => output_0_fu_1192_p9,
        sel => trunc_ln69_fu_1189_p1,
        dout => output_0_fu_1192_p11);

    sparsemux_9_2_10_1_1_U53 : component accelerator_sparsemux_9_2_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 10,
        CASE1 => "01",
        din1_WIDTH => 10,
        CASE2 => "10",
        din2_WIDTH => 10,
        CASE3 => "11",
        din3_WIDTH => 10,
        def_WIDTH => 10,
        sel_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => ap_const_lv10_0,
        din1 => ap_const_lv10_200,
        din2 => ap_const_lv10_0,
        din3 => ap_const_lv10_200,
        def => output_0_1_fu_1221_p9,
        sel => trunc_ln69_fu_1189_p1,
        dout => output_0_1_fu_1221_p11);

    sparsemux_9_2_10_1_1_U54 : component accelerator_sparsemux_9_2_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 10,
        CASE1 => "01",
        din1_WIDTH => 10,
        CASE2 => "10",
        din2_WIDTH => 10,
        CASE3 => "11",
        din3_WIDTH => 10,
        def_WIDTH => 10,
        sel_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => ap_const_lv10_0,
        din1 => ap_const_lv10_200,
        din2 => ap_const_lv10_200,
        din3 => ap_const_lv10_0,
        def => zext_ln106_cast_fu_1461_p9,
        sel => trunc_ln69_reg_2396,
        dout => zext_ln106_cast_fu_1461_p11);

    sparsemux_7_2_16_1_1_U55 : component accelerator_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_200,
        din1 => ap_const_lv16_0,
        din2 => retval_0_3_0_0_0_load81_fu_290,
        def => retval_0_3_0_0_0_load_fu_1819_p7,
        sel => retval_0_3_0_0_0_load_fu_1819_p8,
        dout => retval_0_3_0_0_0_load_fu_1819_p9);

    sparsemux_7_2_16_1_1_U56 : component accelerator_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_200,
        din1 => ap_const_lv16_0,
        din2 => retval_0_2_0_0_0_load75_fu_286,
        def => retval_0_2_0_0_0_load_fu_1862_p7,
        sel => retval_0_2_0_0_0_load_fu_1862_p8,
        dout => retval_0_2_0_0_0_load_fu_1862_p9);

    sparsemux_7_2_16_1_1_U57 : component accelerator_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_200,
        din1 => ap_const_lv16_0,
        din2 => retval_0_1_0_0_0_load69_fu_282,
        def => retval_0_1_0_0_0_load_fu_1905_p7,
        sel => retval_0_1_0_0_0_load_fu_1905_p8,
        dout => retval_0_1_0_0_0_load_fu_1905_p9);

    sparsemux_7_2_16_1_1_U58 : component accelerator_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_200,
        din1 => ap_const_lv16_0,
        din2 => retval_0_0_0_0_0_load63_fu_278,
        def => retval_0_0_0_0_0_load_fu_1948_p7,
        sel => retval_0_0_0_0_0_load_fu_1948_p8,
        dout => retval_0_0_0_0_0_load_fu_1948_p9);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_882_p4;
                end if; 
            end if;
        end if;
    end process;


    grp_model_array_fu_890_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_model_array_fu_890_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_fu_1137_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_model_array_fu_890_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_model_array_fu_890_ap_ready = ap_const_logic_1)) then 
                    grp_model_array_fu_890_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    UnifiedRetVal_reg_878_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
                UnifiedRetVal_reg_878 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                UnifiedRetVal_reg_878 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    ap_exit_tran_regpp0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_subdone))) then
                if ((icmp_ln69_reg_2352 = ap_const_lv1_1)) then 
                    ap_exit_tran_regpp0(0) <= '1';
                elsif ((ap_predicate_tran15to16_state13 = ap_const_boolean_1)) then 
                    ap_exit_tran_regpp0(0) <= '0';
                end if;
            end if; 
        end if;
    end process;

    bias_1_local_191_fu_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bias_1_local_191_fu_374 <= bias_1_local_0;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                bias_1_local_191_fu_374 <= grp_model_array_fu_890_ap_return_8;
            end if; 
        end if;
    end process;

    bias_1_local_1_1_fu_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bias_1_local_1_1_fu_378 <= bias_1_local_1_0;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                bias_1_local_1_1_fu_378 <= grp_model_array_fu_890_ap_return_9;
            end if; 
        end if;
    end process;

    bias_2_local_193_fu_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bias_2_local_193_fu_382 <= bias_2_local_0;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
                bias_2_local_193_fu_382 <= grp_model_array_fu_890_ap_return_8;
            end if; 
        end if;
    end process;

    bias_2_local_1_1_fu_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bias_2_local_1_1_fu_386 <= bias_2_local_1_0;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
                bias_2_local_1_1_fu_386 <= grp_model_array_fu_890_ap_return_9;
            end if; 
        end if;
    end process;

    j_fu_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_fu_274 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_0 = and_ln143_fu_1155_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_fu_1137_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                j_fu_274 <= add_ln69_fu_1143_p2;
            end if; 
        end if;
    end process;

    mux_case_04519_fu_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_04519_fu_294 <= mux_case_04520;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                mux_case_04519_fu_294 <= grp_model_array_fu_890_ap_return_8;
            end if; 
        end if;
    end process;

    mux_case_04727_fu_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_04727_fu_302 <= mux_case_04728;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
                mux_case_04727_fu_302 <= grp_model_array_fu_890_ap_return_8;
            end if; 
        end if;
    end process;

    mux_case_04935_fu_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_04935_fu_310 <= mux_case_04936;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                mux_case_04935_fu_310 <= grp_model_array_fu_890_ap_return_4;
            end if; 
        end if;
    end process;

    mux_case_05143_fu_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_05143_fu_318 <= mux_case_05144;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                mux_case_05143_fu_318 <= grp_model_array_fu_890_ap_return_5;
            end if; 
        end if;
    end process;

    mux_case_05351_fu_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_05351_fu_326 <= mux_case_05352;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
                mux_case_05351_fu_326 <= grp_model_array_fu_890_ap_return_4;
            end if; 
        end if;
    end process;

    mux_case_05559_fu_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_05559_fu_334 <= mux_case_05560;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
                mux_case_05559_fu_334 <= grp_model_array_fu_890_ap_return_5;
            end if; 
        end if;
    end process;

    mux_case_14623_fu_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_14623_fu_298 <= mux_case_14624;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                mux_case_14623_fu_298 <= grp_model_array_fu_890_ap_return_9;
            end if; 
        end if;
    end process;

    mux_case_14831_fu_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_14831_fu_306 <= mux_case_14832;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
                mux_case_14831_fu_306 <= grp_model_array_fu_890_ap_return_9;
            end if; 
        end if;
    end process;

    mux_case_15039_fu_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_15039_fu_314 <= mux_case_15040;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                mux_case_15039_fu_314 <= grp_model_array_fu_890_ap_return_6;
            end if; 
        end if;
    end process;

    mux_case_15247_fu_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_15247_fu_322 <= mux_case_15248;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                mux_case_15247_fu_322 <= grp_model_array_fu_890_ap_return_7;
            end if; 
        end if;
    end process;

    mux_case_15455_fu_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_15455_fu_330 <= mux_case_15456;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
                mux_case_15455_fu_330 <= grp_model_array_fu_890_ap_return_6;
            end if; 
        end if;
    end process;

    mux_case_15663_fu_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_15663_fu_338 <= mux_case_15664;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
                mux_case_15663_fu_338 <= grp_model_array_fu_890_ap_return_7;
            end if; 
        end if;
    end process;

    retval_0_0_0_0_0_load63_fu_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                retval_0_0_0_0_0_load63_fu_278 <= retval_0_0_0_0_0_load64;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                retval_0_0_0_0_0_load63_fu_278 <= retval_0_0_0_0_0_load_fu_1948_p9;
            end if; 
        end if;
    end process;

    retval_0_1_0_0_0_load69_fu_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                retval_0_1_0_0_0_load69_fu_282 <= retval_0_1_0_0_0_load70;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                retval_0_1_0_0_0_load69_fu_282 <= retval_0_1_0_0_0_load_fu_1905_p9;
            end if; 
        end if;
    end process;

    retval_0_2_0_0_0_load75_fu_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                retval_0_2_0_0_0_load75_fu_286 <= retval_0_2_0_0_0_load76;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                retval_0_2_0_0_0_load75_fu_286 <= retval_0_2_0_0_0_load_fu_1862_p9;
            end if; 
        end if;
    end process;

    retval_0_3_0_0_0_load81_fu_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                retval_0_3_0_0_0_load81_fu_290 <= retval_0_3_0_0_0_load82;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                retval_0_3_0_0_0_load81_fu_290 <= retval_0_3_0_0_0_load_fu_1819_p9;
            end if; 
        end if;
    end process;

    w1_local_187_fu_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w1_local_187_fu_342 <= w1_local_0;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                w1_local_187_fu_342 <= grp_model_array_fu_890_ap_return_4;
            end if; 
        end if;
    end process;

    w1_local_1_1_fu_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w1_local_1_1_fu_346 <= w1_local_1_0;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                w1_local_1_1_fu_346 <= grp_model_array_fu_890_ap_return_5;
            end if; 
        end if;
    end process;

    w1_local_2_1_fu_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w1_local_2_1_fu_350 <= w1_local_2_0;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                w1_local_2_1_fu_350 <= grp_model_array_fu_890_ap_return_6;
            end if; 
        end if;
    end process;

    w1_local_3_1_fu_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w1_local_3_1_fu_354 <= w1_local_3_0;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                w1_local_3_1_fu_354 <= grp_model_array_fu_890_ap_return_7;
            end if; 
        end if;
    end process;

    w2_local_189_fu_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w2_local_189_fu_358 <= w2_local_0;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
                w2_local_189_fu_358 <= grp_model_array_fu_890_ap_return_4;
            end if; 
        end if;
    end process;

    w2_local_1_1_fu_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w2_local_1_1_fu_362 <= w2_local_1_0;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
                w2_local_1_1_fu_362 <= grp_model_array_fu_890_ap_return_5;
            end if; 
        end if;
    end process;

    w2_local_2_1_fu_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w2_local_2_1_fu_366 <= w2_local_2_0;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
                w2_local_2_1_fu_366 <= grp_model_array_fu_890_ap_return_6;
            end if; 
        end if;
    end process;

    w2_local_3_1_fu_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w2_local_3_1_fu_370 <= w2_local_3_0;
            elsif (((ap_const_lv1_0 = and_ln143_reg_2356) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
                w2_local_3_1_fu_370 <= grp_model_array_fu_890_ap_return_7;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln143_reg_2356 <= and_ln143_fu_1155_p2;
                and_ln143_reg_2356_pp0_iter1_reg <= and_ln143_reg_2356;
                icmp_ln69_reg_2352_pp0_iter1_reg <= icmp_ln69_reg_2352;
                j_1_reg_2341 <= j_fu_274;
                j_1_reg_2341_pp0_iter1_reg <= j_1_reg_2341;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                and_ln93_2_reg_2520 <= and_ln93_2_fu_1657_p2;
                or_ln96_reg_2528 <= or_ln96_fu_1675_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                array_back1_bias_change_2_reg_2631 <= grp_model_array_fu_890_ap_return_9;
                array_back1_bias_change_reg_2626 <= grp_model_array_fu_890_ap_return_8;
                array_back1_weight_changes_4_reg_2611 <= grp_model_array_fu_890_ap_return_5;
                array_back1_weight_changes_5_reg_2616 <= grp_model_array_fu_890_ap_return_6;
                array_back1_weight_changes_6_reg_2621 <= grp_model_array_fu_890_ap_return_7;
                array_back1_weight_changes_reg_2606 <= grp_model_array_fu_890_ap_return_4;
                retval_0_0_0_0_0_load_2_reg_2566 <= retval_0_0_0_0_0_load63_fu_278;
                retval_0_0_0_0_0_load_reg_2601 <= retval_0_0_0_0_0_load_fu_1948_p9;
                retval_0_1_0_0_0_load_2_reg_2571 <= retval_0_1_0_0_0_load69_fu_282;
                retval_0_1_0_0_0_load_reg_2596 <= retval_0_1_0_0_0_load_fu_1905_p9;
                retval_0_2_0_0_0_load_2_reg_2576 <= retval_0_2_0_0_0_load75_fu_286;
                retval_0_2_0_0_0_load_reg_2591 <= retval_0_2_0_0_0_load_fu_1862_p9;
                retval_0_3_0_0_0_load_2_reg_2581 <= retval_0_3_0_0_0_load81_fu_290;
                retval_0_3_0_0_0_load_reg_2586 <= retval_0_3_0_0_0_load_fu_1819_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                array_back2_bias_change_2_reg_2561 <= grp_model_array_fu_890_ap_return_9;
                array_back2_bias_change_reg_2556 <= grp_model_array_fu_890_ap_return_8;
                array_back2_weight_changes_4_reg_2541 <= grp_model_array_fu_890_ap_return_5;
                array_back2_weight_changes_5_reg_2546 <= grp_model_array_fu_890_ap_return_6;
                array_back2_weight_changes_6_reg_2551 <= grp_model_array_fu_890_ap_return_7;
                array_back2_weight_changes_reg_2536 <= grp_model_array_fu_890_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                array_out1_output_k_2_reg_2452 <= grp_model_array_fu_890_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                array_out1_output_k_reg_2447 <= grp_model_array_fu_890_ap_return_0;
                bias_2_local_193_load_1_reg_2435 <= bias_2_local_193_fu_382;
                bias_2_local_1_1_load_1_reg_2441 <= bias_2_local_1_1_fu_386;
                w2_local_189_load_1_reg_2411 <= w2_local_189_fu_358;
                w2_local_1_1_load_1_reg_2417 <= w2_local_1_1_fu_362;
                w2_local_2_1_load_1_reg_2423 <= w2_local_2_1_fu_366;
                w2_local_3_1_load_1_reg_2429 <= w2_local_3_1_fu_370;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                bias_1_local_191_load_1_reg_2384 <= ap_sig_allocacmp_bias_1_local_191_load_1;
                bias_1_local_1_1_load_1_reg_2390 <= ap_sig_allocacmp_bias_1_local_1_1_load_1;
                w1_local_187_load_1_reg_2360 <= ap_sig_allocacmp_w1_local_187_load_1;
                w1_local_1_1_load_1_reg_2366 <= ap_sig_allocacmp_w1_local_1_1_load_1;
                w1_local_2_1_load_1_reg_2372 <= ap_sig_allocacmp_w1_local_2_1_load_1;
                w1_local_3_1_load_1_reg_2378 <= ap_sig_allocacmp_w1_local_3_1_load_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                bitcast_ln748_reg_2504 <= bitcast_ln748_fu_1610_p1;
                or_ln93_1_reg_2509 <= or_ln93_1_fu_1637_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln69_reg_2352 <= icmp_ln69_fu_1137_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                icmp_ln93_3_reg_2489 <= icmp_ln93_3_fu_1449_p2;
                icmp_ln93_reg_2457 <= icmp_ln93_fu_1279_p2;
                    or_ln_reg_2484(0) <= or_ln_fu_1441_p3(0);
                select_ln93_reg_2468 <= select_ln93_fu_1299_p3;
                sub_ln93_1_reg_2478 <= sub_ln93_1_fu_1341_p2;
                tmp_reg_2463 <= grp_model_array_fu_890_ap_return_0(15 downto 15);
                trunc_ln93_reg_2473 <= trunc_ln93_fu_1337_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                lshr_ln93_reg_2499 <= lshr_ln93_fu_1515_p2;
                    zext_ln93_reg_2494(15 downto 0) <= zext_ln93_fu_1503_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                tmp_1_reg_2515 <= grp_fu_907_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                trunc_ln69_reg_2396 <= trunc_ln69_fu_1189_p1;
                    zext_ln72_reg_2406(9 downto 0) <= zext_ln72_fu_1245_p1(9 downto 0);
                    zext_ln73_reg_2401(9 downto 0) <= zext_ln73_fu_1216_p1(9 downto 0);
            end if;
        end if;
    end process;
    zext_ln73_reg_2401(15 downto 10) <= "000000";
    zext_ln72_reg_2406(15 downto 10) <= "000000";
    or_ln_reg_2484(1) <= '0';
    zext_ln93_reg_2494(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    ap_exit_tran_regpp0(1) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage11_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_exit_tran_regpp0, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_exit_tran_regpp0 = ap_const_lv2_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_exit_tran_regpp0 = ap_const_lv2_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    LD_fu_1598_p5 <= (tmp_s_fu_1591_p3 & zext_ln93_4_fu_1560_p1(51 downto 0));
    add_ln69_fu_1143_p2 <= std_logic_vector(unsigned(j_fu_274) + unsigned(ap_const_lv3_1));
    add_ln93_1_fu_1506_p2 <= std_logic_vector(unsigned(sub_ln93_1_reg_2478) + unsigned(ap_const_lv32_FFFFFFCA));
    add_ln93_2_fu_1544_p2 <= std_logic_vector(unsigned(cond50_i_i315_fu_1535_p3) + unsigned(zext_ln93_3_fu_1541_p1));
    add_ln93_3_fu_1585_p2 <= std_logic_vector(unsigned(select_ln93_1_fu_1572_p3) + unsigned(sub_ln93_3_fu_1580_p2));
    add_ln93_fu_1347_p2 <= std_logic_vector(unsigned(sub_ln93_1_fu_1341_p2) + unsigned(ap_const_lv32_FFFFFFCB));
    and_ln143_fu_1155_p2 <= (icmp_ln143_fu_1149_p2 and cmp_i_i100);
    and_ln93_1_fu_1643_p2 <= (tmp_1_reg_2515 and or_ln93_1_reg_2509);
    and_ln93_2_fu_1657_p2 <= (xor_ln93_fu_1652_p2 and and_ln93_1_fu_1643_p2);
    and_ln93_3_fu_1389_p2 <= (select_ln93_fu_1299_p3 and lshr_ln93_2_fu_1383_p2);
    and_ln93_fu_1429_p2 <= (xor_ln93_1_fu_1415_p2 and tmp_7_fu_1421_p3);
    and_ln94_1_fu_1782_p2 <= (icmp_ln94_2_fu_1772_p2 and icmp_ln94_1_fu_1767_p2);
    and_ln94_2_fu_1788_p2 <= (and_ln94_fu_1777_p2 and and_ln94_1_fu_1782_p2);
    and_ln94_3_fu_1844_p2 <= (icmp_ln94_3_fu_1839_p2 and and_ln93_2_reg_2520);
    and_ln94_4_fu_1887_p2 <= (icmp_ln94_4_fu_1882_p2 and and_ln93_2_reg_2520);
    and_ln94_5_fu_1930_p2 <= (icmp_ln94_5_fu_1925_p2 and and_ln93_2_reg_2520);
    and_ln94_fu_1777_p2 <= (icmp_ln94_fu_1762_p2 and and_ln93_2_reg_2520);
    and_ln96_1_fu_1669_p2 <= (xor_ln96_fu_1663_p2 and and_ln96_fu_1647_p2);
    and_ln96_2_fu_1794_p2 <= (icmp_ln94_fu_1762_p2 and icmp_ln94_1_fu_1767_p2);
    and_ln96_3_fu_1800_p2 <= (or_ln96_reg_2528 and icmp_ln94_2_fu_1772_p2);
    and_ln96_4_fu_1805_p2 <= (and_ln96_3_fu_1800_p2 and and_ln96_2_fu_1794_p2);
    and_ln96_5_fu_1849_p2 <= (or_ln96_reg_2528 and icmp_ln94_3_fu_1839_p2);
    and_ln96_6_fu_1892_p2 <= (or_ln96_reg_2528 and icmp_ln94_4_fu_1882_p2);
    and_ln96_7_fu_1935_p2 <= (or_ln96_reg_2528 and icmp_ln94_5_fu_1925_p2);
    and_ln96_fu_1647_p2 <= (or_ln93_1_reg_2509 and grp_fu_907_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state16 <= ap_CS_fsm(13);
    ap_CS_fsm_state17 <= ap_CS_fsm(14);
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_ignoreCallOp219 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_ignoreCallOp126 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_ignoreCallOp138 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_ignoreCallOp175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_flush_enable_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_subdone, ap_predicate_tran15to16_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and ((ap_predicate_tran15to16_state13 = ap_const_boolean_1) or (icmp_ln69_reg_2352 = ap_const_lv1_1)))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_UnifiedRetVal_phi_fu_882_p4_assign_proc : process(icmp_ln69_reg_2352, UnifiedRetVal_reg_878, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            ap_phi_mux_UnifiedRetVal_phi_fu_882_p4 <= ap_const_lv1_0;
        else 
            ap_phi_mux_UnifiedRetVal_phi_fu_882_p4 <= UnifiedRetVal_reg_878;
        end if; 
    end process;


    ap_predicate_tran15to16_state13_assign_proc : process(icmp_ln69_reg_2352, and_ln143_reg_2356)
    begin
                ap_predicate_tran15to16_state13 <= ((ap_const_lv1_1 = and_ln143_reg_2356) and (icmp_ln69_reg_2352 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_UnifiedRetVal_phi_fu_882_p4, ap_CS_fsm_state16, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ap_return <= ap_phi_mux_UnifiedRetVal_phi_fu_882_p4;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    ap_sig_allocacmp_bias_1_local_191_load_1_assign_proc : process(icmp_ln69_reg_2352_pp0_iter1_reg, and_ln143_reg_2356_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, grp_model_array_fu_890_ap_return_8, ap_block_pp0_stage1, bias_1_local_191_fu_374)
    begin
        if (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_sig_allocacmp_bias_1_local_191_load_1 <= grp_model_array_fu_890_ap_return_8;
        else 
            ap_sig_allocacmp_bias_1_local_191_load_1 <= bias_1_local_191_fu_374;
        end if; 
    end process;


    ap_sig_allocacmp_bias_1_local_1_1_load_1_assign_proc : process(icmp_ln69_reg_2352_pp0_iter1_reg, and_ln143_reg_2356_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, grp_model_array_fu_890_ap_return_9, ap_block_pp0_stage1, bias_1_local_1_1_fu_378)
    begin
        if (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_sig_allocacmp_bias_1_local_1_1_load_1 <= grp_model_array_fu_890_ap_return_9;
        else 
            ap_sig_allocacmp_bias_1_local_1_1_load_1 <= bias_1_local_1_1_fu_378;
        end if; 
    end process;


    ap_sig_allocacmp_w1_local_187_load_1_assign_proc : process(icmp_ln69_reg_2352_pp0_iter1_reg, and_ln143_reg_2356_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, grp_model_array_fu_890_ap_return_4, ap_block_pp0_stage1, w1_local_187_fu_342)
    begin
        if (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_sig_allocacmp_w1_local_187_load_1 <= grp_model_array_fu_890_ap_return_4;
        else 
            ap_sig_allocacmp_w1_local_187_load_1 <= w1_local_187_fu_342;
        end if; 
    end process;


    ap_sig_allocacmp_w1_local_1_1_load_1_assign_proc : process(icmp_ln69_reg_2352_pp0_iter1_reg, and_ln143_reg_2356_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, grp_model_array_fu_890_ap_return_5, ap_block_pp0_stage1, w1_local_1_1_fu_346)
    begin
        if (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_sig_allocacmp_w1_local_1_1_load_1 <= grp_model_array_fu_890_ap_return_5;
        else 
            ap_sig_allocacmp_w1_local_1_1_load_1 <= w1_local_1_1_fu_346;
        end if; 
    end process;


    ap_sig_allocacmp_w1_local_2_1_load_1_assign_proc : process(icmp_ln69_reg_2352_pp0_iter1_reg, and_ln143_reg_2356_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, grp_model_array_fu_890_ap_return_6, ap_block_pp0_stage1, w1_local_2_1_fu_350)
    begin
        if (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_sig_allocacmp_w1_local_2_1_load_1 <= grp_model_array_fu_890_ap_return_6;
        else 
            ap_sig_allocacmp_w1_local_2_1_load_1 <= w1_local_2_1_fu_350;
        end if; 
    end process;


    ap_sig_allocacmp_w1_local_3_1_load_1_assign_proc : process(icmp_ln69_reg_2352_pp0_iter1_reg, and_ln143_reg_2356_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, grp_model_array_fu_890_ap_return_7, ap_block_pp0_stage1, w1_local_3_1_fu_354)
    begin
        if (((ap_const_lv1_0 = and_ln143_reg_2356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln69_reg_2352_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_sig_allocacmp_w1_local_3_1_load_1 <= grp_model_array_fu_890_ap_return_7;
        else 
            ap_sig_allocacmp_w1_local_3_1_load_1 <= w1_local_3_1_fu_354;
        end if; 
    end process;

    array_back1_bias_change_2_out <= array_back1_bias_change_2_reg_2631;

    array_back1_bias_change_2_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            array_back1_bias_change_2_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_bias_change_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_bias_change_out <= array_back1_bias_change_reg_2626;

    array_back1_bias_change_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            array_back1_bias_change_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_bias_change_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_weight_changes_4_out <= array_back1_weight_changes_4_reg_2611;

    array_back1_weight_changes_4_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            array_back1_weight_changes_4_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_weight_changes_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_weight_changes_5_out <= array_back1_weight_changes_5_reg_2616;

    array_back1_weight_changes_5_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            array_back1_weight_changes_5_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_weight_changes_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_weight_changes_6_out <= array_back1_weight_changes_6_reg_2621;

    array_back1_weight_changes_6_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            array_back1_weight_changes_6_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_weight_changes_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_weight_changes_out <= array_back1_weight_changes_reg_2606;

    array_back1_weight_changes_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            array_back1_weight_changes_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_weight_changes_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_bias_change_2_out <= array_back2_bias_change_2_reg_2561;

    array_back2_bias_change_2_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            array_back2_bias_change_2_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_bias_change_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_bias_change_out <= array_back2_bias_change_reg_2556;

    array_back2_bias_change_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            array_back2_bias_change_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_bias_change_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_weight_changes_4_out <= array_back2_weight_changes_4_reg_2541;

    array_back2_weight_changes_4_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            array_back2_weight_changes_4_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_weight_changes_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_weight_changes_5_out <= array_back2_weight_changes_5_reg_2546;

    array_back2_weight_changes_5_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            array_back2_weight_changes_5_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_weight_changes_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_weight_changes_6_out <= array_back2_weight_changes_6_reg_2551;

    array_back2_weight_changes_6_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            array_back2_weight_changes_6_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_weight_changes_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_weight_changes_out <= array_back2_weight_changes_reg_2536;

    array_back2_weight_changes_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            array_back2_weight_changes_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_weight_changes_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bias_1_local_191_out_assign_proc : process(icmp_ln69_reg_2352, bias_1_local_191_load_1_reg_2384, ap_CS_fsm_state17, ap_CS_fsm_state16, bias_1_local_191_fu_374)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            bias_1_local_191_out <= bias_1_local_191_fu_374;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            bias_1_local_191_out <= bias_1_local_191_load_1_reg_2384;
        else 
            bias_1_local_191_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_1_local_191_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            bias_1_local_191_out_ap_vld <= ap_const_logic_1;
        else 
            bias_1_local_191_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bias_1_local_1_1_out_assign_proc : process(icmp_ln69_reg_2352, bias_1_local_1_1_load_1_reg_2390, ap_CS_fsm_state17, ap_CS_fsm_state16, bias_1_local_1_1_fu_378)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            bias_1_local_1_1_out <= bias_1_local_1_1_fu_378;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            bias_1_local_1_1_out <= bias_1_local_1_1_load_1_reg_2390;
        else 
            bias_1_local_1_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_1_local_1_1_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            bias_1_local_1_1_out_ap_vld <= ap_const_logic_1;
        else 
            bias_1_local_1_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bias_2_local_193_out_assign_proc : process(icmp_ln69_reg_2352, bias_2_local_193_load_1_reg_2435, ap_CS_fsm_state17, ap_CS_fsm_state16, bias_2_local_193_fu_382)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            bias_2_local_193_out <= bias_2_local_193_fu_382;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            bias_2_local_193_out <= bias_2_local_193_load_1_reg_2435;
        else 
            bias_2_local_193_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_2_local_193_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            bias_2_local_193_out_ap_vld <= ap_const_logic_1;
        else 
            bias_2_local_193_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bias_2_local_1_1_out_assign_proc : process(icmp_ln69_reg_2352, bias_2_local_1_1_load_1_reg_2441, ap_CS_fsm_state17, ap_CS_fsm_state16, bias_2_local_1_1_fu_386)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            bias_2_local_1_1_out <= bias_2_local_1_1_fu_386;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            bias_2_local_1_1_out <= bias_2_local_1_1_load_1_reg_2441;
        else 
            bias_2_local_1_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_2_local_1_1_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            bias_2_local_1_1_out_ap_vld <= ap_const_logic_1;
        else 
            bias_2_local_1_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln748_fu_1610_p1 <= LD_fu_1598_p5;
    cond50_i_i315_fu_1535_p3 <= 
        lshr_ln93_reg_2499 when (icmp_ln93_3_reg_2489(0) = '1') else 
        shl_ln93_fu_1530_p2;
    delta_2_1_fu_1494_p3 <= 
        delta_2_fu_1488_p2 when (icmp_ln105_fu_1455_p2(0) = '1') else 
        ap_const_lv16_0;
    delta_2_fu_1488_p2 <= std_logic_vector(unsigned(grp_model_array_fu_890_ap_return_0) - unsigned(zext_ln106_fu_1484_p1));

    grp_fu_907_opcode_assign_proc : process(icmp_ln69_reg_2352, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage9_00001, ap_block_pp0_stage10_00001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_00001))) then 
                grp_fu_907_opcode <= ap_const_lv5_5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_00001))) then 
                grp_fu_907_opcode <= ap_const_lv5_2;
            else 
                grp_fu_907_opcode <= "XXXXX";
            end if;
        else 
            grp_fu_907_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_907_p0_assign_proc : process(ap_enable_reg_pp0_iter0, bitcast_ln748_fu_1610_p1, bitcast_ln748_reg_2504, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
                grp_fu_907_p0 <= bitcast_ln748_reg_2504;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
                grp_fu_907_p0 <= bitcast_ln748_fu_1610_p1;
            else 
                grp_fu_907_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_907_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_model_array_fu_890_ap_start <= grp_model_array_fu_890_ap_start_reg;

    grp_model_array_fu_890_p_read10_assign_proc : process(icmp_ln69_reg_2352, ap_enable_reg_pp0_iter0, w1_local_187_load_1_reg_2360, ap_CS_fsm_pp0_stage1, w2_local_189_load_1_reg_2411, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage1_ignoreCallOp126, ap_block_pp0_stage4_ignoreCallOp138, ap_block_pp0_stage7_ignoreCallOp175, ap_block_pp0_stage10_ignoreCallOp219, ap_sig_allocacmp_w1_local_187_load_1, w2_local_189_fu_358)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp219))) then 
                grp_model_array_fu_890_p_read10 <= w1_local_187_load_1_reg_2360;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp175))) then 
                grp_model_array_fu_890_p_read10 <= w2_local_189_load_1_reg_2411;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp138))) then 
                grp_model_array_fu_890_p_read10 <= w2_local_189_fu_358;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp126))) then 
                grp_model_array_fu_890_p_read10 <= ap_sig_allocacmp_w1_local_187_load_1;
            else 
                grp_model_array_fu_890_p_read10 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_model_array_fu_890_p_read10 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_890_p_read29_assign_proc : process(icmp_ln69_reg_2352, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, w1_local_1_1_load_1_reg_2366, ap_CS_fsm_pp0_stage4, w2_local_1_1_load_1_reg_2417, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage1_ignoreCallOp126, ap_block_pp0_stage4_ignoreCallOp138, ap_block_pp0_stage7_ignoreCallOp175, ap_block_pp0_stage10_ignoreCallOp219, ap_sig_allocacmp_w1_local_1_1_load_1, w2_local_1_1_fu_362)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp219))) then 
                grp_model_array_fu_890_p_read29 <= w1_local_1_1_load_1_reg_2366;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp175))) then 
                grp_model_array_fu_890_p_read29 <= w2_local_1_1_load_1_reg_2417;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp138))) then 
                grp_model_array_fu_890_p_read29 <= w2_local_1_1_fu_362;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp126))) then 
                grp_model_array_fu_890_p_read29 <= ap_sig_allocacmp_w1_local_1_1_load_1;
            else 
                grp_model_array_fu_890_p_read29 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_model_array_fu_890_p_read29 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_890_p_read30_assign_proc : process(icmp_ln69_reg_2352, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, w1_local_2_1_load_1_reg_2372, ap_CS_fsm_pp0_stage4, w2_local_2_1_load_1_reg_2423, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage1_ignoreCallOp126, ap_block_pp0_stage4_ignoreCallOp138, ap_block_pp0_stage7_ignoreCallOp175, ap_block_pp0_stage10_ignoreCallOp219, ap_sig_allocacmp_w1_local_2_1_load_1, w2_local_2_1_fu_366)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp219))) then 
                grp_model_array_fu_890_p_read30 <= w1_local_2_1_load_1_reg_2372;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp175))) then 
                grp_model_array_fu_890_p_read30 <= w2_local_2_1_load_1_reg_2423;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp138))) then 
                grp_model_array_fu_890_p_read30 <= w2_local_2_1_fu_366;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp126))) then 
                grp_model_array_fu_890_p_read30 <= ap_sig_allocacmp_w1_local_2_1_load_1;
            else 
                grp_model_array_fu_890_p_read30 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_model_array_fu_890_p_read30 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_890_p_read31_assign_proc : process(icmp_ln69_reg_2352, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, w1_local_3_1_load_1_reg_2378, ap_CS_fsm_pp0_stage4, w2_local_3_1_load_1_reg_2429, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage1_ignoreCallOp126, ap_block_pp0_stage4_ignoreCallOp138, ap_block_pp0_stage7_ignoreCallOp175, ap_block_pp0_stage10_ignoreCallOp219, ap_sig_allocacmp_w1_local_3_1_load_1, w2_local_3_1_fu_370)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp219))) then 
                grp_model_array_fu_890_p_read31 <= w1_local_3_1_load_1_reg_2378;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp175))) then 
                grp_model_array_fu_890_p_read31 <= w2_local_3_1_load_1_reg_2429;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp138))) then 
                grp_model_array_fu_890_p_read31 <= w2_local_3_1_fu_370;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp126))) then 
                grp_model_array_fu_890_p_read31 <= ap_sig_allocacmp_w1_local_3_1_load_1;
            else 
                grp_model_array_fu_890_p_read31 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_model_array_fu_890_p_read31 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_890_p_read32_assign_proc : process(icmp_ln69_reg_2352, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, bias_1_local_191_load_1_reg_2384, ap_CS_fsm_pp0_stage4, bias_2_local_193_load_1_reg_2435, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage1_ignoreCallOp126, ap_block_pp0_stage4_ignoreCallOp138, ap_block_pp0_stage7_ignoreCallOp175, ap_block_pp0_stage10_ignoreCallOp219, ap_sig_allocacmp_bias_1_local_191_load_1, bias_2_local_193_fu_382)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp219))) then 
                grp_model_array_fu_890_p_read32 <= bias_1_local_191_load_1_reg_2384;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp175))) then 
                grp_model_array_fu_890_p_read32 <= bias_2_local_193_load_1_reg_2435;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp138))) then 
                grp_model_array_fu_890_p_read32 <= bias_2_local_193_fu_382;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp126))) then 
                grp_model_array_fu_890_p_read32 <= ap_sig_allocacmp_bias_1_local_191_load_1;
            else 
                grp_model_array_fu_890_p_read32 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_model_array_fu_890_p_read32 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_890_p_read33_assign_proc : process(icmp_ln69_reg_2352, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, bias_1_local_1_1_load_1_reg_2390, ap_CS_fsm_pp0_stage4, bias_2_local_1_1_load_1_reg_2441, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage1_ignoreCallOp126, ap_block_pp0_stage4_ignoreCallOp138, ap_block_pp0_stage7_ignoreCallOp175, ap_block_pp0_stage10_ignoreCallOp219, ap_sig_allocacmp_bias_1_local_1_1_load_1, bias_2_local_1_1_fu_386)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp219))) then 
                grp_model_array_fu_890_p_read33 <= bias_1_local_1_1_load_1_reg_2390;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp175))) then 
                grp_model_array_fu_890_p_read33 <= bias_2_local_1_1_load_1_reg_2441;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp138))) then 
                grp_model_array_fu_890_p_read33 <= bias_2_local_1_1_fu_386;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp126))) then 
                grp_model_array_fu_890_p_read33 <= ap_sig_allocacmp_bias_1_local_1_1_load_1;
            else 
                grp_model_array_fu_890_p_read33 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_model_array_fu_890_p_read33 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_890_p_read34_assign_proc : process(icmp_ln69_reg_2352, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, zext_ln73_fu_1216_p1, zext_ln73_reg_2401, ap_CS_fsm_pp0_stage4, array_out1_output_k_reg_2447, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, grp_model_array_fu_890_ap_return_0, ap_block_pp0_stage1_ignoreCallOp126, ap_block_pp0_stage4_ignoreCallOp138, ap_block_pp0_stage7_ignoreCallOp175, ap_block_pp0_stage10_ignoreCallOp219)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp219))) then 
                grp_model_array_fu_890_p_read34 <= zext_ln73_reg_2401;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp175))) then 
                grp_model_array_fu_890_p_read34 <= array_out1_output_k_reg_2447;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp138))) then 
                grp_model_array_fu_890_p_read34 <= grp_model_array_fu_890_ap_return_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp126))) then 
                grp_model_array_fu_890_p_read34 <= zext_ln73_fu_1216_p1;
            else 
                grp_model_array_fu_890_p_read34 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_model_array_fu_890_p_read34 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_890_p_read35_assign_proc : process(icmp_ln69_reg_2352, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, zext_ln72_fu_1245_p1, zext_ln72_reg_2406, ap_CS_fsm_pp0_stage4, array_out1_output_k_2_reg_2452, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, grp_model_array_fu_890_ap_return_1, ap_block_pp0_stage1_ignoreCallOp126, ap_block_pp0_stage4_ignoreCallOp138, ap_block_pp0_stage7_ignoreCallOp175, ap_block_pp0_stage10_ignoreCallOp219)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp219))) then 
                grp_model_array_fu_890_p_read35 <= zext_ln72_reg_2406;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp175))) then 
                grp_model_array_fu_890_p_read35 <= array_out1_output_k_2_reg_2452;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp138))) then 
                grp_model_array_fu_890_p_read35 <= grp_model_array_fu_890_ap_return_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp126))) then 
                grp_model_array_fu_890_p_read35 <= zext_ln72_fu_1245_p1;
            else 
                grp_model_array_fu_890_p_read35 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_model_array_fu_890_p_read35 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_890_p_read36_assign_proc : process(icmp_ln69_reg_2352, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, grp_model_array_fu_890_ap_return_2, ap_block_pp0_stage1_ignoreCallOp126, ap_block_pp0_stage4_ignoreCallOp138, ap_block_pp0_stage7_ignoreCallOp175, ap_block_pp0_stage10_ignoreCallOp219, delta_2_1_fu_1494_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp219))) then 
            grp_model_array_fu_890_p_read36 <= grp_model_array_fu_890_ap_return_2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp175))) then 
            grp_model_array_fu_890_p_read36 <= delta_2_1_fu_1494_p3;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp138)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp126)))) then 
            grp_model_array_fu_890_p_read36 <= ap_const_lv16_0;
        else 
            grp_model_array_fu_890_p_read36 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_890_p_read37_assign_proc : process(icmp_ln69_reg_2352, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage10, grp_model_array_fu_890_ap_return_3, ap_block_pp0_stage1_ignoreCallOp126, ap_block_pp0_stage4_ignoreCallOp138, ap_block_pp0_stage7_ignoreCallOp175, ap_block_pp0_stage10_ignoreCallOp219)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_ignoreCallOp219))) then 
            grp_model_array_fu_890_p_read37 <= grp_model_array_fu_890_ap_return_3;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp175)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp138)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2352 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp126)))) then 
            grp_model_array_fu_890_p_read37 <= ap_const_lv16_0;
        else 
            grp_model_array_fu_890_p_read37 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln105_fu_1455_p2 <= "1" when (signed(grp_model_array_fu_890_ap_return_0) > signed(ap_const_lv16_0)) else "0";
    icmp_ln143_fu_1149_p2 <= "1" when (j_fu_274 = ap_const_lv3_3) else "0";
    icmp_ln69_fu_1137_p2 <= "1" when (j_fu_274 = ap_const_lv3_4) else "0";
    icmp_ln93_1_fu_1363_p2 <= "1" when (signed(tmp_5_fu_1353_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln93_2_fu_1395_p2 <= "0" when (and_ln93_3_fu_1389_p2 = ap_const_lv16_0) else "1";
    icmp_ln93_3_fu_1449_p2 <= "1" when (signed(add_ln93_fu_1347_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln93_4_fu_1625_p2 <= "0" when (add_ln93_3_fu_1585_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln93_5_fu_1631_p2 <= "1" when (trunc_ln93_1_fu_1615_p4 = ap_const_lv52_0) else "0";
    icmp_ln93_fu_1279_p2 <= "1" when (grp_model_array_fu_890_ap_return_0 = ap_const_lv16_0) else "0";
    icmp_ln94_1_fu_1767_p2 <= "0" when (j_1_reg_2341_pp0_iter1_reg = ap_const_lv3_1) else "1";
    icmp_ln94_2_fu_1772_p2 <= "0" when (j_1_reg_2341_pp0_iter1_reg = ap_const_lv3_2) else "1";
    icmp_ln94_3_fu_1839_p2 <= "1" when (j_1_reg_2341_pp0_iter1_reg = ap_const_lv3_2) else "0";
    icmp_ln94_4_fu_1882_p2 <= "1" when (j_1_reg_2341_pp0_iter1_reg = ap_const_lv3_1) else "0";
    icmp_ln94_5_fu_1925_p2 <= "1" when (j_1_reg_2341_pp0_iter1_reg = ap_const_lv3_0) else "0";
    icmp_ln94_fu_1762_p2 <= "0" when (j_1_reg_2341_pp0_iter1_reg = ap_const_lv3_0) else "1";
    lshr_ln93_1_fu_1550_p4 <= add_ln93_2_fu_1544_p2(63 downto 1);
    lshr_ln93_2_fu_1383_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & zext_ln93_5_fu_1379_p1(16-1 downto 0)))));
    lshr_ln93_fu_1515_p2 <= std_logic_vector(shift_right(unsigned(zext_ln93_fu_1503_p1),to_integer(unsigned('0' & zext_ln93_1_fu_1511_p1(31-1 downto 0)))));
    mux_case_04519_out <= mux_case_04519_fu_294;

    mux_case_04519_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            mux_case_04519_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_04519_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_04727_out <= mux_case_04727_fu_302;

    mux_case_04727_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            mux_case_04727_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_04727_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_04935_out <= mux_case_04935_fu_310;

    mux_case_04935_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            mux_case_04935_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_04935_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_05143_out <= mux_case_05143_fu_318;

    mux_case_05143_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            mux_case_05143_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_05143_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_05351_out <= mux_case_05351_fu_326;

    mux_case_05351_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            mux_case_05351_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_05351_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_05559_out <= mux_case_05559_fu_334;

    mux_case_05559_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            mux_case_05559_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_05559_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_14623_out <= mux_case_14623_fu_298;

    mux_case_14623_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            mux_case_14623_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_14623_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_14831_out <= mux_case_14831_fu_306;

    mux_case_14831_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            mux_case_14831_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_14831_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_15039_out <= mux_case_15039_fu_314;

    mux_case_15039_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            mux_case_15039_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_15039_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_15247_out <= mux_case_15247_fu_322;

    mux_case_15247_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            mux_case_15247_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_15247_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_15455_out <= mux_case_15455_fu_330;

    mux_case_15455_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            mux_case_15455_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_15455_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_15663_out <= mux_case_15663_fu_338;

    mux_case_15663_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            mux_case_15663_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_15663_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln93_1_fu_1637_p2 <= (icmp_ln93_5_fu_1631_p2 or icmp_ln93_4_fu_1625_p2);
    or_ln93_fu_1435_p2 <= (phi_ln93_fu_1401_p2 or and_ln93_fu_1429_p2);
    or_ln96_fu_1675_p2 <= (icmp_ln93_reg_2457 or and_ln96_1_fu_1669_p2);
    or_ln_fu_1441_p3 <= (ap_const_lv1_0 & or_ln93_fu_1435_p2);
    output_0_1_fu_1221_p9 <= "XXXXXXXXXX";
    output_0_fu_1192_p9 <= "XXXXXXXXXX";
    phi_ln93_fu_1401_p2 <= (icmp_ln93_2_fu_1395_p2 and icmp_ln93_1_fu_1363_p2);

    retval_0_0_0_0_0_load63_out_assign_proc : process(icmp_ln69_reg_2352, retval_0_0_0_0_0_load_2_reg_2566, ap_CS_fsm_state17, ap_CS_fsm_state16, retval_0_0_0_0_0_load63_fu_278)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            retval_0_0_0_0_0_load63_out <= retval_0_0_0_0_0_load63_fu_278;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            retval_0_0_0_0_0_load63_out <= retval_0_0_0_0_0_load_2_reg_2566;
        else 
            retval_0_0_0_0_0_load63_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    retval_0_0_0_0_0_load63_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            retval_0_0_0_0_0_load63_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_0_0_0_0_load63_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    retval_0_0_0_0_0_load_fu_1948_p7 <= "XXXXXXXXXXXXXXXX";
    retval_0_0_0_0_0_load_fu_1948_p8 <= (and_ln94_5_fu_1930_p2 & and_ln96_7_fu_1935_p2);
    retval_0_0_0_0_0_load_out <= retval_0_0_0_0_0_load_reg_2601;

    retval_0_0_0_0_0_load_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            retval_0_0_0_0_0_load_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_0_0_0_0_load_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    retval_0_1_0_0_0_load69_out_assign_proc : process(icmp_ln69_reg_2352, retval_0_1_0_0_0_load_2_reg_2571, ap_CS_fsm_state17, ap_CS_fsm_state16, retval_0_1_0_0_0_load69_fu_282)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            retval_0_1_0_0_0_load69_out <= retval_0_1_0_0_0_load69_fu_282;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            retval_0_1_0_0_0_load69_out <= retval_0_1_0_0_0_load_2_reg_2571;
        else 
            retval_0_1_0_0_0_load69_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    retval_0_1_0_0_0_load69_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            retval_0_1_0_0_0_load69_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_1_0_0_0_load69_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    retval_0_1_0_0_0_load_fu_1905_p7 <= "XXXXXXXXXXXXXXXX";
    retval_0_1_0_0_0_load_fu_1905_p8 <= (and_ln94_4_fu_1887_p2 & and_ln96_6_fu_1892_p2);
    retval_0_1_0_0_0_load_out <= retval_0_1_0_0_0_load_reg_2596;

    retval_0_1_0_0_0_load_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            retval_0_1_0_0_0_load_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_1_0_0_0_load_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    retval_0_2_0_0_0_load75_out_assign_proc : process(icmp_ln69_reg_2352, retval_0_2_0_0_0_load_2_reg_2576, ap_CS_fsm_state17, ap_CS_fsm_state16, retval_0_2_0_0_0_load75_fu_286)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            retval_0_2_0_0_0_load75_out <= retval_0_2_0_0_0_load75_fu_286;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            retval_0_2_0_0_0_load75_out <= retval_0_2_0_0_0_load_2_reg_2576;
        else 
            retval_0_2_0_0_0_load75_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    retval_0_2_0_0_0_load75_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            retval_0_2_0_0_0_load75_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_2_0_0_0_load75_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    retval_0_2_0_0_0_load_fu_1862_p7 <= "XXXXXXXXXXXXXXXX";
    retval_0_2_0_0_0_load_fu_1862_p8 <= (and_ln94_3_fu_1844_p2 & and_ln96_5_fu_1849_p2);
    retval_0_2_0_0_0_load_out <= retval_0_2_0_0_0_load_reg_2591;

    retval_0_2_0_0_0_load_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            retval_0_2_0_0_0_load_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_2_0_0_0_load_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    retval_0_3_0_0_0_load81_out_assign_proc : process(icmp_ln69_reg_2352, retval_0_3_0_0_0_load_2_reg_2581, ap_CS_fsm_state17, ap_CS_fsm_state16, retval_0_3_0_0_0_load81_fu_290)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            retval_0_3_0_0_0_load81_out <= retval_0_3_0_0_0_load81_fu_290;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            retval_0_3_0_0_0_load81_out <= retval_0_3_0_0_0_load_2_reg_2581;
        else 
            retval_0_3_0_0_0_load81_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    retval_0_3_0_0_0_load81_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            retval_0_3_0_0_0_load81_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_3_0_0_0_load81_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    retval_0_3_0_0_0_load_fu_1819_p7 <= "XXXXXXXXXXXXXXXX";
    retval_0_3_0_0_0_load_fu_1819_p8 <= (and_ln94_2_fu_1788_p2 & and_ln96_4_fu_1805_p2);
    retval_0_3_0_0_0_load_out <= retval_0_3_0_0_0_load_reg_2586;

    retval_0_3_0_0_0_load_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            retval_0_3_0_0_0_load_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_3_0_0_0_load_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln93_1_fu_1572_p3 <= 
        ap_const_lv11_3FF when (tmp_9_fu_1564_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln93_fu_1299_p3 <= 
        sub_ln93_fu_1293_p2 when (tmp_fu_1285_p3(0) = '1') else 
        grp_model_array_fu_890_ap_return_0;
        sext_ln93_fu_1325_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_1317_p3),32));

    shl_ln93_fu_1530_p2 <= std_logic_vector(shift_left(unsigned(zext_ln93_reg_2494),to_integer(unsigned('0' & zext_ln93_2_fu_1526_p1(31-1 downto 0)))));
    sub_ln93_1_fu_1341_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(tmp_4_fu_1329_p3));
    sub_ln93_2_fu_1521_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln93_1_reg_2478));
    sub_ln93_3_fu_1580_p2 <= std_logic_vector(unsigned(ap_const_lv11_7) - unsigned(trunc_ln93_reg_2473));
    sub_ln93_4_fu_1373_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) - unsigned(trunc_ln93_2_fu_1369_p1));
    sub_ln93_fu_1293_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(grp_model_array_fu_890_ap_return_0));
    
    tmp_2_fu_1307_p4_proc : process(select_ln93_fu_1299_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_2_fu_1307_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := select_ln93_fu_1299_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for tmp_2_fu_1307_p4_i in 0 to 16-1 loop
                v0_cpy(tmp_2_fu_1307_p4_i) := select_ln93_fu_1299_p3(16-1-tmp_2_fu_1307_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_2_fu_1307_p4 <= resvalue(16-1 downto 0);
    end process;

    tmp_3_fu_1317_p3 <= (ap_const_lv1_1 & tmp_2_fu_1307_p4);
    
    tmp_4_fu_1329_p3_proc : process(sext_ln93_fu_1325_p1)
    begin
        tmp_4_fu_1329_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln93_fu_1325_p1(i) = '1' then
                tmp_4_fu_1329_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    tmp_5_fu_1353_p4 <= add_ln93_fu_1347_p2(31 downto 1);
    tmp_6_fu_1407_p3 <= add_ln93_fu_1347_p2(31 downto 31);
    tmp_7_fu_1421_p3 <= select_ln93_fu_1299_p3(to_integer(unsigned(add_ln93_fu_1347_p2)) downto to_integer(unsigned(add_ln93_fu_1347_p2))) when (to_integer(unsigned(add_ln93_fu_1347_p2)) >= 0 and to_integer(unsigned(add_ln93_fu_1347_p2)) <=15) else "-";
    tmp_9_fu_1564_p3 <= add_ln93_2_fu_1544_p2(54 downto 54);
    tmp_fu_1285_p3 <= grp_model_array_fu_890_ap_return_0(15 downto 15);
    tmp_s_fu_1591_p3 <= (tmp_reg_2463 & add_ln93_3_fu_1585_p2);
    trunc_ln69_fu_1189_p1 <= j_1_reg_2341(2 - 1 downto 0);
    trunc_ln93_1_fu_1615_p4 <= add_ln93_2_fu_1544_p2(52 downto 1);
    trunc_ln93_2_fu_1369_p1 <= sub_ln93_1_fu_1341_p2(4 - 1 downto 0);
    trunc_ln93_fu_1337_p1 <= tmp_4_fu_1329_p3(11 - 1 downto 0);

    w1_local_187_out_assign_proc : process(icmp_ln69_reg_2352, w1_local_187_load_1_reg_2360, ap_CS_fsm_state17, ap_CS_fsm_state16, w1_local_187_fu_342)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            w1_local_187_out <= w1_local_187_fu_342;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            w1_local_187_out <= w1_local_187_load_1_reg_2360;
        else 
            w1_local_187_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w1_local_187_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            w1_local_187_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_187_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w1_local_1_1_out_assign_proc : process(icmp_ln69_reg_2352, w1_local_1_1_load_1_reg_2366, ap_CS_fsm_state17, ap_CS_fsm_state16, w1_local_1_1_fu_346)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            w1_local_1_1_out <= w1_local_1_1_fu_346;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            w1_local_1_1_out <= w1_local_1_1_load_1_reg_2366;
        else 
            w1_local_1_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w1_local_1_1_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            w1_local_1_1_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_1_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w1_local_2_1_out_assign_proc : process(icmp_ln69_reg_2352, w1_local_2_1_load_1_reg_2372, ap_CS_fsm_state17, ap_CS_fsm_state16, w1_local_2_1_fu_350)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            w1_local_2_1_out <= w1_local_2_1_fu_350;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            w1_local_2_1_out <= w1_local_2_1_load_1_reg_2372;
        else 
            w1_local_2_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w1_local_2_1_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            w1_local_2_1_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_2_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w1_local_3_1_out_assign_proc : process(icmp_ln69_reg_2352, w1_local_3_1_load_1_reg_2378, ap_CS_fsm_state17, ap_CS_fsm_state16, w1_local_3_1_fu_354)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            w1_local_3_1_out <= w1_local_3_1_fu_354;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            w1_local_3_1_out <= w1_local_3_1_load_1_reg_2378;
        else 
            w1_local_3_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w1_local_3_1_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            w1_local_3_1_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_3_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_189_out_assign_proc : process(icmp_ln69_reg_2352, w2_local_189_load_1_reg_2411, ap_CS_fsm_state17, ap_CS_fsm_state16, w2_local_189_fu_358)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            w2_local_189_out <= w2_local_189_fu_358;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            w2_local_189_out <= w2_local_189_load_1_reg_2411;
        else 
            w2_local_189_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w2_local_189_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            w2_local_189_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_189_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_1_1_out_assign_proc : process(icmp_ln69_reg_2352, w2_local_1_1_load_1_reg_2417, ap_CS_fsm_state17, ap_CS_fsm_state16, w2_local_1_1_fu_362)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            w2_local_1_1_out <= w2_local_1_1_fu_362;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            w2_local_1_1_out <= w2_local_1_1_load_1_reg_2417;
        else 
            w2_local_1_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w2_local_1_1_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            w2_local_1_1_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_1_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_2_1_out_assign_proc : process(icmp_ln69_reg_2352, w2_local_2_1_load_1_reg_2423, ap_CS_fsm_state17, ap_CS_fsm_state16, w2_local_2_1_fu_366)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            w2_local_2_1_out <= w2_local_2_1_fu_366;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            w2_local_2_1_out <= w2_local_2_1_load_1_reg_2423;
        else 
            w2_local_2_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w2_local_2_1_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            w2_local_2_1_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_2_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_3_1_out_assign_proc : process(icmp_ln69_reg_2352, w2_local_3_1_load_1_reg_2429, ap_CS_fsm_state17, ap_CS_fsm_state16, w2_local_3_1_fu_370)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            w2_local_3_1_out <= w2_local_3_1_fu_370;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0))) then 
            w2_local_3_1_out <= w2_local_3_1_load_1_reg_2429;
        else 
            w2_local_3_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w2_local_3_1_out_ap_vld_assign_proc : process(icmp_ln69_reg_2352, ap_CS_fsm_state17, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln69_reg_2352 = ap_const_lv1_0)))) then 
            w2_local_3_1_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_3_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln93_1_fu_1415_p2 <= (tmp_6_fu_1407_p3 xor ap_const_lv1_1);
    xor_ln93_fu_1652_p2 <= (icmp_ln93_reg_2457 xor ap_const_lv1_1);
    xor_ln96_fu_1663_p2 <= (ap_const_lv1_1 xor and_ln93_1_fu_1643_p2);
    zext_ln106_cast_fu_1461_p9 <= "XXXXXXXXXX";
    zext_ln106_fu_1484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln106_cast_fu_1461_p11),16));
    zext_ln72_fu_1245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output_0_1_fu_1221_p11),16));
    zext_ln73_fu_1216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output_0_fu_1192_p11),16));
    zext_ln93_1_fu_1511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln93_1_fu_1506_p2),64));
    zext_ln93_2_fu_1526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln93_2_fu_1521_p2),64));
    zext_ln93_3_fu_1541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_reg_2484),64));
    zext_ln93_4_fu_1560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln93_1_fu_1550_p4),64));
    zext_ln93_5_fu_1379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln93_4_fu_1373_p2),16));
    zext_ln93_fu_1503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln93_reg_2468),64));
end behav;
