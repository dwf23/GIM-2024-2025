

================================================================
== Vitis HLS Report for 'example_acc'
================================================================
* Date:           Sat Feb 22 16:21:36 2025

* Version:        2024.1 (Build 5069499 on May 21 2024)
* Project:        example_acc
* Solution:       hls (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu3eg-sfvc784-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  1.846 ns|     2.00 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+-----------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                   |
    |   min   |   max   |    min   |    max   | min | max |                      Type                     |
    +---------+---------+----------+----------+-----+-----+-----------------------------------------------+
    |       11|       11|  0.110 us|  0.110 us|   10|   10|  loop auto-rewind stp(delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+-----------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_23_1  |        9|        9|         1|          1|          1|    10|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.84>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%rx1 = alloca i32 1"   --->   Operation 4 'alloca' 'rx1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 0"   --->   Operation 5 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%spectopmodule_ln11 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_4" [../example_acc.cpp:11]   --->   Operation 6 'spectopmodule' 'spectopmodule_ln11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specinterface_ln11 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_5, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0" [../example_acc.cpp:11]   --->   Operation 7 'specinterface' 'specinterface_ln11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %data_in"   --->   Operation 8 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %data_in, void @empty, i32 4294967295, i32 4294967295, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 2, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_1, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_2, void @empty_3, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.48ns)   --->   "%store_ln0 = store i4 0, i4 %rx1"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%br_ln23 = br void %while.body.split" [../example_acc.cpp:23]   --->   Operation 12 'br' 'br_ln23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%rx1_load = load i4 %rx1" [../example_acc.cpp:26]   --->   Operation 13 'load' 'rx1_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specpipeline_ln16 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [../example_acc.cpp:16]   --->   Operation 14 'specpipeline' 'specpipeline_ln16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%speclooptripcount_ln16 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 10, i64 10, i64 10" [../example_acc.cpp:16]   --->   Operation 15 'speclooptripcount' 'speclooptripcount_ln16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specloopname_ln23 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [../example_acc.cpp:23]   --->   Operation 16 'specloopname' 'specloopname_ln23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%empty = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../example_acc.cpp:24]   --->   Operation 17 'read' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.86ns)   --->   "%rx = add i4 %rx1_load, i4 1" [../example_acc.cpp:26]   --->   Operation 18 'add' 'rx' <Predicate = true> <Delay = 0.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.86ns)   --->   "%icmp_ln23 = icmp_eq  i4 %rx1_load, i4 9" [../example_acc.cpp:23]   --->   Operation 19 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 0.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.48ns)   --->   "%store_ln26 = store i4 %rx, i4 %rx1" [../example_acc.cpp:26]   --->   Operation 20 'store' 'store_ln26' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln23 = br i1 %icmp_ln23, void %while.body.split, void %while.end" [../example_acc.cpp:23]   --->   Operation 21 'br' 'br_ln23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.48ns)   --->   "%ret_ln30 = ret i32 0" [../example_acc.cpp:30]   --->   Operation 22 'ret' 'ret_ln30' <Predicate = (icmp_ln23)> <Delay = 0.48>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.000ns.

 <State 1>: 1.846ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'rx1' [9]  (0.489 ns)
	'load' operation 4 bit ('rx1_load', ../example_acc.cpp:26) on local variable 'rx1' [12]  (0.000 ns)
	'add' operation 4 bit ('rx', ../example_acc.cpp:26) [17]  (0.868 ns)
	'store' operation 0 bit ('store_ln26', ../example_acc.cpp:26) of variable 'rx', ../example_acc.cpp:26 on local variable 'rx1' [19]  (0.489 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
