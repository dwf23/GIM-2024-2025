

================================================================
== Vitis HLS Report for 'example_acc'
================================================================
* Date:           Wed Feb 19 22:04:22 2025

* Version:        2024.1 (Build 5069499 on May 21 2024)
* Project:        example_acc
* Solution:       hls (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu3eg-sfvc784-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.067 ns|     2.00 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+-----------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                   |
    |   min   |   max   |    min   |    max   | min | max |                      Type                     |
    +---------+---------+----------+----------+-----+-----+-----------------------------------------------+
    |        ?|        ?|         ?|         ?|    0|    0|  loop auto-rewind stp(delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+-----------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_22_1  |        ?|        ?|        16|         16|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-----+--------+-------+-----+
|       Name      | BRAM_18K| DSP |   FF   |  LUT  | URAM|
+-----------------+---------+-----+--------+-------+-----+
|DSP              |        -|    -|       -|      -|    -|
|Expression       |        -|    -|       0|     28|    -|
|FIFO             |        -|    -|       -|      -|    -|
|Instance         |        0|    -|      37|     42|    0|
|Memory           |        -|    -|       -|      -|    -|
|Multiplexer      |        -|    -|       0|    117|    -|
|Register         |        -|    -|      21|      -|    -|
+-----------------+---------+-----+--------+-------+-----+
|Total            |        0|    0|      58|    187|    0|
+-----------------+---------+-----+--------+-------+-----+
|Available        |      432|  360|  141120|  70560|    0|
+-----------------+---------+-----+--------+-------+-----+
|Utilization (%)  |        0|    0|      ~0|     ~0|    0|
+-----------------+---------+-----+--------+-------+-----+

+ Detail: 
    * Instance: 
    +-----------------+---------------+---------+----+----+----+-----+
    |     Instance    |     Module    | BRAM_18K| DSP| FF | LUT| URAM|
    +-----------------+---------------+---------+----+----+----+-----+
    |control_s_axi_U  |control_s_axi  |        0|   0|  37|  42|    0|
    +-----------------+---------------+---------+----+----+----+-----+
    |Total            |               |        0|   0|  37|  42|    0|
    +-----------------+---------------+---------+----+----+----+-----+

    * DSP: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +----------------------------------+----------+----+---+----+------------+------------+
    |           Variable Name          | Operation| DSP| FF| LUT| Bitwidth P0| Bitwidth P1|
    +----------------------------------+----------+----+---+----+------------+------------+
    |rx_3_fu_88_p2                     |         +|   0|  0|  12|           4|           1|
    |and_ln29_fu_100_p2                |       and|   0|  0|   2|           1|           1|
    |icmp_ln29_fu_94_p2                |      icmp|   0|  0|  12|           4|           4|
    |ap_block_state1_pp0_stage0_iter0  |        or|   0|  0|   2|           1|           1|
    +----------------------------------+----------+----+---+----+------------+------------+
    |Total                             |          |   0|  0|  28|          10|           7|
    +----------------------------------+----------+----+---+----+------------+------------+

    * Multiplexer: 
    +--------------------------------------+----+-----------+-----+-----------+
    |                 Name                 | LUT| Input Size| Bits| Total Bits|
    +--------------------------------------+----+-----------+-----+-----------+
    |ap_NS_fsm                             |  81|         17|    1|         17|
    |ap_done_int                           |   9|          2|    1|          2|
    |ap_phi_mux_start_assign_phi_fu_73_p4  |   9|          2|    1|          2|
    |data_in_blk_n                         |   9|          2|    1|          2|
    |rx_fu_54                              |   9|          2|    4|          8|
    +--------------------------------------+----+-----------+-----+-----------+
    |Total                                 | 117|         25|    8|         31|
    +--------------------------------------+----+-----------+-----+-----------+

    * Register: 
    +-------------+----+----+-----+-----------+
    |     Name    | FF | LUT| Bits| Const Bits|
    +-------------+----+----+-----+-----------+
    |ap_CS_fsm    |  16|   0|   16|          0|
    |ap_done_reg  |   1|   0|    1|          0|
    |rx_fu_54     |   4|   0|    4|          0|
    +-------------+----+----+-----+-----------+
    |Total        |  21|   0|   21|          0|
    +-------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+-----------------------+-----+-----+------------+--------------+--------------+
|       RTL Ports       | Dir | Bits|  Protocol  | Source Object|    C Type    |
+-----------------------+-----+-----+------------+--------------+--------------+
|s_axi_control_AWVALID  |   in|    1|       s_axi|       control|        scalar|
|s_axi_control_AWREADY  |  out|    1|       s_axi|       control|        scalar|
|s_axi_control_AWADDR   |   in|    5|       s_axi|       control|        scalar|
|s_axi_control_WVALID   |   in|    1|       s_axi|       control|        scalar|
|s_axi_control_WREADY   |  out|    1|       s_axi|       control|        scalar|
|s_axi_control_WDATA    |   in|   32|       s_axi|       control|        scalar|
|s_axi_control_WSTRB    |   in|    4|       s_axi|       control|        scalar|
|s_axi_control_ARVALID  |   in|    1|       s_axi|       control|        scalar|
|s_axi_control_ARREADY  |  out|    1|       s_axi|       control|        scalar|
|s_axi_control_ARADDR   |   in|    5|       s_axi|       control|        scalar|
|s_axi_control_RVALID   |  out|    1|       s_axi|       control|        scalar|
|s_axi_control_RREADY   |   in|    1|       s_axi|       control|        scalar|
|s_axi_control_RDATA    |  out|   32|       s_axi|       control|        scalar|
|s_axi_control_RRESP    |  out|    2|       s_axi|       control|        scalar|
|s_axi_control_BVALID   |  out|    1|       s_axi|       control|        scalar|
|s_axi_control_BREADY   |   in|    1|       s_axi|       control|        scalar|
|s_axi_control_BRESP    |  out|    2|       s_axi|       control|        scalar|
|ap_clk                 |   in|    1|  ap_ctrl_hs|   example_acc|  return value|
|ap_rst_n               |   in|    1|  ap_ctrl_hs|   example_acc|  return value|
|ap_start               |   in|    1|  ap_ctrl_hs|   example_acc|  return value|
|ap_done                |  out|    1|  ap_ctrl_hs|   example_acc|  return value|
|ap_idle                |  out|    1|  ap_ctrl_hs|   example_acc|  return value|
|ap_ready               |  out|    1|  ap_ctrl_hs|   example_acc|  return value|
|ap_return              |  out|   32|  ap_ctrl_hs|   example_acc|  return value|
|data_in_ap_vld         |   in|    1|       ap_hs|       data_in|       pointer|
|data_in                |   in|    1|       ap_hs|       data_in|       pointer|
|data_in_ap_ack         |  out|    1|       ap_hs|       data_in|       pointer|
+-----------------------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 16, depth = 16


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 16
* Pipeline : 1
  Pipeline-0 : II = 16, D = 16, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%rx = alloca i32 1" [../example_acc.cpp:16]   --->   Operation 19 'alloca' 'rx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 0"   --->   Operation 20 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%spectopmodule_ln11 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_6" [../example_acc.cpp:11]   --->   Operation 21 'spectopmodule' 'spectopmodule_ln11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specinterface_ln11 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_7, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0" [../example_acc.cpp:11]   --->   Operation 22 'specinterface' 'specinterface_ln11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %data_in"   --->   Operation 23 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %data_in, void @empty, i32 4294967295, i32 4294967295, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 2, i32 0"   --->   Operation 24 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %start_r"   --->   Operation 25 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %start_r, void @empty_1, i32 4294967295, i32 4294967295, void @empty_2, i32 0, i32 0, void @empty_3, void @empty_4, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 26 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %start_r, void @empty_5, i32 4294967295, i32 4294967295, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 27 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.00ns)   --->   "%start_r_read = read i1 @_ssdm_op_Read.s_axilite.i1, i1 %start_r" [../example_acc.cpp:11]   --->   Operation 28 'read' 'start_r_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 120 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 29 [1/1] (0.48ns)   --->   "%store_ln16 = store i4 0, i4 %rx" [../example_acc.cpp:16]   --->   Operation 29 'store' 'store_ln16' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 30 [1/1] (0.48ns)   --->   "%br_ln22 = br void %do.body" [../example_acc.cpp:22]   --->   Operation 30 'br' 'br_ln22' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%empty = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 31 'read' 'empty' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%empty_12 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 32 'read' 'empty_12' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%empty_13 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 33 'read' 'empty_13' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%empty_14 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 34 'read' 'empty_14' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 35 [1/1] (0.00ns)   --->   "%empty_15 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 35 'read' 'empty_15' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 36 [1/1] (0.00ns)   --->   "%empty_16 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 36 'read' 'empty_16' <Predicate = true> <Delay = 0.00>

State 7 <SV = 6> <Delay = 0.00>
ST_7 : Operation 37 [1/1] (0.00ns)   --->   "%empty_17 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 37 'read' 'empty_17' <Predicate = true> <Delay = 0.00>

State 8 <SV = 7> <Delay = 0.00>
ST_8 : Operation 38 [1/1] (0.00ns)   --->   "%empty_18 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 38 'read' 'empty_18' <Predicate = true> <Delay = 0.00>

State 9 <SV = 8> <Delay = 0.00>
ST_9 : Operation 39 [1/1] (0.00ns)   --->   "%empty_19 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 39 'read' 'empty_19' <Predicate = true> <Delay = 0.00>

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 40 [1/1] (0.00ns)   --->   "%empty_20 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 40 'read' 'empty_20' <Predicate = true> <Delay = 0.00>

State 11 <SV = 10> <Delay = 0.00>
ST_11 : Operation 41 [1/1] (0.00ns)   --->   "%empty_21 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 41 'read' 'empty_21' <Predicate = true> <Delay = 0.00>

State 12 <SV = 11> <Delay = 0.00>
ST_12 : Operation 42 [1/1] (0.00ns)   --->   "%empty_22 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 42 'read' 'empty_22' <Predicate = true> <Delay = 0.00>

State 13 <SV = 12> <Delay = 0.00>
ST_13 : Operation 43 [1/1] (0.00ns)   --->   "%empty_23 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 43 'read' 'empty_23' <Predicate = true> <Delay = 0.00>

State 14 <SV = 13> <Delay = 0.00>
ST_14 : Operation 44 [1/1] (0.00ns)   --->   "%empty_24 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 44 'read' 'empty_24' <Predicate = true> <Delay = 0.00>

State 15 <SV = 14> <Delay = 0.00>
ST_15 : Operation 45 [1/1] (0.00ns)   --->   "%empty_25 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 45 'read' 'empty_25' <Predicate = true> <Delay = 0.00>

State 16 <SV = 15> <Delay = 2.06>
ST_16 : Operation 46 [1/1] (0.00ns)   --->   "%start_assign = phi i1 %start_r_read, void %entry, i1 1, void %do.body" [../example_acc.cpp:11]   --->   Operation 46 'phi' 'start_assign' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 47 [1/1] (0.00ns)   --->   "%rx_2 = load i4 %rx" [../example_acc.cpp:28]   --->   Operation 47 'load' 'rx_2' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 48 [1/1] (0.00ns)   --->   "%specpipeline_ln16 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [../example_acc.cpp:16]   --->   Operation 48 'specpipeline' 'specpipeline_ln16' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 49 [1/1] (0.00ns)   --->   "%specloopname_ln22 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8" [../example_acc.cpp:22]   --->   Operation 49 'specloopname' 'specloopname_ln22' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 50 [1/1] (0.00ns)   --->   "%empty_26 = read i1 @_ssdm_op_Read.ap_hs.volatile.p0i1, i1 %data_in" [../receive_data.cpp:18->../example_acc.cpp:26]   --->   Operation 50 'read' 'empty_26' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 51 [1/1] (0.86ns)   --->   "%rx_3 = add i4 %rx_2, i4 1" [../example_acc.cpp:28]   --->   Operation 51 'add' 'rx_3' <Predicate = true> <Delay = 0.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 52 [1/1] (0.86ns)   --->   "%icmp_ln29 = icmp_ult  i4 %rx_3, i4 11" [../example_acc.cpp:29]   --->   Operation 52 'icmp' 'icmp_ln29' <Predicate = true> <Delay = 0.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 53 [1/1] (0.33ns)   --->   "%and_ln29 = and i1 %start_assign, i1 %icmp_ln29" [../example_acc.cpp:29]   --->   Operation 53 'and' 'and_ln29' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 54 [1/1] (0.48ns)   --->   "%store_ln16 = store i4 %rx_3, i4 %rx" [../example_acc.cpp:16]   --->   Operation 54 'store' 'store_ln16' <Predicate = true> <Delay = 0.48>
ST_16 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %and_ln29, void %do.end, void %do.body" [../example_acc.cpp:32]   --->   Operation 55 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 56 [1/1] (0.48ns)   --->   "%ret_ln34 = ret i32 0" [../example_acc.cpp:34]   --->   Operation 56 'ret' 'ret_ln34' <Predicate = (!and_ln29)> <Delay = 0.48>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ data_in]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_hs:ce=0
Port [ start_r]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
rx                 (alloca       ) [ 01111111111111111]
specbitsmap_ln0    (specbitsmap  ) [ 00000000000000000]
spectopmodule_ln11 (spectopmodule) [ 00000000000000000]
specinterface_ln11 (specinterface) [ 00000000000000000]
specbitsmap_ln0    (specbitsmap  ) [ 00000000000000000]
specinterface_ln0  (specinterface) [ 00000000000000000]
specbitsmap_ln0    (specbitsmap  ) [ 00000000000000000]
specinterface_ln0  (specinterface) [ 00000000000000000]
specinterface_ln0  (specinterface) [ 00000000000000000]
start_r_read       (read         ) [ 01111111111111111]
store_ln16         (store        ) [ 00000000000000000]
br_ln22            (br           ) [ 01111111111111111]
empty              (read         ) [ 00000000000000000]
empty_12           (read         ) [ 00000000000000000]
empty_13           (read         ) [ 00000000000000000]
empty_14           (read         ) [ 00000000000000000]
empty_15           (read         ) [ 00000000000000000]
empty_16           (read         ) [ 00000000000000000]
empty_17           (read         ) [ 00000000000000000]
empty_18           (read         ) [ 00000000000000000]
empty_19           (read         ) [ 00000000000000000]
empty_20           (read         ) [ 00000000000000000]
empty_21           (read         ) [ 00000000000000000]
empty_22           (read         ) [ 00000000000000000]
empty_23           (read         ) [ 00000000000000000]
empty_24           (read         ) [ 00000000000000000]
empty_25           (read         ) [ 00000000000000000]
start_assign       (phi          ) [ 00111111111111111]
rx_2               (load         ) [ 00000000000000000]
specpipeline_ln16  (specpipeline ) [ 00000000000000000]
specloopname_ln22  (specloopname ) [ 00000000000000000]
empty_26           (read         ) [ 00000000000000000]
rx_3               (add          ) [ 00000000000000000]
icmp_ln29          (icmp         ) [ 00000000000000000]
and_ln29           (and          ) [ 00000000000000001]
store_ln16         (store        ) [ 00000000000000000]
br_ln32            (br           ) [ 01000000000000001]
ret_ln34           (ret          ) [ 00000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="data_in">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="data_in"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="start_r">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="start_r"/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_6"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_7"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_0"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_1"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_2"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_3"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_4"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_5"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.s_axilite.i1"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_hs.volatile.p0i1"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecPipeline"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopName"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_8"/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1004" name="rx_fu_54">
<pin_list>
<pin id="55" dir="0" index="0" bw="1" slack="0"/>
<pin id="56" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="rx/1 "/>
</bind>
</comp>

<comp id="58" class="1004" name="start_r_read_read_fu_58">
<pin_list>
<pin id="59" dir="0" index="0" bw="1" slack="0"/>
<pin id="60" dir="0" index="1" bw="1" slack="0"/>
<pin id="61" dir="1" index="2" bw="1" slack="15"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="start_r_read/1 "/>
</bind>
</comp>

<comp id="64" class="1004" name="grp_read_fu_64">
<pin_list>
<pin id="65" dir="0" index="0" bw="1" slack="0"/>
<pin id="66" dir="0" index="1" bw="1" slack="0"/>
<pin id="67" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="empty/1 empty_12/2 empty_13/3 empty_14/4 empty_15/5 empty_16/6 empty_17/7 empty_18/8 empty_19/9 empty_20/10 empty_21/11 empty_22/12 empty_23/13 empty_24/14 empty_25/15 empty_26/16 "/>
</bind>
</comp>

<comp id="70" class="1005" name="start_assign_reg_70">
<pin_list>
<pin id="71" dir="0" index="0" bw="1" slack="2147483647"/>
<pin id="72" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="start_assign (phireg) "/>
</bind>
</comp>

<comp id="73" class="1004" name="start_assign_phi_fu_73">
<pin_list>
<pin id="74" dir="0" index="0" bw="1" slack="15"/>
<pin id="75" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="76" dir="0" index="2" bw="1" slack="0"/>
<pin id="77" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="78" dir="1" index="4" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="start_assign/16 "/>
</bind>
</comp>

<comp id="80" class="1004" name="store_ln16_store_fu_80">
<pin_list>
<pin id="81" dir="0" index="0" bw="1" slack="0"/>
<pin id="82" dir="0" index="1" bw="4" slack="0"/>
<pin id="83" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln16/1 "/>
</bind>
</comp>

<comp id="85" class="1004" name="rx_2_load_fu_85">
<pin_list>
<pin id="86" dir="0" index="0" bw="4" slack="15"/>
<pin id="87" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="rx_2/16 "/>
</bind>
</comp>

<comp id="88" class="1004" name="rx_3_fu_88">
<pin_list>
<pin id="89" dir="0" index="0" bw="4" slack="0"/>
<pin id="90" dir="0" index="1" bw="1" slack="0"/>
<pin id="91" dir="1" index="2" bw="4" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="rx_3/16 "/>
</bind>
</comp>

<comp id="94" class="1004" name="icmp_ln29_fu_94">
<pin_list>
<pin id="95" dir="0" index="0" bw="4" slack="0"/>
<pin id="96" dir="0" index="1" bw="4" slack="0"/>
<pin id="97" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln29/16 "/>
</bind>
</comp>

<comp id="100" class="1004" name="and_ln29_fu_100">
<pin_list>
<pin id="101" dir="0" index="0" bw="1" slack="0"/>
<pin id="102" dir="0" index="1" bw="1" slack="0"/>
<pin id="103" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln29/16 "/>
</bind>
</comp>

<comp id="106" class="1004" name="store_ln16_store_fu_106">
<pin_list>
<pin id="107" dir="0" index="0" bw="4" slack="0"/>
<pin id="108" dir="0" index="1" bw="4" slack="15"/>
<pin id="109" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln16/16 "/>
</bind>
</comp>

<comp id="111" class="1005" name="rx_reg_111">
<pin_list>
<pin id="112" dir="0" index="0" bw="4" slack="0"/>
<pin id="113" dir="1" index="1" bw="4" slack="0"/>
</pin_list>
<bind>
<opset="rx "/>
</bind>
</comp>

<comp id="118" class="1005" name="start_r_read_reg_118">
<pin_list>
<pin id="119" dir="0" index="0" bw="1" slack="15"/>
<pin id="120" dir="1" index="1" bw="1" slack="15"/>
</pin_list>
<bind>
<opset="start_r_read "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="57"><net_src comp="4" pin="0"/><net_sink comp="54" pin=0"/></net>

<net id="62"><net_src comp="36" pin="0"/><net_sink comp="58" pin=0"/></net>

<net id="63"><net_src comp="2" pin="0"/><net_sink comp="58" pin=1"/></net>

<net id="68"><net_src comp="40" pin="0"/><net_sink comp="64" pin=0"/></net>

<net id="69"><net_src comp="0" pin="0"/><net_sink comp="64" pin=1"/></net>

<net id="79"><net_src comp="42" pin="0"/><net_sink comp="73" pin=2"/></net>

<net id="84"><net_src comp="38" pin="0"/><net_sink comp="80" pin=0"/></net>

<net id="92"><net_src comp="85" pin="1"/><net_sink comp="88" pin=0"/></net>

<net id="93"><net_src comp="50" pin="0"/><net_sink comp="88" pin=1"/></net>

<net id="98"><net_src comp="88" pin="2"/><net_sink comp="94" pin=0"/></net>

<net id="99"><net_src comp="52" pin="0"/><net_sink comp="94" pin=1"/></net>

<net id="104"><net_src comp="73" pin="4"/><net_sink comp="100" pin=0"/></net>

<net id="105"><net_src comp="94" pin="2"/><net_sink comp="100" pin=1"/></net>

<net id="110"><net_src comp="88" pin="2"/><net_sink comp="106" pin=0"/></net>

<net id="114"><net_src comp="54" pin="1"/><net_sink comp="111" pin=0"/></net>

<net id="115"><net_src comp="111" pin="1"/><net_sink comp="80" pin=1"/></net>

<net id="116"><net_src comp="111" pin="1"/><net_sink comp="85" pin=0"/></net>

<net id="117"><net_src comp="111" pin="1"/><net_sink comp="106" pin=1"/></net>

<net id="121"><net_src comp="58" pin="2"/><net_sink comp="118" pin=0"/></net>

<net id="122"><net_src comp="118" pin="1"/><net_sink comp="73" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
 - Input state : 
	Port: example_acc : data_in | {1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 }
	Port: example_acc : start_r | {1 }
  - Chain level:
	State 1
		store_ln16 : 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
		rx_3 : 1
		icmp_ln29 : 2
		and_ln29 : 3
		store_ln16 : 2
		br_ln32 : 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|-------------------------|---------|---------|
| Operation|     Functional Unit     |    FF   |   LUT   |
|----------|-------------------------|---------|---------|
|    add   |        rx_3_fu_88       |    0    |    12   |
|----------|-------------------------|---------|---------|
|   icmp   |     icmp_ln29_fu_94     |    0    |    12   |
|----------|-------------------------|---------|---------|
|    and   |     and_ln29_fu_100     |    0    |    2    |
|----------|-------------------------|---------|---------|
|   read   | start_r_read_read_fu_58 |    0    |    0    |
|          |      grp_read_fu_64     |    0    |    0    |
|----------|-------------------------|---------|---------|
|   Total  |                         |    0    |    26   |
|----------|-------------------------|---------|---------|

Memories:
N/A

* Register list:
+--------------------+--------+
|                    |   FF   |
+--------------------+--------+
|     rx_reg_111     |    4   |
| start_assign_reg_70|    1   |
|start_r_read_reg_118|    1   |
+--------------------+--------+
|        Total       |    6   |
+--------------------+--------+

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+
|           |   FF   |   LUT  |
+-----------+--------+--------+
|  Function |    0   |   26   |
|   Memory  |    -   |    -   |
|Multiplexer|    -   |    -   |
|  Register |    6   |    -   |
+-----------+--------+--------+
|   Total   |    6   |   26   |
+-----------+--------+--------+
