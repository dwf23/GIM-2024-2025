// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module accelerator_model_array (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        p_read10,
        p_read29,
        p_read30,
        p_read31,
        p_read32,
        p_read33,
        p_read34,
        p_read35,
        p_read36,
        p_read37,
        training,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] p_read10;
input  [15:0] p_read29;
input  [15:0] p_read30;
input  [15:0] p_read31;
input  [15:0] p_read32;
input  [15:0] p_read33;
input  [15:0] p_read34;
input  [15:0] p_read35;
input  [15:0] p_read36;
input  [15:0] p_read37;
input  [15:0] training;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
reg  signed [15:0] p_read_1_reg_718;
wire    ap_block_pp0_stage0_11001;
reg   [15:0] p_read_4_reg_723;
reg   [15:0] p_read_4_reg_723_pp0_iter1_reg;
reg   [15:0] p_read_4_reg_723_pp0_iter2_reg;
reg   [15:0] p_read_5_reg_729;
reg   [15:0] p_read_5_reg_729_pp0_iter1_reg;
reg   [15:0] p_read_5_reg_729_pp0_iter2_reg;
reg  signed [15:0] p_read101_reg_735;
wire  signed [24:0] sext_ln13_2_fu_156_p1;
reg  signed [24:0] sext_ln13_2_reg_745;
reg   [15:0] weight_out_weight_change_reg_750;
reg   [15:0] weight_out_weight_change_reg_750_pp0_iter1_reg;
reg   [15:0] weight_out_weight_change_reg_750_pp0_iter2_reg;
wire  signed [24:0] sext_ln12_4_fu_229_p1;
reg  signed [24:0] sext_ln12_4_reg_760;
wire  signed [24:0] sext_ln13_3_fu_233_p1;
reg   [15:0] weight_out_weight_change_1_reg_772;
reg   [15:0] weight_out_weight_change_1_reg_772_pp0_iter1_reg;
reg   [15:0] weight_out_weight_change_1_reg_772_pp0_iter2_reg;
wire  signed [24:0] sext_ln12_5_fu_261_p1;
wire  signed [24:0] sext_ln12_6_fu_265_p1;
reg   [15:0] weight_out_weight_change_2_reg_788;
reg   [15:0] weight_out_weight_change_2_reg_788_pp0_iter1_reg;
reg   [15:0] weight_out_weight_change_2_reg_788_pp0_iter2_reg;
wire  signed [24:0] sext_ln12_7_fu_299_p1;
reg   [15:0] tmp_3_reg_799;
reg   [15:0] tmp_3_reg_799_pp0_iter1_reg;
reg   [15:0] weight_out_weight_change_3_reg_804;
reg   [15:0] weight_out_weight_change_3_reg_804_pp0_iter1_reg;
reg   [15:0] weight_out_weight_change_3_reg_804_pp0_iter2_reg;
wire   [0:0] cmp_i_i_fu_348_p2;
reg   [0:0] cmp_i_i_reg_809;
reg   [0:0] cmp_i_i_reg_809_pp0_iter1_reg;
reg   [0:0] cmp_i_i_reg_809_pp0_iter2_reg;
wire   [0:0] icmp_ln11_fu_354_p2;
reg   [0:0] icmp_ln11_reg_815;
reg   [0:0] icmp_ln11_reg_815_pp0_iter1_reg;
reg   [0:0] icmp_ln11_reg_815_pp0_iter2_reg;
wire   [0:0] icmp_ln11_1_fu_360_p2;
reg   [0:0] icmp_ln11_1_reg_820;
reg   [0:0] icmp_ln11_1_reg_820_pp0_iter1_reg;
reg   [0:0] icmp_ln11_1_reg_820_pp0_iter2_reg;
reg   [15:0] tmp_reg_825;
reg   [15:0] tmp_1_reg_830;
reg   [15:0] tmp_2_reg_835;
wire  signed [6:0] mul_ln14_1_fu_124_p1;
wire    ap_block_pp0_stage0;
wire  signed [6:0] mul_ln14_4_fu_129_p1;
wire  signed [6:0] mul_ln14_5_fu_134_p1;
wire  signed [6:0] mul_ln14_7_fu_139_p1;
wire  signed [15:0] conv_i_i_fu_144_p0;
wire  signed [15:0] sext_ln13_fu_152_p0;
wire  signed [15:0] sext_ln13_2_fu_156_p0;
wire  signed [15:0] mul_ln14_fu_160_p0;
wire  signed [31:0] sext_ln13_fu_152_p1;
wire  signed [15:0] mul_ln14_fu_160_p1;
wire  signed [31:0] conv_i_i_fu_144_p1;
wire  signed [31:0] mul_ln14_fu_160_p2;
wire  signed [15:0] shl_ln_fu_171_p1;
wire   [33:0] shl_ln_fu_171_p3;
wire   [33:0] mul_ln14_1_fu_124_p2;
wire   [33:0] add_ln14_fu_179_p2;
wire  signed [15:0] sext_ln13_1_fu_195_p0;
wire  signed [15:0] mul_ln14_2_fu_199_p0;
wire  signed [31:0] sext_ln13_1_fu_195_p1;
wire  signed [15:0] mul_ln14_2_fu_199_p1;
wire  signed [31:0] mul_ln14_2_fu_199_p2;
wire  signed [15:0] conv_i_i_1_fu_210_p0;
wire  signed [15:0] mul_ln14_3_fu_218_p0;
wire  signed [31:0] conv_i_i_1_fu_210_p1;
wire  signed [15:0] mul_ln14_3_fu_218_p1;
wire  signed [31:0] mul_ln14_3_fu_218_p2;
wire  signed [15:0] sext_ln12_4_fu_229_p0;
wire  signed [15:0] sext_ln13_3_fu_233_p0;
wire  signed [15:0] shl_ln14_1_fu_237_p1;
wire   [33:0] shl_ln14_1_fu_237_p3;
wire   [33:0] mul_ln14_4_fu_129_p2;
wire   [33:0] add_ln14_1_fu_245_p2;
wire  signed [15:0] sext_ln12_5_fu_261_p0;
wire  signed [15:0] sext_ln12_6_fu_265_p0;
wire  signed [15:0] mul_ln13_2_fu_269_p0;
wire  signed [15:0] shl_ln14_2_fu_275_p1;
wire   [33:0] shl_ln14_2_fu_275_p3;
wire   [33:0] mul_ln14_5_fu_134_p2;
wire   [33:0] add_ln14_2_fu_283_p2;
wire  signed [15:0] sext_ln12_7_fu_299_p0;
wire   [24:0] mul_ln13_2_fu_269_p2;
wire  signed [15:0] mul_ln14_6_fu_313_p0;
wire  signed [15:0] mul_ln14_6_fu_313_p1;
wire  signed [31:0] mul_ln14_6_fu_313_p2;
wire  signed [15:0] shl_ln14_3_fu_324_p1;
wire   [33:0] shl_ln14_3_fu_324_p3;
wire   [33:0] mul_ln14_7_fu_139_p2;
wire   [33:0] add_ln14_3_fu_332_p2;
wire  signed [15:0] icmp_ln11_fu_354_p0;
wire  signed [15:0] icmp_ln11_1_fu_360_p0;
wire  signed [15:0] mul_ln12_fu_372_p0;
wire  signed [24:0] sext_ln12_1_fu_366_p1;
wire  signed [15:0] mul_ln12_fu_372_p1;
wire  signed [24:0] sext_ln12_2_fu_369_p1;
wire  signed [15:0] mul_ln13_fu_378_p0;
wire  signed [15:0] mul_ln13_fu_378_p1;
wire   [24:0] mul_ln13_fu_378_p2;
wire   [24:0] mul_ln12_fu_372_p2;
wire  signed [15:0] mul_ln12_1_fu_403_p0;
wire  signed [15:0] mul_ln12_1_fu_403_p1;
wire   [24:0] mul_ln12_1_fu_403_p2;
wire  signed [24:0] trunc_ln_fu_460_p1;
wire   [24:0] grp_fu_672_p3;
wire  signed [24:0] weight_out_sum_delta_out_fu_469_p1;
wire   [24:0] grp_fu_681_p3;
wire  signed [24:0] weight_out_sum_delta_out_1_fu_478_p1;
wire   [24:0] grp_fu_690_p3;
wire  signed [24:0] trunc_ln13_2_fu_487_p1;
wire   [24:0] grp_fu_699_p3;
wire   [15:0] trunc_ln_fu_460_p4;
wire  signed [24:0] grp_fu_662_p3;
wire   [15:0] omega_fu_501_p4;
wire   [0:0] icmp_ln12_fu_519_p2;
wire   [14:0] trunc_ln12_3_fu_510_p4;
wire   [14:0] output_3_fu_525_p3;
wire   [15:0] trunc_ln13_2_fu_487_p4;
wire  signed [24:0] grp_fu_708_p3;
wire   [15:0] omega_1_fu_542_p4;
wire   [0:0] icmp_ln12_1_fu_560_p2;
wire   [14:0] trunc_ln5_fu_551_p4;
wire   [14:0] output_2_fu_566_p3;
wire   [15:0] weight_out_sum_delta_out_fu_469_p4;
wire   [15:0] weight_out_sum_delta_out_1_fu_478_p4;
wire   [15:0] error_1_fu_578_p3;
wire   [15:0] error_3_fu_585_p3;
wire   [15:0] zext_ln29_fu_533_p1;
wire   [15:0] zext_ln6_fu_574_p1;
wire   [15:0] agg_result_delta_kmin1_0_0_fu_592_p3;
wire   [15:0] agg_result_delta_kmin1_1_0_fu_599_p3;
wire   [15:0] add_ln29_fu_496_p2;
wire   [15:0] add_ln29_1_fu_537_p2;
wire   [5:0] grp_fu_662_p1;
wire  signed [24:0] grp_fu_662_p2;
wire  signed [15:0] grp_fu_672_p1;
wire   [24:0] grp_fu_672_p2;
wire  signed [15:0] grp_fu_681_p0;
wire  signed [15:0] grp_fu_681_p1;
wire   [24:0] grp_fu_681_p2;
wire  signed [15:0] grp_fu_690_p0;
wire  signed [15:0] grp_fu_690_p1;
wire   [24:0] grp_fu_690_p2;
wire  signed [15:0] grp_fu_699_p0;
wire  signed [15:0] grp_fu_699_p1;
wire   [24:0] grp_fu_699_p2;
wire   [5:0] grp_fu_708_p1;
wire  signed [24:0] grp_fu_708_p2;
reg    grp_fu_662_ce;
reg    grp_fu_672_ce;
reg    grp_fu_681_ce;
reg    grp_fu_690_ce;
reg    grp_fu_699_ce;
reg    grp_fu_708_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

accelerator_mul_32s_7s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 34 ))
mul_32s_7s_34_1_1_U17(
    .din0(mul_ln14_fu_160_p2),
    .din1(mul_ln14_1_fu_124_p1),
    .dout(mul_ln14_1_fu_124_p2)
);

accelerator_mul_32s_7s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 34 ))
mul_32s_7s_34_1_1_U18(
    .din0(mul_ln14_2_fu_199_p2),
    .din1(mul_ln14_4_fu_129_p1),
    .dout(mul_ln14_4_fu_129_p2)
);

accelerator_mul_32s_7s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 34 ))
mul_32s_7s_34_1_1_U19(
    .din0(mul_ln14_3_fu_218_p2),
    .din1(mul_ln14_5_fu_134_p1),
    .dout(mul_ln14_5_fu_134_p2)
);

accelerator_mul_32s_7s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 34 ))
mul_32s_7s_34_1_1_U20(
    .din0(mul_ln14_6_fu_313_p2),
    .din1(mul_ln14_7_fu_139_p1),
    .dout(mul_ln14_7_fu_139_p2)
);

accelerator_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U21(
    .din0(mul_ln14_fu_160_p0),
    .din1(mul_ln14_fu_160_p1),
    .dout(mul_ln14_fu_160_p2)
);

accelerator_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U22(
    .din0(mul_ln14_2_fu_199_p0),
    .din1(mul_ln14_2_fu_199_p1),
    .dout(mul_ln14_2_fu_199_p2)
);

accelerator_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U23(
    .din0(mul_ln14_3_fu_218_p0),
    .din1(mul_ln14_3_fu_218_p1),
    .dout(mul_ln14_3_fu_218_p2)
);

accelerator_mul_16s_16s_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
mul_16s_16s_25_1_1_U24(
    .din0(mul_ln13_2_fu_269_p0),
    .din1(p_read34),
    .dout(mul_ln13_2_fu_269_p2)
);

accelerator_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U25(
    .din0(mul_ln14_6_fu_313_p0),
    .din1(mul_ln14_6_fu_313_p1),
    .dout(mul_ln14_6_fu_313_p2)
);

accelerator_mul_16s_16s_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
mul_16s_16s_25_1_1_U26(
    .din0(mul_ln12_fu_372_p0),
    .din1(mul_ln12_fu_372_p1),
    .dout(mul_ln12_fu_372_p2)
);

accelerator_mul_16s_16s_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
mul_16s_16s_25_1_1_U27(
    .din0(mul_ln13_fu_378_p0),
    .din1(mul_ln13_fu_378_p1),
    .dout(mul_ln13_fu_378_p2)
);

accelerator_mul_16s_16s_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
mul_16s_16s_25_1_1_U28(
    .din0(mul_ln12_1_fu_403_p0),
    .din1(mul_ln12_1_fu_403_p1),
    .dout(mul_ln12_1_fu_403_p2)
);

accelerator_mac_mulsub_16s_6ns_25s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
mac_mulsub_16s_6ns_25s_25_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read36),
    .din1(grp_fu_662_p1),
    .din2(grp_fu_662_p2),
    .ce(grp_fu_662_ce),
    .dout(grp_fu_662_p3)
);

accelerator_mac_muladd_16s_16s_25ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_16s_25ns_25_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read29),
    .din1(grp_fu_672_p1),
    .din2(grp_fu_672_p2),
    .ce(grp_fu_672_ce),
    .dout(grp_fu_672_p3)
);

accelerator_mac_muladd_16s_16s_25ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_16s_25ns_25_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_681_p0),
    .din1(grp_fu_681_p1),
    .din2(grp_fu_681_p2),
    .ce(grp_fu_681_ce),
    .dout(grp_fu_681_p3)
);

accelerator_mac_muladd_16s_16s_25ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_16s_25ns_25_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_690_p0),
    .din1(grp_fu_690_p1),
    .din2(grp_fu_690_p2),
    .ce(grp_fu_690_ce),
    .dout(grp_fu_690_p3)
);

accelerator_mac_muladd_16s_16s_25ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_16s_25ns_25_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_699_p0),
    .din1(grp_fu_699_p1),
    .din2(grp_fu_699_p2),
    .ce(grp_fu_699_ce),
    .dout(grp_fu_699_p3)
);

accelerator_mac_mulsub_16s_6ns_25s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
mac_mulsub_16s_6ns_25s_25_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read37),
    .din1(grp_fu_708_p1),
    .din2(grp_fu_708_p2),
    .ce(grp_fu_708_ce),
    .dout(grp_fu_708_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp_i_i_reg_809 <= cmp_i_i_fu_348_p2;
        cmp_i_i_reg_809_pp0_iter1_reg <= cmp_i_i_reg_809;
        icmp_ln11_1_reg_820 <= icmp_ln11_1_fu_360_p2;
        icmp_ln11_1_reg_820_pp0_iter1_reg <= icmp_ln11_1_reg_820;
        icmp_ln11_reg_815 <= icmp_ln11_fu_354_p2;
        icmp_ln11_reg_815_pp0_iter1_reg <= icmp_ln11_reg_815;
        p_read101_reg_735 <= p_read10;
        p_read_1_reg_718 <= p_read36;
        p_read_4_reg_723 <= p_read33;
        p_read_4_reg_723_pp0_iter1_reg <= p_read_4_reg_723;
        p_read_5_reg_729 <= p_read32;
        p_read_5_reg_729_pp0_iter1_reg <= p_read_5_reg_729;
        sext_ln12_4_reg_760 <= sext_ln12_4_fu_229_p1;
        sext_ln13_2_reg_745 <= sext_ln13_2_fu_156_p1;
        tmp_1_reg_830 <= {{mul_ln12_fu_372_p2[24:9]}};
        tmp_2_reg_835 <= {{mul_ln12_1_fu_403_p2[24:9]}};
        tmp_3_reg_799 <= {{mul_ln13_2_fu_269_p2[24:9]}};
        tmp_3_reg_799_pp0_iter1_reg <= tmp_3_reg_799;
        tmp_reg_825 <= {{mul_ln13_fu_378_p2[24:9]}};
        weight_out_weight_change_1_reg_772 <= {{add_ln14_1_fu_245_p2[33:18]}};
        weight_out_weight_change_1_reg_772_pp0_iter1_reg <= weight_out_weight_change_1_reg_772;
        weight_out_weight_change_2_reg_788 <= {{add_ln14_2_fu_283_p2[33:18]}};
        weight_out_weight_change_2_reg_788_pp0_iter1_reg <= weight_out_weight_change_2_reg_788;
        weight_out_weight_change_3_reg_804 <= {{add_ln14_3_fu_332_p2[33:18]}};
        weight_out_weight_change_3_reg_804_pp0_iter1_reg <= weight_out_weight_change_3_reg_804;
        weight_out_weight_change_reg_750 <= {{add_ln14_fu_179_p2[33:18]}};
        weight_out_weight_change_reg_750_pp0_iter1_reg <= weight_out_weight_change_reg_750;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        cmp_i_i_reg_809_pp0_iter2_reg <= cmp_i_i_reg_809_pp0_iter1_reg;
        icmp_ln11_1_reg_820_pp0_iter2_reg <= icmp_ln11_1_reg_820_pp0_iter1_reg;
        icmp_ln11_reg_815_pp0_iter2_reg <= icmp_ln11_reg_815_pp0_iter1_reg;
        p_read_4_reg_723_pp0_iter2_reg <= p_read_4_reg_723_pp0_iter1_reg;
        p_read_5_reg_729_pp0_iter2_reg <= p_read_5_reg_729_pp0_iter1_reg;
        weight_out_weight_change_1_reg_772_pp0_iter2_reg <= weight_out_weight_change_1_reg_772_pp0_iter1_reg;
        weight_out_weight_change_2_reg_788_pp0_iter2_reg <= weight_out_weight_change_2_reg_788_pp0_iter1_reg;
        weight_out_weight_change_3_reg_804_pp0_iter2_reg <= weight_out_weight_change_3_reg_804_pp0_iter1_reg;
        weight_out_weight_change_reg_750_pp0_iter2_reg <= weight_out_weight_change_reg_750_pp0_iter1_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_662_ce = 1'b1;
    end else begin
        grp_fu_662_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_672_ce = 1'b1;
    end else begin
        grp_fu_672_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_681_ce = 1'b1;
    end else begin
        grp_fu_681_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_690_ce = 1'b1;
    end else begin
        grp_fu_690_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_699_ce = 1'b1;
    end else begin
        grp_fu_699_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_708_ce = 1'b1;
    end else begin
        grp_fu_708_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14_1_fu_245_p2 = (shl_ln14_1_fu_237_p3 + mul_ln14_4_fu_129_p2);

assign add_ln14_2_fu_283_p2 = (shl_ln14_2_fu_275_p3 + mul_ln14_5_fu_134_p2);

assign add_ln14_3_fu_332_p2 = (shl_ln14_3_fu_324_p3 + mul_ln14_7_fu_139_p2);

assign add_ln14_fu_179_p2 = (shl_ln_fu_171_p3 + mul_ln14_1_fu_124_p2);

assign add_ln29_1_fu_537_p2 = (trunc_ln13_2_fu_487_p4 + p_read_4_reg_723_pp0_iter2_reg);

assign add_ln29_fu_496_p2 = (trunc_ln_fu_460_p4 + p_read_5_reg_729_pp0_iter2_reg);

assign agg_result_delta_kmin1_0_0_fu_592_p3 = ((cmp_i_i_reg_809_pp0_iter2_reg[0:0] == 1'b1) ? 16'd0 : error_1_fu_578_p3);

assign agg_result_delta_kmin1_1_0_fu_599_p3 = ((cmp_i_i_reg_809_pp0_iter2_reg[0:0] == 1'b1) ? 16'd0 : error_3_fu_585_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = zext_ln29_fu_533_p1;

assign ap_return_1 = zext_ln6_fu_574_p1;

assign ap_return_2 = agg_result_delta_kmin1_0_0_fu_592_p3;

assign ap_return_3 = agg_result_delta_kmin1_1_0_fu_599_p3;

assign ap_return_4 = weight_out_weight_change_reg_750_pp0_iter2_reg;

assign ap_return_5 = weight_out_weight_change_1_reg_772_pp0_iter2_reg;

assign ap_return_6 = weight_out_weight_change_2_reg_788_pp0_iter2_reg;

assign ap_return_7 = weight_out_weight_change_3_reg_804_pp0_iter2_reg;

assign ap_return_8 = add_ln29_fu_496_p2;

assign ap_return_9 = add_ln29_1_fu_537_p2;

assign cmp_i_i_fu_348_p2 = ((training == 16'd0) ? 1'b1 : 1'b0);

assign conv_i_i_1_fu_210_p0 = p_read37;

assign conv_i_i_1_fu_210_p1 = conv_i_i_1_fu_210_p0;

assign conv_i_i_fu_144_p0 = p_read36;

assign conv_i_i_fu_144_p1 = conv_i_i_fu_144_p0;

assign error_1_fu_578_p3 = ((icmp_ln11_reg_815_pp0_iter2_reg[0:0] == 1'b1) ? weight_out_sum_delta_out_fu_469_p4 : 16'd0);

assign error_3_fu_585_p3 = ((icmp_ln11_1_reg_820_pp0_iter2_reg[0:0] == 1'b1) ? weight_out_sum_delta_out_1_fu_478_p4 : 16'd0);

assign grp_fu_662_p1 = 23'd51;

assign grp_fu_662_p2 = {{p_read_5_reg_729_pp0_iter1_reg}, {9'd0}};

assign grp_fu_672_p1 = sext_ln13_3_fu_233_p1;

assign grp_fu_672_p2 = {{tmp_reg_825}, {9'd0}};

assign grp_fu_681_p0 = sext_ln12_5_fu_261_p1;

assign grp_fu_681_p1 = sext_ln12_6_fu_265_p1;

assign grp_fu_681_p2 = {{tmp_1_reg_830}, {9'd0}};

assign grp_fu_690_p0 = sext_ln12_7_fu_299_p1;

assign grp_fu_690_p1 = sext_ln12_6_fu_265_p1;

assign grp_fu_690_p2 = {{tmp_2_reg_835}, {9'd0}};

assign grp_fu_699_p0 = sext_ln12_7_fu_299_p1;

assign grp_fu_699_p1 = sext_ln13_3_fu_233_p1;

assign grp_fu_699_p2 = {{tmp_3_reg_799_pp0_iter1_reg}, {9'd0}};

assign grp_fu_708_p1 = 23'd51;

assign grp_fu_708_p2 = {{p_read_4_reg_723_pp0_iter1_reg}, {9'd0}};

assign icmp_ln11_1_fu_360_p0 = p_read35;

assign icmp_ln11_1_fu_360_p2 = (($signed(icmp_ln11_1_fu_360_p0) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_354_p0 = p_read34;

assign icmp_ln11_fu_354_p2 = (($signed(icmp_ln11_fu_354_p0) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln12_1_fu_560_p2 = (($signed(omega_1_fu_542_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln12_fu_519_p2 = (($signed(omega_fu_501_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign mul_ln12_1_fu_403_p0 = sext_ln12_4_reg_760;

assign mul_ln12_1_fu_403_p1 = sext_ln12_2_fu_369_p1;

assign mul_ln12_fu_372_p0 = sext_ln12_1_fu_366_p1;

assign mul_ln12_fu_372_p1 = sext_ln12_2_fu_369_p1;

assign mul_ln13_2_fu_269_p0 = sext_ln12_5_fu_261_p1;

assign mul_ln13_fu_378_p0 = sext_ln12_1_fu_366_p1;

assign mul_ln13_fu_378_p1 = sext_ln13_2_reg_745;

assign mul_ln14_1_fu_124_p1 = 34'd17179869133;

assign mul_ln14_2_fu_199_p0 = sext_ln13_1_fu_195_p1;

assign mul_ln14_2_fu_199_p1 = conv_i_i_fu_144_p1;

assign mul_ln14_3_fu_218_p0 = conv_i_i_1_fu_210_p1;

assign mul_ln14_3_fu_218_p1 = sext_ln13_fu_152_p1;

assign mul_ln14_4_fu_129_p1 = 34'd17179869133;

assign mul_ln14_5_fu_134_p1 = 34'd17179869133;

assign mul_ln14_6_fu_313_p0 = conv_i_i_1_fu_210_p1;

assign mul_ln14_6_fu_313_p1 = sext_ln13_1_fu_195_p1;

assign mul_ln14_7_fu_139_p1 = 34'd17179869133;

assign mul_ln14_fu_160_p0 = sext_ln13_fu_152_p1;

assign mul_ln14_fu_160_p1 = conv_i_i_fu_144_p1;

assign omega_1_fu_542_p4 = {{grp_fu_708_p3[24:9]}};

assign omega_fu_501_p4 = {{grp_fu_662_p3[24:9]}};

assign output_2_fu_566_p3 = ((icmp_ln12_1_fu_560_p2[0:0] == 1'b1) ? trunc_ln5_fu_551_p4 : 15'd0);

assign output_3_fu_525_p3 = ((icmp_ln12_fu_519_p2[0:0] == 1'b1) ? trunc_ln12_3_fu_510_p4 : 15'd0);

assign sext_ln12_1_fu_366_p1 = p_read101_reg_735;

assign sext_ln12_2_fu_369_p1 = p_read_1_reg_718;

assign sext_ln12_4_fu_229_p0 = p_read29;

assign sext_ln12_4_fu_229_p1 = sext_ln12_4_fu_229_p0;

assign sext_ln12_5_fu_261_p0 = p_read30;

assign sext_ln12_5_fu_261_p1 = sext_ln12_5_fu_261_p0;

assign sext_ln12_6_fu_265_p0 = p_read37;

assign sext_ln12_6_fu_265_p1 = sext_ln12_6_fu_265_p0;

assign sext_ln12_7_fu_299_p0 = p_read31;

assign sext_ln12_7_fu_299_p1 = sext_ln12_7_fu_299_p0;

assign sext_ln13_1_fu_195_p0 = p_read35;

assign sext_ln13_1_fu_195_p1 = sext_ln13_1_fu_195_p0;

assign sext_ln13_2_fu_156_p0 = p_read34;

assign sext_ln13_2_fu_156_p1 = sext_ln13_2_fu_156_p0;

assign sext_ln13_3_fu_233_p0 = p_read35;

assign sext_ln13_3_fu_233_p1 = sext_ln13_3_fu_233_p0;

assign sext_ln13_fu_152_p0 = p_read34;

assign sext_ln13_fu_152_p1 = sext_ln13_fu_152_p0;

assign shl_ln14_1_fu_237_p1 = p_read29;

assign shl_ln14_1_fu_237_p3 = {{shl_ln14_1_fu_237_p1}, {18'd0}};

assign shl_ln14_2_fu_275_p1 = p_read30;

assign shl_ln14_2_fu_275_p3 = {{shl_ln14_2_fu_275_p1}, {18'd0}};

assign shl_ln14_3_fu_324_p1 = p_read31;

assign shl_ln14_3_fu_324_p3 = {{shl_ln14_3_fu_324_p1}, {18'd0}};

assign shl_ln_fu_171_p1 = p_read10;

assign shl_ln_fu_171_p3 = {{shl_ln_fu_171_p1}, {18'd0}};

assign trunc_ln12_3_fu_510_p4 = {{grp_fu_662_p3[23:9]}};

assign trunc_ln13_2_fu_487_p1 = grp_fu_699_p3;

assign trunc_ln13_2_fu_487_p4 = {{trunc_ln13_2_fu_487_p1[24:9]}};

assign trunc_ln5_fu_551_p4 = {{grp_fu_708_p3[23:9]}};

assign trunc_ln_fu_460_p1 = grp_fu_672_p3;

assign trunc_ln_fu_460_p4 = {{trunc_ln_fu_460_p1[24:9]}};

assign weight_out_sum_delta_out_1_fu_478_p1 = grp_fu_690_p3;

assign weight_out_sum_delta_out_1_fu_478_p4 = {{weight_out_sum_delta_out_1_fu_478_p1[24:9]}};

assign weight_out_sum_delta_out_fu_469_p1 = grp_fu_681_p3;

assign weight_out_sum_delta_out_fu_469_p4 = {{weight_out_sum_delta_out_fu_469_p1[24:9]}};

assign zext_ln29_fu_533_p1 = output_3_fu_525_p3;

assign zext_ln6_fu_574_p1 = output_2_fu_566_p3;

endmodule //accelerator_model_array
