-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity accelerator_accelerator_Pipeline_VITIS_LOOP_55_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bias_1_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    bias_1_ce0 : OUT STD_LOGIC;
    bias_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_2_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    bias_2_ce0 : OUT STD_LOGIC;
    bias_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_1_load : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_0_load : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_1_load_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_0_load_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_1_load : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_0_load : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_1_load_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_0_load_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_3_out_ap_vld : OUT STD_LOGIC;
    w2_local_2_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_2_out_ap_vld : OUT STD_LOGIC;
    w1_local_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_3_out_ap_vld : OUT STD_LOGIC;
    w1_local_2_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_2_out_ap_vld : OUT STD_LOGIC;
    w2_local_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_1_out_ap_vld : OUT STD_LOGIC;
    w2_local_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_out_ap_vld : OUT STD_LOGIC;
    w1_local_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_1_out_ap_vld : OUT STD_LOGIC;
    w1_local_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_out_ap_vld : OUT STD_LOGIC;
    bias_2_local_idx90_promoted157_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_idx90_promoted157_out_ap_vld : OUT STD_LOGIC;
    bias_2_local_idx89_promoted155_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_idx89_promoted155_out_ap_vld : OUT STD_LOGIC;
    bias_1_local_idx97_promoted153_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_idx97_promoted153_out_ap_vld : OUT STD_LOGIC;
    bias_1_local_idx96_promoted151_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_idx96_promoted151_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of accelerator_accelerator_Pipeline_VITIS_LOOP_55_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln55_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln56_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_812 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln55_fu_402_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal n_fu_88 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal add_ln55_fu_372_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal bias_1_local_idx96_promoted151_fu_92 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_ln56_8_fu_565_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_1_local_idx97_promoted153_fu_96 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_ln56_9_fu_572_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_2_local_idx89_promoted155_fu_100 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_ln56_11_fu_586_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_2_local_idx90_promoted157_fu_104 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_ln56_10_fu_579_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_fu_108 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_ln56_7_fu_500_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_1_fu_112 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_ln56_6_fu_492_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_fu_116 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_ln56_5_fu_484_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_1_fu_120 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_ln56_4_fu_476_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_2_fu_124 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_ln56_3_fu_468_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_3_fu_128 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_ln56_2_fu_460_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_2_fu_132 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_ln56_1_fu_452_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_3_fu_136 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_ln56_fu_444_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal bias_1_ce0_local : STD_LOGIC;
    signal bias_2_ce0_local : STD_LOGIC;
    signal icmp_ln59_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln60_1_fu_438_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln60_fu_432_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln59_1_fu_426_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln59_fu_420_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component accelerator_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component accelerator_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    bias_1_local_idx96_promoted151_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                    bias_1_local_idx96_promoted151_fu_92 <= ap_const_lv16_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    bias_1_local_idx96_promoted151_fu_92 <= select_ln56_8_fu_565_p3;
                end if;
            end if; 
        end if;
    end process;

    bias_1_local_idx97_promoted153_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                    bias_1_local_idx97_promoted153_fu_96 <= ap_const_lv16_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    bias_1_local_idx97_promoted153_fu_96 <= select_ln56_9_fu_572_p3;
                end if;
            end if; 
        end if;
    end process;

    bias_2_local_idx89_promoted155_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                    bias_2_local_idx89_promoted155_fu_100 <= ap_const_lv16_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    bias_2_local_idx89_promoted155_fu_100 <= select_ln56_11_fu_586_p3;
                end if;
            end if; 
        end if;
    end process;

    bias_2_local_idx90_promoted157_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                    bias_2_local_idx90_promoted157_fu_104 <= ap_const_lv16_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    bias_2_local_idx90_promoted157_fu_104 <= select_ln56_10_fu_579_p3;
                end if;
            end if; 
        end if;
    end process;

    n_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    n_fu_88 <= ap_const_lv2_0;
                elsif (((icmp_ln55_fu_366_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    n_fu_88 <= add_ln55_fu_372_p2;
                end if;
            end if; 
        end if;
    end process;

    w1_local_1_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    w1_local_1_fu_112 <= ap_const_lv16_0;
                elsif (((icmp_ln55_fu_366_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    w1_local_1_fu_112 <= select_ln56_6_fu_492_p3;
                end if;
            end if; 
        end if;
    end process;

    w1_local_2_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    w1_local_2_fu_124 <= ap_const_lv16_0;
                elsif (((icmp_ln55_fu_366_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    w1_local_2_fu_124 <= select_ln56_3_fu_468_p3;
                end if;
            end if; 
        end if;
    end process;

    w1_local_3_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    w1_local_3_fu_128 <= ap_const_lv16_0;
                elsif (((icmp_ln55_fu_366_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    w1_local_3_fu_128 <= select_ln56_2_fu_460_p3;
                end if;
            end if; 
        end if;
    end process;

    w1_local_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    w1_local_fu_108 <= ap_const_lv16_0;
                elsif (((icmp_ln55_fu_366_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    w1_local_fu_108 <= select_ln56_7_fu_500_p3;
                end if;
            end if; 
        end if;
    end process;

    w2_local_1_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    w2_local_1_fu_120 <= ap_const_lv16_0;
                elsif (((icmp_ln55_fu_366_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    w2_local_1_fu_120 <= select_ln56_4_fu_476_p3;
                end if;
            end if; 
        end if;
    end process;

    w2_local_2_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    w2_local_2_fu_132 <= ap_const_lv16_0;
                elsif (((icmp_ln55_fu_366_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    w2_local_2_fu_132 <= select_ln56_1_fu_452_p3;
                end if;
            end if; 
        end if;
    end process;

    w2_local_3_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    w2_local_3_fu_136 <= ap_const_lv16_0;
                elsif (((icmp_ln55_fu_366_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    w2_local_3_fu_136 <= select_ln56_fu_444_p3;
                end if;
            end if; 
        end if;
    end process;

    w2_local_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    w2_local_fu_116 <= ap_const_lv16_0;
                elsif (((icmp_ln55_fu_366_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    w2_local_fu_116 <= select_ln56_5_fu_484_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln56_reg_812 <= icmp_ln56_fu_408_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln55_fu_372_p2 <= std_logic_vector(unsigned(n_fu_88) + unsigned(ap_const_lv2_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln55_fu_366_p2)
    begin
        if (((icmp_ln55_fu_366_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bias_1_address0 <= zext_ln55_fu_402_p1(1 - 1 downto 0);
    bias_1_ce0 <= bias_1_ce0_local;

    bias_1_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_1_ce0_local <= ap_const_logic_1;
        else 
            bias_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    bias_1_local_idx96_promoted151_out <= bias_1_local_idx96_promoted151_fu_92;

    bias_1_local_idx96_promoted151_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln55_fu_366_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln55_fu_366_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_1_local_idx96_promoted151_out_ap_vld <= ap_const_logic_1;
        else 
            bias_1_local_idx96_promoted151_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    bias_1_local_idx97_promoted153_out <= bias_1_local_idx97_promoted153_fu_96;

    bias_1_local_idx97_promoted153_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln55_fu_366_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln55_fu_366_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_1_local_idx97_promoted153_out_ap_vld <= ap_const_logic_1;
        else 
            bias_1_local_idx97_promoted153_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    bias_2_address0 <= zext_ln55_fu_402_p1(1 - 1 downto 0);
    bias_2_ce0 <= bias_2_ce0_local;

    bias_2_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_2_ce0_local <= ap_const_logic_1;
        else 
            bias_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    bias_2_local_idx89_promoted155_out <= bias_2_local_idx89_promoted155_fu_100;

    bias_2_local_idx89_promoted155_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln55_fu_366_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln55_fu_366_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_2_local_idx89_promoted155_out_ap_vld <= ap_const_logic_1;
        else 
            bias_2_local_idx89_promoted155_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    bias_2_local_idx90_promoted157_out <= bias_2_local_idx90_promoted157_fu_104;

    bias_2_local_idx90_promoted157_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln55_fu_366_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln55_fu_366_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bias_2_local_idx90_promoted157_out_ap_vld <= ap_const_logic_1;
        else 
            bias_2_local_idx90_promoted157_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln55_fu_366_p2 <= "1" when (n_fu_88 = ap_const_lv2_2) else "0";
    icmp_ln56_fu_408_p2 <= "1" when (n_fu_88 = ap_const_lv2_0) else "0";
    icmp_ln59_fu_414_p2 <= "1" when (n_fu_88 = ap_const_lv2_1) else "0";
    select_ln56_10_fu_579_p3 <= 
        bias_2_local_idx90_promoted157_fu_104 when (icmp_ln56_reg_812(0) = '1') else 
        bias_2_q0;
    select_ln56_11_fu_586_p3 <= 
        bias_2_q0 when (icmp_ln56_reg_812(0) = '1') else 
        bias_2_local_idx89_promoted155_fu_100;
    select_ln56_1_fu_452_p3 <= 
        select_ln60_fu_432_p3 when (icmp_ln56_fu_408_p2(0) = '1') else 
        w2_local_2_fu_132;
    select_ln56_2_fu_460_p3 <= 
        select_ln59_1_fu_426_p3 when (icmp_ln56_fu_408_p2(0) = '1') else 
        w1_local_3_fu_128;
    select_ln56_3_fu_468_p3 <= 
        select_ln59_fu_420_p3 when (icmp_ln56_fu_408_p2(0) = '1') else 
        w1_local_2_fu_124;
    select_ln56_4_fu_476_p3 <= 
        w2_local_1_fu_120 when (icmp_ln56_fu_408_p2(0) = '1') else 
        select_ln60_1_fu_438_p3;
    select_ln56_5_fu_484_p3 <= 
        w2_local_fu_116 when (icmp_ln56_fu_408_p2(0) = '1') else 
        select_ln60_fu_432_p3;
    select_ln56_6_fu_492_p3 <= 
        w1_local_1_fu_112 when (icmp_ln56_fu_408_p2(0) = '1') else 
        select_ln59_1_fu_426_p3;
    select_ln56_7_fu_500_p3 <= 
        w1_local_fu_108 when (icmp_ln56_fu_408_p2(0) = '1') else 
        select_ln59_fu_420_p3;
    select_ln56_8_fu_565_p3 <= 
        bias_1_q0 when (icmp_ln56_reg_812(0) = '1') else 
        bias_1_local_idx96_promoted151_fu_92;
    select_ln56_9_fu_572_p3 <= 
        bias_1_local_idx97_promoted153_fu_96 when (icmp_ln56_reg_812(0) = '1') else 
        bias_1_q0;
    select_ln56_fu_444_p3 <= 
        select_ln60_1_fu_438_p3 when (icmp_ln56_fu_408_p2(0) = '1') else 
        w2_local_3_fu_136;
    select_ln59_1_fu_426_p3 <= 
        w1_1_load_1 when (icmp_ln59_fu_414_p2(0) = '1') else 
        w1_0_load_1;
    select_ln59_fu_420_p3 <= 
        w1_1_load when (icmp_ln59_fu_414_p2(0) = '1') else 
        w1_0_load;
    select_ln60_1_fu_438_p3 <= 
        w2_1_load_1 when (icmp_ln59_fu_414_p2(0) = '1') else 
        w2_0_load_1;
    select_ln60_fu_432_p3 <= 
        w2_1_load when (icmp_ln59_fu_414_p2(0) = '1') else 
        w2_0_load;
    w1_local_1_out <= w1_local_1_fu_112;

    w1_local_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln55_fu_366_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln55_fu_366_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w1_local_1_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    w1_local_2_out <= w1_local_2_fu_124;

    w1_local_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln55_fu_366_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln55_fu_366_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w1_local_2_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    w1_local_3_out <= w1_local_3_fu_128;

    w1_local_3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln55_fu_366_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln55_fu_366_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w1_local_3_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    w1_local_out <= w1_local_fu_108;

    w1_local_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln55_fu_366_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln55_fu_366_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w1_local_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    w2_local_1_out <= w2_local_1_fu_120;

    w2_local_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln55_fu_366_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln55_fu_366_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w2_local_1_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    w2_local_2_out <= w2_local_2_fu_132;

    w2_local_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln55_fu_366_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln55_fu_366_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w2_local_2_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    w2_local_3_out <= w2_local_3_fu_136;

    w2_local_3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln55_fu_366_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln55_fu_366_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w2_local_3_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    w2_local_out <= w2_local_fu_116;

    w2_local_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln55_fu_366_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (icmp_ln55_fu_366_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w2_local_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln55_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_fu_88),64));
end behav;
