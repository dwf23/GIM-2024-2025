-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity accelerator_accelerator_Pipeline_VITIS_LOOP_69_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    w2_local_3_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_2_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_1_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_3_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_2_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_1_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_17944 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_07840 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_17736 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_07632 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_17528 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_07424 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_17320 : IN STD_LOGIC_VECTOR (15 downto 0);
    mux_case_07216 : IN STD_LOGIC_VECTOR (15 downto 0);
    retval_0_3_0_0_0_load109 : IN STD_LOGIC_VECTOR (15 downto 0);
    retval_0_2_0_0_0_load103 : IN STD_LOGIC_VECTOR (15 downto 0);
    retval_0_1_0_0_0_load97 : IN STD_LOGIC_VECTOR (15 downto 0);
    retval_0_0_0_0_0_load91 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_0_0_01385_1_lcssa31 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_0_0_01385_lcssa29 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_0_0_01382_1_lcssa27 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_0_0_01382_lcssa25 : IN STD_LOGIC_VECTOR (15 downto 0);
    training : IN STD_LOGIC_VECTOR (15 downto 0);
    cmp_i_i113 : IN STD_LOGIC_VECTOR (0 downto 0);
    w2_local_3_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_3_1_out_ap_vld : OUT STD_LOGIC;
    w2_local_2_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_2_1_out_ap_vld : OUT STD_LOGIC;
    w2_local_1_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_1_1_out_ap_vld : OUT STD_LOGIC;
    w2_local_165_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w2_local_165_out_ap_vld : OUT STD_LOGIC;
    w1_local_3_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_3_1_out_ap_vld : OUT STD_LOGIC;
    w1_local_2_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_2_1_out_ap_vld : OUT STD_LOGIC;
    w1_local_1_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_1_1_out_ap_vld : OUT STD_LOGIC;
    w1_local_163_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    w1_local_163_out_ap_vld : OUT STD_LOGIC;
    mux_case_17943_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_17943_out_ap_vld : OUT STD_LOGIC;
    mux_case_07839_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_07839_out_ap_vld : OUT STD_LOGIC;
    mux_case_17735_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_17735_out_ap_vld : OUT STD_LOGIC;
    mux_case_07631_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_07631_out_ap_vld : OUT STD_LOGIC;
    mux_case_17527_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_17527_out_ap_vld : OUT STD_LOGIC;
    mux_case_07423_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_07423_out_ap_vld : OUT STD_LOGIC;
    mux_case_17319_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_17319_out_ap_vld : OUT STD_LOGIC;
    mux_case_07215_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    mux_case_07215_out_ap_vld : OUT STD_LOGIC;
    retval_0_3_0_0_0_load108_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_3_0_0_0_load108_out_ap_vld : OUT STD_LOGIC;
    retval_0_2_0_0_0_load102_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_2_0_0_0_load102_out_ap_vld : OUT STD_LOGIC;
    retval_0_1_0_0_0_load96_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_1_0_0_0_load96_out_ap_vld : OUT STD_LOGIC;
    retval_0_0_0_0_0_load90_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_0_0_0_0_load90_out_ap_vld : OUT STD_LOGIC;
    bias_2_local_idx4_val23_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_idx4_val23_out_ap_vld : OUT STD_LOGIC;
    bias_2_local_idx_val22_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_idx_val22_out_ap_vld : OUT STD_LOGIC;
    bias_1_local_idx1_val21_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_idx1_val21_out_ap_vld : OUT STD_LOGIC;
    bias_1_local_idx_val20_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_idx_val20_out_ap_vld : OUT STD_LOGIC;
    retval_0_3_0_0_0_load_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_3_0_0_0_load_out_ap_vld : OUT STD_LOGIC;
    retval_0_2_0_0_0_load_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_2_0_0_0_load_out_ap_vld : OUT STD_LOGIC;
    retval_0_1_0_0_0_load_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_1_0_0_0_load_out_ap_vld : OUT STD_LOGIC;
    retval_0_0_0_0_0_load_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    retval_0_0_0_0_0_load_out_ap_vld : OUT STD_LOGIC;
    array_back2_weight_changes_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_weight_changes_out_ap_vld : OUT STD_LOGIC;
    array_back2_weight_changes_4_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_weight_changes_4_out_ap_vld : OUT STD_LOGIC;
    array_back2_weight_changes_5_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_weight_changes_5_out_ap_vld : OUT STD_LOGIC;
    array_back2_weight_changes_6_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_weight_changes_6_out_ap_vld : OUT STD_LOGIC;
    array_back2_bias_change_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_bias_change_out_ap_vld : OUT STD_LOGIC;
    array_back2_bias_change_2_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back2_bias_change_2_out_ap_vld : OUT STD_LOGIC;
    array_back1_weight_changes_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_weight_changes_out_ap_vld : OUT STD_LOGIC;
    array_back1_weight_changes_4_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_weight_changes_4_out_ap_vld : OUT STD_LOGIC;
    array_back1_weight_changes_5_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_weight_changes_5_out_ap_vld : OUT STD_LOGIC;
    array_back1_weight_changes_6_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_weight_changes_6_out_ap_vld : OUT STD_LOGIC;
    array_back1_bias_change_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_bias_change_out_ap_vld : OUT STD_LOGIC;
    array_back1_bias_change_2_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    array_back1_bias_change_2_out_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of accelerator_accelerator_Pipeline_VITIS_LOOP_69_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_3FE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_FFFFFFCB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv28_199 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000110011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_FFFFFFCA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv16_1000 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal j_1_reg_2214 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln69_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln69_reg_2225 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal and_ln144_fu_1044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln144_reg_2229 : STD_LOGIC_VECTOR (0 downto 0);
    signal bias_1_local_idx_val20_load_1_reg_2233 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal bias_1_local_idx1_val21_load_1_reg_2239 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_163_load_1_reg_2245 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_1_1_load_1_reg_2251 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_2_1_load_1_reg_2257 : STD_LOGIC_VECTOR (15 downto 0);
    signal w1_local_3_1_load_1_reg_2263 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln69_fu_1078_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln69_reg_2269 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln73_fu_1105_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln73_reg_2274 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln83_fu_1134_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln83_reg_2279 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_out1_output_k_reg_2284 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal array_out1_output_k_1_reg_2289 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_2_local_idx_val22_load_1_reg_2294 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal bias_2_local_idx4_val23_load_1_reg_2300 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_165_load_1_reg_2306 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_1_1_load_1_reg_2312 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_2_1_load_1_reg_2318 : STD_LOGIC_VECTOR (15 downto 0);
    signal w2_local_3_1_load_1_reg_2324 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_2_reg_2330 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal tmp_6_reg_2338 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_fu_1175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_2344 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln114_cast1_fu_1181_p11 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln114_cast1_reg_2349 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln114_fu_1212_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln114_reg_2354 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln93_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_reg_2359 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal select_ln93_fu_1228_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln93_reg_2365 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln93_fu_1264_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln93_reg_2370 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln93_1_fu_1268_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln93_1_reg_2375 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_fu_1368_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln_reg_2381 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln93_3_fu_1376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_3_reg_2386 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln93_fu_1427_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln93_reg_2391 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal lshr_ln93_fu_1439_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln93_reg_2396 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_fu_1522_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_reg_2401 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal or_ln93_1_fu_1556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln93_1_reg_2406 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln748_fu_1562_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln748_reg_2412 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal array_back2_delta_kmin1_reg_2417 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back2_delta_kmin1_1_reg_2422 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back2_weight_changes_reg_2427 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back2_weight_changes_4_reg_2432 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back2_weight_changes_5_reg_2437 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back2_weight_changes_6_reg_2442 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back2_bias_change_reg_2447 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back2_bias_change_1_reg_2452 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_2457 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal and_ln93_2_fu_1638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln93_2_reg_2462 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal or_ln96_fu_1656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln96_reg_2470 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_0_0_0_0_0_load_2_reg_2478 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal retval_0_1_0_0_0_load_2_reg_2483 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_2_0_0_0_load_2_reg_2488 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_3_0_0_0_load_2_reg_2493 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_3_0_0_0_load_fu_1730_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_3_0_0_0_load_reg_2498 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_2_0_0_0_load_fu_1773_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_2_0_0_0_load_reg_2503 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_1_0_0_0_load_fu_1816_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_1_0_0_0_load_reg_2508 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_0_0_0_0_load_fu_1859_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_0_0_0_0_load_reg_2513 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back1_weight_changes_reg_2518 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back1_weight_changes_4_reg_2523 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back1_weight_changes_5_reg_2528 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back1_weight_changes_6_reg_2533 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back1_bias_change_reg_2538 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_back1_bias_change_1_reg_2543 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_predicate_tran18to19_state17 : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_model_array_fu_816_ap_start : STD_LOGIC;
    signal grp_model_array_fu_816_ap_done : STD_LOGIC;
    signal grp_model_array_fu_816_ap_idle : STD_LOGIC;
    signal grp_model_array_fu_816_ap_ready : STD_LOGIC;
    signal grp_model_array_fu_816_p_read10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_p_read29 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_p_read30 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_p_read31 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_biases_0_0_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_biases_0_1_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_output_kmin1_0_0_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_output_kmin1_0_1_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_delta_k_0_0_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_delta_k_0_1_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_model_array_fu_816_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_UnifiedRetVal_phi_fu_808_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal UnifiedRetVal_reg_804 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_model_array_fu_816_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_ignoreCallOp117 : BOOLEAN;
    signal ap_block_pp0_stage5_ignoreCallOp129 : BOOLEAN;
    signal ap_block_pp0_stage9_ignoreCallOp174 : BOOLEAN;
    signal ap_block_pp0_stage13_ignoreCallOp222 : BOOLEAN;
    signal conv_i_i_i15419_fu_1419_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_fu_268 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln69_fu_1032_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal bias_1_local_idx_val20_fu_272 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal bias_1_local_idx1_val21_fu_276 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal bias_2_local_idx_val22_fu_280 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal bias_2_local_idx4_val23_fu_284 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal retval_0_0_0_0_0_load90_fu_288 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal retval_0_1_0_0_0_load96_fu_292 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal retval_0_2_0_0_0_load102_fu_296 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal retval_0_3_0_0_0_load108_fu_300 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_07215_fu_304 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_17319_fu_308 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_07423_fu_312 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_17527_fu_316 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_07631_fu_320 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_17735_fu_324 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_07839_fu_328 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal mux_case_17943_fu_332 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w1_local_163_fu_336 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w1_local_1_1_fu_340 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w1_local_2_1_fu_344 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w1_local_3_1_fu_348 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w2_local_165_fu_352 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w2_local_1_1_fu_356 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w2_local_2_1_fu_360 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w2_local_3_1_fu_364 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal grp_fu_833_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal icmp_ln144_fu_1038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln73_cast_fu_1081_p9 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln73_cast_fu_1081_p11 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln83_cast_fu_1110_p9 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln83_cast_fu_1110_p11 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_6_fu_1167_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln111_fu_1175_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln114_cast1_fu_1181_p9 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln114_fu_1208_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln114_fu_1204_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln114_fu_1208_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal sub_ln93_fu_1223_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_1234_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_1244_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln93_fu_1252_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1256_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln93_fu_1274_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1280_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln93_2_fu_1296_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln93_4_fu_1300_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln93_5_fu_1306_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln93_2_fu_1310_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln93_3_fu_1316_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln93_1_fu_1290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_2_fu_1322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1334_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_1348_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln93_1_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln93_fu_1356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln93_fu_1328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln93_fu_1362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln112_fu_1382_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln114_1_fu_1390_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln114_1_fu_1393_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln114_fu_1403_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln114_fu_1403_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sub_ln112_fu_1385_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln3_fu_1409_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal add_ln93_1_fu_1430_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln93_1_fu_1435_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal sub_ln93_2_fu_1445_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln93_2_fu_1450_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln93_fu_1454_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal cond50_i_i454_fu_1459_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln93_3_fu_1465_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln93_2_fu_1468_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln93_1_fu_1474_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_10_fu_1488_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln93_1_fu_1496_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln93_3_fu_1504_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln93_3_fu_1509_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln93_4_fu_1484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1515_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln93_1_fu_1534_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln93_5_fu_1550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_4_fu_1544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal and_ln93_1_fu_1624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln93_fu_1633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_fu_1628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln96_fu_1644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_1_fu_1650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_fu_1673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_1_fu_1678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_2_fu_1683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_1_fu_1693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_fu_1688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_2_fu_1705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_3_fu_1711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_2_fu_1699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_4_fu_1717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_0_3_0_0_0_load_fu_1730_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_3_0_0_0_load_fu_1730_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln94_3_fu_1750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_3_fu_1755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_5_fu_1760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_0_2_0_0_0_load_fu_1773_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_2_0_0_0_load_fu_1773_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln94_4_fu_1793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_4_fu_1798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_6_fu_1803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_0_1_0_0_0_load_fu_1816_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_1_0_0_0_load_fu_1816_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln94_5_fu_1836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln94_5_fu_1841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln96_7_fu_1846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_0_0_0_0_0_load_fu_1859_p7 : STD_LOGIC_VECTOR (15 downto 0);
    signal retval_0_0_0_0_0_load_fu_1859_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_833_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage12_00001 : BOOLEAN;
    signal ap_block_pp0_stage13_00001 : BOOLEAN;
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_exit_tran_regpp0 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal zext_ln73_cast_fu_1081_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln73_cast_fu_1081_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln73_cast_fu_1081_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln73_cast_fu_1081_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln83_cast_fu_1110_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln83_cast_fu_1110_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln83_cast_fu_1110_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln83_cast_fu_1110_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln114_cast1_fu_1181_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln114_cast1_fu_1181_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln114_cast1_fu_1181_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln114_cast1_fu_1181_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_3_0_0_0_load_fu_1730_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_3_0_0_0_load_fu_1730_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_3_0_0_0_load_fu_1730_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_2_0_0_0_load_fu_1773_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_2_0_0_0_load_fu_1773_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_2_0_0_0_load_fu_1773_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_1_0_0_0_load_fu_1816_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_1_0_0_0_load_fu_1816_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_1_0_0_0_load_fu_1816_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_0_0_0_0_load_fu_1859_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_0_0_0_0_load_fu_1859_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal retval_0_0_0_0_0_load_fu_1859_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component accelerator_model_array IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (15 downto 0);
        biases_0_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        biases_0_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        output_kmin1_0_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        output_kmin1_0_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        delta_k_0_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        delta_k_0_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        training : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component accelerator_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component accelerator_sparsemux_9_2_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (1 downto 0);
        din3_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        din3 : IN STD_LOGIC_VECTOR (12 downto 0);
        def : IN STD_LOGIC_VECTOR (12 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component accelerator_mul_18s_10ns_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component accelerator_sparsemux_7_2_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        def : IN STD_LOGIC_VECTOR (15 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    grp_model_array_fu_816 : component accelerator_model_array
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_model_array_fu_816_ap_start,
        ap_done => grp_model_array_fu_816_ap_done,
        ap_idle => grp_model_array_fu_816_ap_idle,
        ap_ready => grp_model_array_fu_816_ap_ready,
        ap_ce => ap_const_logic_1,
        p_read10 => grp_model_array_fu_816_p_read10,
        p_read29 => grp_model_array_fu_816_p_read29,
        p_read30 => grp_model_array_fu_816_p_read30,
        p_read31 => grp_model_array_fu_816_p_read31,
        biases_0_0_val => grp_model_array_fu_816_biases_0_0_val,
        biases_0_1_val => grp_model_array_fu_816_biases_0_1_val,
        output_kmin1_0_0_val => grp_model_array_fu_816_output_kmin1_0_0_val,
        output_kmin1_0_1_val => grp_model_array_fu_816_output_kmin1_0_1_val,
        delta_k_0_0_val => grp_model_array_fu_816_delta_k_0_0_val,
        delta_k_0_1_val => grp_model_array_fu_816_delta_k_0_1_val,
        training => training,
        ap_return_0 => grp_model_array_fu_816_ap_return_0,
        ap_return_1 => grp_model_array_fu_816_ap_return_1,
        ap_return_2 => grp_model_array_fu_816_ap_return_2,
        ap_return_3 => grp_model_array_fu_816_ap_return_3,
        ap_return_4 => grp_model_array_fu_816_ap_return_4,
        ap_return_5 => grp_model_array_fu_816_ap_return_5,
        ap_return_6 => grp_model_array_fu_816_ap_return_6,
        ap_return_7 => grp_model_array_fu_816_ap_return_7,
        ap_return_8 => grp_model_array_fu_816_ap_return_8,
        ap_return_9 => grp_model_array_fu_816_ap_return_9);

    dcmp_64ns_64ns_1_2_no_dsp_1_U56 : component accelerator_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_833_p0,
        din1 => ap_const_lv64_3FE0000000000000,
        ce => ap_const_logic_1,
        opcode => grp_fu_833_opcode,
        dout => grp_fu_833_p2);

    sparsemux_9_2_13_1_1_U57 : component accelerator_sparsemux_9_2_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 13,
        CASE1 => "01",
        din1_WIDTH => 13,
        CASE2 => "10",
        din2_WIDTH => 13,
        CASE3 => "11",
        din3_WIDTH => 13,
        def_WIDTH => 13,
        sel_WIDTH => 2,
        dout_WIDTH => 13)
    port map (
        din0 => ap_const_lv13_0,
        din1 => ap_const_lv13_0,
        din2 => ap_const_lv13_1000,
        din3 => ap_const_lv13_1000,
        def => zext_ln73_cast_fu_1081_p9,
        sel => trunc_ln69_fu_1078_p1,
        dout => zext_ln73_cast_fu_1081_p11);

    sparsemux_9_2_13_1_1_U58 : component accelerator_sparsemux_9_2_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 13,
        CASE1 => "01",
        din1_WIDTH => 13,
        CASE2 => "10",
        din2_WIDTH => 13,
        CASE3 => "11",
        din3_WIDTH => 13,
        def_WIDTH => 13,
        sel_WIDTH => 2,
        dout_WIDTH => 13)
    port map (
        din0 => ap_const_lv13_0,
        din1 => ap_const_lv13_1000,
        din2 => ap_const_lv13_0,
        din3 => ap_const_lv13_1000,
        def => zext_ln83_cast_fu_1110_p9,
        sel => trunc_ln69_fu_1078_p1,
        dout => zext_ln83_cast_fu_1110_p11);

    sparsemux_9_2_13_1_1_U59 : component accelerator_sparsemux_9_2_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 13,
        CASE1 => "01",
        din1_WIDTH => 13,
        CASE2 => "10",
        din2_WIDTH => 13,
        CASE3 => "11",
        din3_WIDTH => 13,
        def_WIDTH => 13,
        sel_WIDTH => 2,
        dout_WIDTH => 13)
    port map (
        din0 => ap_const_lv13_0,
        din1 => ap_const_lv13_1000,
        din2 => ap_const_lv13_1000,
        din3 => ap_const_lv13_0,
        def => zext_ln114_cast1_fu_1181_p9,
        sel => trunc_ln69_reg_2269,
        dout => zext_ln114_cast1_fu_1181_p11);

    mul_18s_10ns_28_1_1_U60 : component accelerator_mul_18s_10ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 10,
        dout_WIDTH => 28)
    port map (
        din0 => sub_ln114_1_fu_1393_p2,
        din1 => mul_ln114_fu_1403_p1,
        dout => mul_ln114_fu_1403_p2);

    sparsemux_7_2_16_1_1_U61 : component accelerator_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_1000,
        din1 => ap_const_lv16_0,
        din2 => retval_0_3_0_0_0_load108_fu_300,
        def => retval_0_3_0_0_0_load_fu_1730_p7,
        sel => retval_0_3_0_0_0_load_fu_1730_p8,
        dout => retval_0_3_0_0_0_load_fu_1730_p9);

    sparsemux_7_2_16_1_1_U62 : component accelerator_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_1000,
        din1 => ap_const_lv16_0,
        din2 => retval_0_2_0_0_0_load102_fu_296,
        def => retval_0_2_0_0_0_load_fu_1773_p7,
        sel => retval_0_2_0_0_0_load_fu_1773_p8,
        dout => retval_0_2_0_0_0_load_fu_1773_p9);

    sparsemux_7_2_16_1_1_U63 : component accelerator_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_1000,
        din1 => ap_const_lv16_0,
        din2 => retval_0_1_0_0_0_load96_fu_292,
        def => retval_0_1_0_0_0_load_fu_1816_p7,
        sel => retval_0_1_0_0_0_load_fu_1816_p8,
        dout => retval_0_1_0_0_0_load_fu_1816_p9);

    sparsemux_7_2_16_1_1_U64 : component accelerator_sparsemux_7_2_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 16,
        CASE1 => "01",
        din1_WIDTH => 16,
        CASE2 => "00",
        din2_WIDTH => 16,
        def_WIDTH => 16,
        sel_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => ap_const_lv16_1000,
        din1 => ap_const_lv16_0,
        din2 => retval_0_0_0_0_0_load90_fu_288,
        def => retval_0_0_0_0_0_load_fu_1859_p7,
        sel => retval_0_0_0_0_0_load_fu_1859_p8,
        dout => retval_0_0_0_0_0_load_fu_1859_p9);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_808_p4;
                end if; 
            end if;
        end if;
    end process;


    grp_model_array_fu_816_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_model_array_fu_816_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_fu_1026_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_model_array_fu_816_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_model_array_fu_816_ap_ready = ap_const_logic_1)) then 
                    grp_model_array_fu_816_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    UnifiedRetVal_reg_804_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
                UnifiedRetVal_reg_804 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                UnifiedRetVal_reg_804 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    ap_exit_tran_regpp0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_subdone))) then
                if ((icmp_ln69_reg_2225 = ap_const_lv1_1)) then 
                    ap_exit_tran_regpp0(0) <= '1';
                elsif ((ap_predicate_tran18to19_state17 = ap_const_boolean_1)) then 
                    ap_exit_tran_regpp0(0) <= '0';
                end if;
            end if; 
        end if;
    end process;

    bias_1_local_idx1_val21_fu_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bias_1_local_idx1_val21_fu_276 <= p_0_0_01382_1_lcssa27;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                bias_1_local_idx1_val21_fu_276 <= grp_model_array_fu_816_ap_return_9;
            end if; 
        end if;
    end process;

    bias_1_local_idx_val20_fu_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bias_1_local_idx_val20_fu_272 <= p_0_0_01382_lcssa25;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                bias_1_local_idx_val20_fu_272 <= grp_model_array_fu_816_ap_return_8;
            end if; 
        end if;
    end process;

    bias_2_local_idx4_val23_fu_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bias_2_local_idx4_val23_fu_284 <= p_0_0_01385_1_lcssa31;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
                bias_2_local_idx4_val23_fu_284 <= grp_model_array_fu_816_ap_return_9;
            end if; 
        end if;
    end process;

    bias_2_local_idx_val22_fu_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bias_2_local_idx_val22_fu_280 <= p_0_0_01385_lcssa29;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
                bias_2_local_idx_val22_fu_280 <= grp_model_array_fu_816_ap_return_8;
            end if; 
        end if;
    end process;

    j_fu_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_fu_268 <= ap_const_lv3_0;
            elsif (((ap_const_lv1_0 = and_ln144_fu_1044_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_fu_1026_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                j_fu_268 <= add_ln69_fu_1032_p2;
            end if; 
        end if;
    end process;

    mux_case_07215_fu_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_07215_fu_304 <= mux_case_07216;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                mux_case_07215_fu_304 <= grp_model_array_fu_816_ap_return_4;
            end if; 
        end if;
    end process;

    mux_case_07423_fu_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_07423_fu_312 <= mux_case_07424;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                mux_case_07423_fu_312 <= grp_model_array_fu_816_ap_return_5;
            end if; 
        end if;
    end process;

    mux_case_07631_fu_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_07631_fu_320 <= mux_case_07632;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
                mux_case_07631_fu_320 <= grp_model_array_fu_816_ap_return_4;
            end if; 
        end if;
    end process;

    mux_case_07839_fu_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_07839_fu_328 <= mux_case_07840;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
                mux_case_07839_fu_328 <= grp_model_array_fu_816_ap_return_5;
            end if; 
        end if;
    end process;

    mux_case_17319_fu_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_17319_fu_308 <= mux_case_17320;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                mux_case_17319_fu_308 <= grp_model_array_fu_816_ap_return_6;
            end if; 
        end if;
    end process;

    mux_case_17527_fu_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_17527_fu_316 <= mux_case_17528;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                mux_case_17527_fu_316 <= grp_model_array_fu_816_ap_return_7;
            end if; 
        end if;
    end process;

    mux_case_17735_fu_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_17735_fu_324 <= mux_case_17736;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
                mux_case_17735_fu_324 <= grp_model_array_fu_816_ap_return_6;
            end if; 
        end if;
    end process;

    mux_case_17943_fu_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                mux_case_17943_fu_332 <= mux_case_17944;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
                mux_case_17943_fu_332 <= grp_model_array_fu_816_ap_return_7;
            end if; 
        end if;
    end process;

    retval_0_0_0_0_0_load90_fu_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                retval_0_0_0_0_0_load90_fu_288 <= retval_0_0_0_0_0_load91;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                retval_0_0_0_0_0_load90_fu_288 <= retval_0_0_0_0_0_load_fu_1859_p9;
            end if; 
        end if;
    end process;

    retval_0_1_0_0_0_load96_fu_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                retval_0_1_0_0_0_load96_fu_292 <= retval_0_1_0_0_0_load97;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                retval_0_1_0_0_0_load96_fu_292 <= retval_0_1_0_0_0_load_fu_1816_p9;
            end if; 
        end if;
    end process;

    retval_0_2_0_0_0_load102_fu_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                retval_0_2_0_0_0_load102_fu_296 <= retval_0_2_0_0_0_load103;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                retval_0_2_0_0_0_load102_fu_296 <= retval_0_2_0_0_0_load_fu_1773_p9;
            end if; 
        end if;
    end process;

    retval_0_3_0_0_0_load108_fu_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                retval_0_3_0_0_0_load108_fu_300 <= retval_0_3_0_0_0_load109;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                retval_0_3_0_0_0_load108_fu_300 <= retval_0_3_0_0_0_load_fu_1730_p9;
            end if; 
        end if;
    end process;

    w1_local_163_fu_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w1_local_163_fu_336 <= w1_local_0;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                w1_local_163_fu_336 <= grp_model_array_fu_816_ap_return_4;
            end if; 
        end if;
    end process;

    w1_local_1_1_fu_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w1_local_1_1_fu_340 <= w1_local_1_0;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                w1_local_1_1_fu_340 <= grp_model_array_fu_816_ap_return_5;
            end if; 
        end if;
    end process;

    w1_local_2_1_fu_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w1_local_2_1_fu_344 <= w1_local_2_0;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                w1_local_2_1_fu_344 <= grp_model_array_fu_816_ap_return_6;
            end if; 
        end if;
    end process;

    w1_local_3_1_fu_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w1_local_3_1_fu_348 <= w1_local_3_0;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                w1_local_3_1_fu_348 <= grp_model_array_fu_816_ap_return_7;
            end if; 
        end if;
    end process;

    w2_local_165_fu_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w2_local_165_fu_352 <= w2_local_0;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
                w2_local_165_fu_352 <= grp_model_array_fu_816_ap_return_4;
            end if; 
        end if;
    end process;

    w2_local_1_1_fu_356_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w2_local_1_1_fu_356 <= w2_local_1_0;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
                w2_local_1_1_fu_356 <= grp_model_array_fu_816_ap_return_5;
            end if; 
        end if;
    end process;

    w2_local_2_1_fu_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w2_local_2_1_fu_360 <= w2_local_2_0;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
                w2_local_2_1_fu_360 <= grp_model_array_fu_816_ap_return_6;
            end if; 
        end if;
    end process;

    w2_local_3_1_fu_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                w2_local_3_1_fu_364 <= w2_local_3_0;
            elsif (((ap_const_lv1_0 = and_ln144_reg_2229) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
                w2_local_3_1_fu_364 <= grp_model_array_fu_816_ap_return_7;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                LD_reg_2401 <= LD_fu_1522_p5;
                or_ln93_1_reg_2406 <= or_ln93_1_fu_1556_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln144_reg_2229 <= and_ln144_fu_1044_p2;
                j_1_reg_2214 <= j_fu_268;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001))) then
                and_ln93_2_reg_2462 <= and_ln93_2_fu_1638_p2;
                or_ln96_reg_2470 <= or_ln96_fu_1656_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                array_back1_bias_change_1_reg_2543 <= grp_model_array_fu_816_ap_return_9;
                array_back1_bias_change_reg_2538 <= grp_model_array_fu_816_ap_return_8;
                array_back1_weight_changes_4_reg_2523 <= grp_model_array_fu_816_ap_return_5;
                array_back1_weight_changes_5_reg_2528 <= grp_model_array_fu_816_ap_return_6;
                array_back1_weight_changes_6_reg_2533 <= grp_model_array_fu_816_ap_return_7;
                array_back1_weight_changes_reg_2518 <= grp_model_array_fu_816_ap_return_4;
                retval_0_0_0_0_0_load_2_reg_2478 <= retval_0_0_0_0_0_load90_fu_288;
                retval_0_0_0_0_0_load_reg_2513 <= retval_0_0_0_0_0_load_fu_1859_p9;
                retval_0_1_0_0_0_load_2_reg_2483 <= retval_0_1_0_0_0_load96_fu_292;
                retval_0_1_0_0_0_load_reg_2508 <= retval_0_1_0_0_0_load_fu_1816_p9;
                retval_0_2_0_0_0_load_2_reg_2488 <= retval_0_2_0_0_0_load102_fu_296;
                retval_0_2_0_0_0_load_reg_2503 <= retval_0_2_0_0_0_load_fu_1773_p9;
                retval_0_3_0_0_0_load_2_reg_2493 <= retval_0_3_0_0_0_load108_fu_300;
                retval_0_3_0_0_0_load_reg_2498 <= retval_0_3_0_0_0_load_fu_1730_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then
                array_back2_bias_change_1_reg_2452 <= grp_model_array_fu_816_ap_return_9;
                array_back2_bias_change_reg_2447 <= grp_model_array_fu_816_ap_return_8;
                array_back2_weight_changes_4_reg_2432 <= grp_model_array_fu_816_ap_return_5;
                array_back2_weight_changes_5_reg_2437 <= grp_model_array_fu_816_ap_return_6;
                array_back2_weight_changes_6_reg_2442 <= grp_model_array_fu_816_ap_return_7;
                array_back2_weight_changes_reg_2427 <= grp_model_array_fu_816_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then
                array_back2_delta_kmin1_1_reg_2422 <= grp_model_array_fu_816_ap_return_3;
                array_back2_delta_kmin1_reg_2417 <= grp_model_array_fu_816_ap_return_2;
                bitcast_ln748_reg_2412 <= bitcast_ln748_fu_1562_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                array_out1_output_k_1_reg_2289 <= grp_model_array_fu_816_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                array_out1_output_k_reg_2284 <= grp_model_array_fu_816_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                bias_1_local_idx1_val21_load_1_reg_2239 <= bias_1_local_idx1_val21_fu_276;
                bias_1_local_idx_val20_load_1_reg_2233 <= bias_1_local_idx_val20_fu_272;
                w1_local_163_load_1_reg_2245 <= w1_local_163_fu_336;
                w1_local_1_1_load_1_reg_2251 <= w1_local_1_1_fu_340;
                w1_local_2_1_load_1_reg_2257 <= w1_local_2_1_fu_344;
                w1_local_3_1_load_1_reg_2263 <= w1_local_3_1_fu_348;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                bias_2_local_idx4_val23_load_1_reg_2300 <= bias_2_local_idx4_val23_fu_284;
                bias_2_local_idx_val22_load_1_reg_2294 <= bias_2_local_idx_val22_fu_280;
                w2_local_165_load_1_reg_2306 <= w2_local_165_fu_352;
                w2_local_1_1_load_1_reg_2312 <= w2_local_1_1_fu_356;
                w2_local_2_1_load_1_reg_2318 <= w2_local_2_1_fu_360;
                w2_local_3_1_load_1_reg_2324 <= w2_local_3_1_fu_364;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                icmp_ln111_reg_2344 <= icmp_ln111_fu_1175_p2;
                sub_ln114_reg_2354 <= sub_ln114_fu_1212_p2;
                tmp_6_reg_2338 <= tmp_6_fu_1167_p1(15 downto 15);
                zext_ln114_cast1_reg_2349 <= zext_ln114_cast1_fu_1181_p11;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln69_reg_2225 <= icmp_ln69_fu_1026_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                icmp_ln93_3_reg_2386 <= icmp_ln93_3_fu_1376_p2;
                icmp_ln93_reg_2359 <= icmp_ln93_fu_1218_p2;
                    or_ln_reg_2381(0) <= or_ln_fu_1368_p3(0);
                select_ln93_reg_2365 <= select_ln93_fu_1228_p3;
                sub_ln93_1_reg_2375 <= sub_ln93_1_fu_1268_p2;
                trunc_ln93_reg_2370 <= trunc_ln93_fu_1264_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                lshr_ln93_reg_2396 <= lshr_ln93_fu_1439_p2;
                    zext_ln93_reg_2391(15 downto 0) <= zext_ln93_fu_1427_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                output_2_reg_2330 <= grp_model_array_fu_816_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001))) then
                tmp_reg_2457 <= grp_fu_833_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                trunc_ln69_reg_2269 <= trunc_ln69_fu_1078_p1;
                    zext_ln73_reg_2274(12 downto 0) <= zext_ln73_fu_1105_p1(12 downto 0);
                    zext_ln83_reg_2279(12 downto 0) <= zext_ln83_fu_1134_p1(12 downto 0);
            end if;
        end if;
    end process;
    zext_ln73_reg_2274(15 downto 13) <= "000";
    zext_ln83_reg_2279(15 downto 13) <= "000";
    or_ln_reg_2381(1) <= '0';
    zext_ln93_reg_2391(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    ap_exit_tran_regpp0(1) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage15_subdone, ap_block_pp0_stage0_subdone, ap_exit_tran_regpp0, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_exit_tran_regpp0 = ap_const_lv2_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_exit_tran_regpp0 = ap_const_lv2_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    LD_fu_1522_p5 <= (tmp_s_fu_1515_p3 & zext_ln93_4_fu_1484_p1(51 downto 0));
    add_ln69_fu_1032_p2 <= std_logic_vector(unsigned(j_fu_268) + unsigned(ap_const_lv3_1));
    add_ln93_1_fu_1430_p2 <= std_logic_vector(unsigned(sub_ln93_1_reg_2375) + unsigned(ap_const_lv32_FFFFFFCA));
    add_ln93_2_fu_1468_p2 <= std_logic_vector(unsigned(cond50_i_i454_fu_1459_p3) + unsigned(zext_ln93_3_fu_1465_p1));
    add_ln93_3_fu_1509_p2 <= std_logic_vector(unsigned(select_ln93_1_fu_1496_p3) + unsigned(sub_ln93_3_fu_1504_p2));
    add_ln93_fu_1274_p2 <= std_logic_vector(unsigned(sub_ln93_1_fu_1268_p2) + unsigned(ap_const_lv32_FFFFFFCB));
    and_ln144_fu_1044_p2 <= (icmp_ln144_fu_1038_p2 and cmp_i_i113);
    and_ln93_1_fu_1624_p2 <= (tmp_reg_2457 and or_ln93_1_reg_2406);
    and_ln93_2_fu_1638_p2 <= (xor_ln93_fu_1633_p2 and and_ln93_1_fu_1624_p2);
    and_ln93_3_fu_1316_p2 <= (select_ln93_fu_1228_p3 and lshr_ln93_2_fu_1310_p2);
    and_ln93_fu_1356_p2 <= (xor_ln93_1_fu_1342_p2 and tmp_9_fu_1348_p3);
    and_ln94_1_fu_1693_p2 <= (icmp_ln94_2_fu_1683_p2 and icmp_ln94_1_fu_1678_p2);
    and_ln94_2_fu_1699_p2 <= (and_ln94_fu_1688_p2 and and_ln94_1_fu_1693_p2);
    and_ln94_3_fu_1755_p2 <= (icmp_ln94_3_fu_1750_p2 and and_ln93_2_reg_2462);
    and_ln94_4_fu_1798_p2 <= (icmp_ln94_4_fu_1793_p2 and and_ln93_2_reg_2462);
    and_ln94_5_fu_1841_p2 <= (icmp_ln94_5_fu_1836_p2 and and_ln93_2_reg_2462);
    and_ln94_fu_1688_p2 <= (icmp_ln94_fu_1673_p2 and and_ln93_2_reg_2462);
    and_ln96_1_fu_1650_p2 <= (xor_ln96_fu_1644_p2 and and_ln96_fu_1628_p2);
    and_ln96_2_fu_1705_p2 <= (icmp_ln94_fu_1673_p2 and icmp_ln94_1_fu_1678_p2);
    and_ln96_3_fu_1711_p2 <= (icmp_ln94_2_fu_1683_p2 and and_ln96_2_fu_1705_p2);
    and_ln96_4_fu_1717_p2 <= (or_ln96_reg_2470 and and_ln96_3_fu_1711_p2);
    and_ln96_5_fu_1760_p2 <= (or_ln96_reg_2470 and icmp_ln94_3_fu_1750_p2);
    and_ln96_6_fu_1803_p2 <= (or_ln96_reg_2470 and icmp_ln94_4_fu_1793_p2);
    and_ln96_7_fu_1846_p2 <= (or_ln96_reg_2470 and icmp_ln94_5_fu_1836_p2);
    and_ln96_fu_1628_p2 <= (or_ln93_1_reg_2406 and grp_fu_833_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state19 <= ap_CS_fsm(17);
    ap_CS_fsm_state20 <= ap_CS_fsm(18);
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_ignoreCallOp222 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_ignoreCallOp117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_ignoreCallOp129 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_ignoreCallOp174 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_flush_enable_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_subdone, ap_predicate_tran18to19_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_subdone) and ((ap_predicate_tran18to19_state17 = ap_const_boolean_1) or (icmp_ln69_reg_2225 = ap_const_lv1_1)))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_UnifiedRetVal_phi_fu_808_p4_assign_proc : process(icmp_ln69_reg_2225, UnifiedRetVal_reg_804, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            ap_phi_mux_UnifiedRetVal_phi_fu_808_p4 <= ap_const_lv1_0;
        else 
            ap_phi_mux_UnifiedRetVal_phi_fu_808_p4 <= UnifiedRetVal_reg_804;
        end if; 
    end process;


    ap_predicate_tran18to19_state17_assign_proc : process(icmp_ln69_reg_2225, and_ln144_reg_2229)
    begin
                ap_predicate_tran18to19_state17 <= ((ap_const_lv1_1 = and_ln144_reg_2229) and (icmp_ln69_reg_2225 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_UnifiedRetVal_phi_fu_808_p4, ap_CS_fsm_state19, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_return <= ap_phi_mux_UnifiedRetVal_phi_fu_808_p4;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    array_back1_bias_change_2_out <= array_back1_bias_change_1_reg_2543;

    array_back1_bias_change_2_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            array_back1_bias_change_2_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_bias_change_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_bias_change_out <= array_back1_bias_change_reg_2538;

    array_back1_bias_change_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            array_back1_bias_change_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_bias_change_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_weight_changes_4_out <= array_back1_weight_changes_4_reg_2523;

    array_back1_weight_changes_4_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            array_back1_weight_changes_4_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_weight_changes_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_weight_changes_5_out <= array_back1_weight_changes_5_reg_2528;

    array_back1_weight_changes_5_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            array_back1_weight_changes_5_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_weight_changes_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_weight_changes_6_out <= array_back1_weight_changes_6_reg_2533;

    array_back1_weight_changes_6_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            array_back1_weight_changes_6_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_weight_changes_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back1_weight_changes_out <= array_back1_weight_changes_reg_2518;

    array_back1_weight_changes_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            array_back1_weight_changes_out_ap_vld <= ap_const_logic_1;
        else 
            array_back1_weight_changes_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_bias_change_2_out <= array_back2_bias_change_1_reg_2452;

    array_back2_bias_change_2_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            array_back2_bias_change_2_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_bias_change_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_bias_change_out <= array_back2_bias_change_reg_2447;

    array_back2_bias_change_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            array_back2_bias_change_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_bias_change_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_weight_changes_4_out <= array_back2_weight_changes_4_reg_2432;

    array_back2_weight_changes_4_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            array_back2_weight_changes_4_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_weight_changes_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_weight_changes_5_out <= array_back2_weight_changes_5_reg_2437;

    array_back2_weight_changes_5_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            array_back2_weight_changes_5_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_weight_changes_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_weight_changes_6_out <= array_back2_weight_changes_6_reg_2442;

    array_back2_weight_changes_6_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            array_back2_weight_changes_6_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_weight_changes_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    array_back2_weight_changes_out <= array_back2_weight_changes_reg_2427;

    array_back2_weight_changes_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            array_back2_weight_changes_out_ap_vld <= ap_const_logic_1;
        else 
            array_back2_weight_changes_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bias_1_local_idx1_val21_out_assign_proc : process(icmp_ln69_reg_2225, bias_1_local_idx1_val21_load_1_reg_2239, ap_CS_fsm_state20, ap_CS_fsm_state19, bias_1_local_idx1_val21_fu_276)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            bias_1_local_idx1_val21_out <= bias_1_local_idx1_val21_fu_276;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            bias_1_local_idx1_val21_out <= bias_1_local_idx1_val21_load_1_reg_2239;
        else 
            bias_1_local_idx1_val21_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_1_local_idx1_val21_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            bias_1_local_idx1_val21_out_ap_vld <= ap_const_logic_1;
        else 
            bias_1_local_idx1_val21_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bias_1_local_idx_val20_out_assign_proc : process(icmp_ln69_reg_2225, bias_1_local_idx_val20_load_1_reg_2233, ap_CS_fsm_state20, ap_CS_fsm_state19, bias_1_local_idx_val20_fu_272)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            bias_1_local_idx_val20_out <= bias_1_local_idx_val20_fu_272;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            bias_1_local_idx_val20_out <= bias_1_local_idx_val20_load_1_reg_2233;
        else 
            bias_1_local_idx_val20_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_1_local_idx_val20_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            bias_1_local_idx_val20_out_ap_vld <= ap_const_logic_1;
        else 
            bias_1_local_idx_val20_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bias_2_local_idx4_val23_out_assign_proc : process(icmp_ln69_reg_2225, bias_2_local_idx4_val23_load_1_reg_2300, ap_CS_fsm_state20, ap_CS_fsm_state19, bias_2_local_idx4_val23_fu_284)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            bias_2_local_idx4_val23_out <= bias_2_local_idx4_val23_fu_284;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            bias_2_local_idx4_val23_out <= bias_2_local_idx4_val23_load_1_reg_2300;
        else 
            bias_2_local_idx4_val23_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_2_local_idx4_val23_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            bias_2_local_idx4_val23_out_ap_vld <= ap_const_logic_1;
        else 
            bias_2_local_idx4_val23_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bias_2_local_idx_val22_out_assign_proc : process(icmp_ln69_reg_2225, bias_2_local_idx_val22_load_1_reg_2294, ap_CS_fsm_state20, ap_CS_fsm_state19, bias_2_local_idx_val22_fu_280)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            bias_2_local_idx_val22_out <= bias_2_local_idx_val22_fu_280;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            bias_2_local_idx_val22_out <= bias_2_local_idx_val22_load_1_reg_2294;
        else 
            bias_2_local_idx_val22_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_2_local_idx_val22_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            bias_2_local_idx_val22_out_ap_vld <= ap_const_logic_1;
        else 
            bias_2_local_idx_val22_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln748_fu_1562_p1 <= LD_reg_2401;
    cond50_i_i454_fu_1459_p3 <= 
        lshr_ln93_reg_2396 when (icmp_ln93_3_reg_2386(0) = '1') else 
        shl_ln93_fu_1454_p2;
    conv_i_i_i15419_fu_1419_p3 <= 
        sub_ln112_fu_1385_p2 when (icmp_ln111_reg_2344(0) = '1') else 
        trunc_ln3_fu_1409_p4;

    grp_fu_833_opcode_assign_proc : process(icmp_ln69_reg_2225, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage12_00001, ap_block_pp0_stage13_00001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_00001))) then 
                grp_fu_833_opcode <= ap_const_lv5_5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_00001))) then 
                grp_fu_833_opcode <= ap_const_lv5_2;
            else 
                grp_fu_833_opcode <= "XXXXX";
            end if;
        else 
            grp_fu_833_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_833_p0_assign_proc : process(ap_enable_reg_pp0_iter0, bitcast_ln748_fu_1562_p1, bitcast_ln748_reg_2412, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage12, ap_block_pp0_stage13)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
                grp_fu_833_p0 <= bitcast_ln748_reg_2412;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
                grp_fu_833_p0 <= bitcast_ln748_fu_1562_p1;
            else 
                grp_fu_833_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_833_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_model_array_fu_816_ap_start <= grp_model_array_fu_816_ap_start_reg;

    grp_model_array_fu_816_biases_0_0_val_assign_proc : process(icmp_ln69_reg_2225, ap_enable_reg_pp0_iter0, bias_1_local_idx_val20_load_1_reg_2233, ap_CS_fsm_pp0_stage1, bias_2_local_idx_val22_load_1_reg_2294, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage1_ignoreCallOp117, ap_block_pp0_stage5_ignoreCallOp129, ap_block_pp0_stage9_ignoreCallOp174, ap_block_pp0_stage13_ignoreCallOp222, bias_1_local_idx_val20_fu_272, bias_2_local_idx_val22_fu_280)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_ignoreCallOp222))) then 
                grp_model_array_fu_816_biases_0_0_val <= bias_1_local_idx_val20_load_1_reg_2233;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp174))) then 
                grp_model_array_fu_816_biases_0_0_val <= bias_2_local_idx_val22_load_1_reg_2294;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp129))) then 
                grp_model_array_fu_816_biases_0_0_val <= bias_2_local_idx_val22_fu_280;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp117))) then 
                grp_model_array_fu_816_biases_0_0_val <= bias_1_local_idx_val20_fu_272;
            else 
                grp_model_array_fu_816_biases_0_0_val <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_model_array_fu_816_biases_0_0_val <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_816_biases_0_1_val_assign_proc : process(icmp_ln69_reg_2225, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, bias_1_local_idx1_val21_load_1_reg_2239, ap_CS_fsm_pp0_stage5, bias_2_local_idx4_val23_load_1_reg_2300, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage1_ignoreCallOp117, ap_block_pp0_stage5_ignoreCallOp129, ap_block_pp0_stage9_ignoreCallOp174, ap_block_pp0_stage13_ignoreCallOp222, bias_1_local_idx1_val21_fu_276, bias_2_local_idx4_val23_fu_284)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_ignoreCallOp222))) then 
                grp_model_array_fu_816_biases_0_1_val <= bias_1_local_idx1_val21_load_1_reg_2239;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp174))) then 
                grp_model_array_fu_816_biases_0_1_val <= bias_2_local_idx4_val23_load_1_reg_2300;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp129))) then 
                grp_model_array_fu_816_biases_0_1_val <= bias_2_local_idx4_val23_fu_284;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp117))) then 
                grp_model_array_fu_816_biases_0_1_val <= bias_1_local_idx1_val21_fu_276;
            else 
                grp_model_array_fu_816_biases_0_1_val <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_model_array_fu_816_biases_0_1_val <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_816_delta_k_0_0_val_assign_proc : process(icmp_ln69_reg_2225, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage9, array_back2_delta_kmin1_reg_2417, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage1_ignoreCallOp117, ap_block_pp0_stage5_ignoreCallOp129, ap_block_pp0_stage9_ignoreCallOp174, ap_block_pp0_stage13_ignoreCallOp222, conv_i_i_i15419_fu_1419_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_ignoreCallOp222))) then 
            grp_model_array_fu_816_delta_k_0_0_val <= array_back2_delta_kmin1_reg_2417;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp174))) then 
            grp_model_array_fu_816_delta_k_0_0_val <= conv_i_i_i15419_fu_1419_p3;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp129)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp117)))) then 
            grp_model_array_fu_816_delta_k_0_0_val <= ap_const_lv16_0;
        else 
            grp_model_array_fu_816_delta_k_0_0_val <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_816_delta_k_0_1_val_assign_proc : process(icmp_ln69_reg_2225, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage9, array_back2_delta_kmin1_1_reg_2422, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage1_ignoreCallOp117, ap_block_pp0_stage5_ignoreCallOp129, ap_block_pp0_stage9_ignoreCallOp174, ap_block_pp0_stage13_ignoreCallOp222)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_ignoreCallOp222))) then 
            grp_model_array_fu_816_delta_k_0_1_val <= array_back2_delta_kmin1_1_reg_2422;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp174)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp129)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp117)))) then 
            grp_model_array_fu_816_delta_k_0_1_val <= ap_const_lv16_0;
        else 
            grp_model_array_fu_816_delta_k_0_1_val <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_816_output_kmin1_0_0_val_assign_proc : process(icmp_ln69_reg_2225, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, zext_ln73_fu_1105_p1, zext_ln73_reg_2274, array_out1_output_k_reg_2284, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage1_ignoreCallOp117, ap_block_pp0_stage5_ignoreCallOp129, ap_block_pp0_stage9_ignoreCallOp174, ap_block_pp0_stage13_ignoreCallOp222)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_ignoreCallOp222))) then 
            grp_model_array_fu_816_output_kmin1_0_0_val <= zext_ln73_reg_2274;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp174)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp129)))) then 
            grp_model_array_fu_816_output_kmin1_0_0_val <= array_out1_output_k_reg_2284;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp117))) then 
            grp_model_array_fu_816_output_kmin1_0_0_val <= zext_ln73_fu_1105_p1;
        else 
            grp_model_array_fu_816_output_kmin1_0_0_val <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_816_output_kmin1_0_1_val_assign_proc : process(icmp_ln69_reg_2225, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, zext_ln83_fu_1134_p1, zext_ln83_reg_2279, array_out1_output_k_1_reg_2289, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage1_ignoreCallOp117, ap_block_pp0_stage5_ignoreCallOp129, ap_block_pp0_stage9_ignoreCallOp174, ap_block_pp0_stage13_ignoreCallOp222)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_ignoreCallOp222))) then 
            grp_model_array_fu_816_output_kmin1_0_1_val <= zext_ln83_reg_2279;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp174)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp129)))) then 
            grp_model_array_fu_816_output_kmin1_0_1_val <= array_out1_output_k_1_reg_2289;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp117))) then 
            grp_model_array_fu_816_output_kmin1_0_1_val <= zext_ln83_fu_1134_p1;
        else 
            grp_model_array_fu_816_output_kmin1_0_1_val <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_816_p_read10_assign_proc : process(icmp_ln69_reg_2225, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, w1_local_163_load_1_reg_2245, ap_CS_fsm_pp0_stage5, w2_local_165_load_1_reg_2306, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage1_ignoreCallOp117, ap_block_pp0_stage5_ignoreCallOp129, ap_block_pp0_stage9_ignoreCallOp174, ap_block_pp0_stage13_ignoreCallOp222, w1_local_163_fu_336, w2_local_165_fu_352)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_ignoreCallOp222))) then 
                grp_model_array_fu_816_p_read10 <= w1_local_163_load_1_reg_2245;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp174))) then 
                grp_model_array_fu_816_p_read10 <= w2_local_165_load_1_reg_2306;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp129))) then 
                grp_model_array_fu_816_p_read10 <= w2_local_165_fu_352;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp117))) then 
                grp_model_array_fu_816_p_read10 <= w1_local_163_fu_336;
            else 
                grp_model_array_fu_816_p_read10 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_model_array_fu_816_p_read10 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_816_p_read29_assign_proc : process(icmp_ln69_reg_2225, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, w1_local_1_1_load_1_reg_2251, ap_CS_fsm_pp0_stage5, w2_local_1_1_load_1_reg_2312, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage1_ignoreCallOp117, ap_block_pp0_stage5_ignoreCallOp129, ap_block_pp0_stage9_ignoreCallOp174, ap_block_pp0_stage13_ignoreCallOp222, w1_local_1_1_fu_340, w2_local_1_1_fu_356)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_ignoreCallOp222))) then 
                grp_model_array_fu_816_p_read29 <= w1_local_1_1_load_1_reg_2251;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp174))) then 
                grp_model_array_fu_816_p_read29 <= w2_local_1_1_load_1_reg_2312;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp129))) then 
                grp_model_array_fu_816_p_read29 <= w2_local_1_1_fu_356;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp117))) then 
                grp_model_array_fu_816_p_read29 <= w1_local_1_1_fu_340;
            else 
                grp_model_array_fu_816_p_read29 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_model_array_fu_816_p_read29 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_816_p_read30_assign_proc : process(icmp_ln69_reg_2225, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, w1_local_2_1_load_1_reg_2257, ap_CS_fsm_pp0_stage5, w2_local_2_1_load_1_reg_2318, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage1_ignoreCallOp117, ap_block_pp0_stage5_ignoreCallOp129, ap_block_pp0_stage9_ignoreCallOp174, ap_block_pp0_stage13_ignoreCallOp222, w1_local_2_1_fu_344, w2_local_2_1_fu_360)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_ignoreCallOp222))) then 
                grp_model_array_fu_816_p_read30 <= w1_local_2_1_load_1_reg_2257;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp174))) then 
                grp_model_array_fu_816_p_read30 <= w2_local_2_1_load_1_reg_2318;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp129))) then 
                grp_model_array_fu_816_p_read30 <= w2_local_2_1_fu_360;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp117))) then 
                grp_model_array_fu_816_p_read30 <= w1_local_2_1_fu_344;
            else 
                grp_model_array_fu_816_p_read30 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_model_array_fu_816_p_read30 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_model_array_fu_816_p_read31_assign_proc : process(icmp_ln69_reg_2225, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, w1_local_3_1_load_1_reg_2263, ap_CS_fsm_pp0_stage5, w2_local_3_1_load_1_reg_2324, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage1_ignoreCallOp117, ap_block_pp0_stage5_ignoreCallOp129, ap_block_pp0_stage9_ignoreCallOp174, ap_block_pp0_stage13_ignoreCallOp222, w1_local_3_1_fu_348, w2_local_3_1_fu_364)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_ignoreCallOp222))) then 
                grp_model_array_fu_816_p_read31 <= w1_local_3_1_load_1_reg_2263;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_ignoreCallOp174))) then 
                grp_model_array_fu_816_p_read31 <= w2_local_3_1_load_1_reg_2324;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp129))) then 
                grp_model_array_fu_816_p_read31 <= w2_local_3_1_fu_364;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp117))) then 
                grp_model_array_fu_816_p_read31 <= w1_local_3_1_fu_348;
            else 
                grp_model_array_fu_816_p_read31 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_model_array_fu_816_p_read31 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln111_fu_1175_p0 <= grp_model_array_fu_816_ap_return_0;
    icmp_ln111_fu_1175_p2 <= "1" when (signed(icmp_ln111_fu_1175_p0) > signed(ap_const_lv16_0)) else "0";
    icmp_ln144_fu_1038_p2 <= "1" when (j_fu_268 = ap_const_lv3_3) else "0";
    icmp_ln69_fu_1026_p2 <= "1" when (j_fu_268 = ap_const_lv3_4) else "0";
    icmp_ln93_1_fu_1290_p2 <= "1" when (signed(tmp_7_fu_1280_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln93_2_fu_1322_p2 <= "0" when (and_ln93_3_fu_1316_p2 = ap_const_lv16_0) else "1";
    icmp_ln93_3_fu_1376_p2 <= "1" when (signed(add_ln93_fu_1274_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln93_4_fu_1544_p2 <= "0" when (add_ln93_3_fu_1509_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln93_5_fu_1550_p2 <= "1" when (trunc_ln93_1_fu_1534_p4 = ap_const_lv52_0) else "0";
    icmp_ln93_fu_1218_p2 <= "1" when (output_2_reg_2330 = ap_const_lv16_0) else "0";
    icmp_ln94_1_fu_1678_p2 <= "0" when (j_1_reg_2214 = ap_const_lv3_1) else "1";
    icmp_ln94_2_fu_1683_p2 <= "0" when (j_1_reg_2214 = ap_const_lv3_2) else "1";
    icmp_ln94_3_fu_1750_p2 <= "1" when (j_1_reg_2214 = ap_const_lv3_2) else "0";
    icmp_ln94_4_fu_1793_p2 <= "1" when (j_1_reg_2214 = ap_const_lv3_1) else "0";
    icmp_ln94_5_fu_1836_p2 <= "1" when (j_1_reg_2214 = ap_const_lv3_0) else "0";
    icmp_ln94_fu_1673_p2 <= "0" when (j_1_reg_2214 = ap_const_lv3_0) else "1";
    lshr_ln93_1_fu_1474_p4 <= add_ln93_2_fu_1468_p2(63 downto 1);
    lshr_ln93_2_fu_1310_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & zext_ln93_5_fu_1306_p1(16-1 downto 0)))));
    lshr_ln93_fu_1439_p2 <= std_logic_vector(shift_right(unsigned(zext_ln93_fu_1427_p1),to_integer(unsigned('0' & zext_ln93_1_fu_1435_p1(31-1 downto 0)))));
    mul_ln114_fu_1403_p1 <= ap_const_lv28_199(10 - 1 downto 0);
    mux_case_07215_out <= mux_case_07215_fu_304;

    mux_case_07215_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            mux_case_07215_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_07215_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_07423_out <= mux_case_07423_fu_312;

    mux_case_07423_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            mux_case_07423_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_07423_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_07631_out <= mux_case_07631_fu_320;

    mux_case_07631_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            mux_case_07631_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_07631_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_07839_out <= mux_case_07839_fu_328;

    mux_case_07839_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            mux_case_07839_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_07839_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_17319_out <= mux_case_17319_fu_308;

    mux_case_17319_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            mux_case_17319_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_17319_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_17527_out <= mux_case_17527_fu_316;

    mux_case_17527_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            mux_case_17527_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_17527_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_17735_out <= mux_case_17735_fu_324;

    mux_case_17735_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            mux_case_17735_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_17735_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    mux_case_17943_out <= mux_case_17943_fu_332;

    mux_case_17943_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            mux_case_17943_out_ap_vld <= ap_const_logic_1;
        else 
            mux_case_17943_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln93_1_fu_1556_p2 <= (icmp_ln93_5_fu_1550_p2 or icmp_ln93_4_fu_1544_p2);
    or_ln93_fu_1362_p2 <= (phi_ln93_fu_1328_p2 or and_ln93_fu_1356_p2);
    or_ln96_fu_1656_p2 <= (icmp_ln93_reg_2359 or and_ln96_1_fu_1650_p2);
    or_ln_fu_1368_p3 <= (ap_const_lv1_0 & or_ln93_fu_1362_p2);
    phi_ln93_fu_1328_p2 <= (icmp_ln93_2_fu_1322_p2 and icmp_ln93_1_fu_1290_p2);

    retval_0_0_0_0_0_load90_out_assign_proc : process(icmp_ln69_reg_2225, retval_0_0_0_0_0_load_2_reg_2478, ap_CS_fsm_state20, ap_CS_fsm_state19, retval_0_0_0_0_0_load90_fu_288)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            retval_0_0_0_0_0_load90_out <= retval_0_0_0_0_0_load90_fu_288;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            retval_0_0_0_0_0_load90_out <= retval_0_0_0_0_0_load_2_reg_2478;
        else 
            retval_0_0_0_0_0_load90_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    retval_0_0_0_0_0_load90_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            retval_0_0_0_0_0_load90_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_0_0_0_0_load90_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    retval_0_0_0_0_0_load_fu_1859_p7 <= "XXXXXXXXXXXXXXXX";
    retval_0_0_0_0_0_load_fu_1859_p8 <= (and_ln94_5_fu_1841_p2 & and_ln96_7_fu_1846_p2);
    retval_0_0_0_0_0_load_out <= retval_0_0_0_0_0_load_reg_2513;

    retval_0_0_0_0_0_load_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            retval_0_0_0_0_0_load_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_0_0_0_0_load_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    retval_0_1_0_0_0_load96_out_assign_proc : process(icmp_ln69_reg_2225, retval_0_1_0_0_0_load_2_reg_2483, ap_CS_fsm_state20, ap_CS_fsm_state19, retval_0_1_0_0_0_load96_fu_292)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            retval_0_1_0_0_0_load96_out <= retval_0_1_0_0_0_load96_fu_292;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            retval_0_1_0_0_0_load96_out <= retval_0_1_0_0_0_load_2_reg_2483;
        else 
            retval_0_1_0_0_0_load96_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    retval_0_1_0_0_0_load96_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            retval_0_1_0_0_0_load96_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_1_0_0_0_load96_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    retval_0_1_0_0_0_load_fu_1816_p7 <= "XXXXXXXXXXXXXXXX";
    retval_0_1_0_0_0_load_fu_1816_p8 <= (and_ln94_4_fu_1798_p2 & and_ln96_6_fu_1803_p2);
    retval_0_1_0_0_0_load_out <= retval_0_1_0_0_0_load_reg_2508;

    retval_0_1_0_0_0_load_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            retval_0_1_0_0_0_load_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_1_0_0_0_load_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    retval_0_2_0_0_0_load102_out_assign_proc : process(icmp_ln69_reg_2225, retval_0_2_0_0_0_load_2_reg_2488, ap_CS_fsm_state20, ap_CS_fsm_state19, retval_0_2_0_0_0_load102_fu_296)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            retval_0_2_0_0_0_load102_out <= retval_0_2_0_0_0_load102_fu_296;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            retval_0_2_0_0_0_load102_out <= retval_0_2_0_0_0_load_2_reg_2488;
        else 
            retval_0_2_0_0_0_load102_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    retval_0_2_0_0_0_load102_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            retval_0_2_0_0_0_load102_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_2_0_0_0_load102_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    retval_0_2_0_0_0_load_fu_1773_p7 <= "XXXXXXXXXXXXXXXX";
    retval_0_2_0_0_0_load_fu_1773_p8 <= (and_ln94_3_fu_1755_p2 & and_ln96_5_fu_1760_p2);
    retval_0_2_0_0_0_load_out <= retval_0_2_0_0_0_load_reg_2503;

    retval_0_2_0_0_0_load_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            retval_0_2_0_0_0_load_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_2_0_0_0_load_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    retval_0_3_0_0_0_load108_out_assign_proc : process(icmp_ln69_reg_2225, retval_0_3_0_0_0_load_2_reg_2493, ap_CS_fsm_state20, ap_CS_fsm_state19, retval_0_3_0_0_0_load108_fu_300)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            retval_0_3_0_0_0_load108_out <= retval_0_3_0_0_0_load108_fu_300;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            retval_0_3_0_0_0_load108_out <= retval_0_3_0_0_0_load_2_reg_2493;
        else 
            retval_0_3_0_0_0_load108_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    retval_0_3_0_0_0_load108_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            retval_0_3_0_0_0_load108_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_3_0_0_0_load108_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    retval_0_3_0_0_0_load_fu_1730_p7 <= "XXXXXXXXXXXXXXXX";
    retval_0_3_0_0_0_load_fu_1730_p8 <= (and_ln94_2_fu_1699_p2 & and_ln96_4_fu_1717_p2);
    retval_0_3_0_0_0_load_out <= retval_0_3_0_0_0_load_reg_2498;

    retval_0_3_0_0_0_load_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            retval_0_3_0_0_0_load_out_ap_vld <= ap_const_logic_1;
        else 
            retval_0_3_0_0_0_load_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln93_1_fu_1496_p3 <= 
        ap_const_lv11_3FF when (tmp_10_fu_1488_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln93_fu_1228_p3 <= 
        sub_ln93_fu_1223_p2 when (tmp_6_reg_2338(0) = '1') else 
        output_2_reg_2330;
    sext_ln114_fu_1208_p0 <= grp_model_array_fu_816_ap_return_0;
        sext_ln114_fu_1208_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln114_fu_1208_p0),17));

        sext_ln93_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_1244_p3),32));

    shl_ln93_fu_1454_p2 <= std_logic_vector(shift_left(unsigned(zext_ln93_reg_2391),to_integer(unsigned('0' & zext_ln93_2_fu_1450_p1(31-1 downto 0)))));
    sub_ln112_fu_1385_p2 <= std_logic_vector(signed(output_2_reg_2330) - signed(zext_ln112_fu_1382_p1));
    sub_ln114_1_fu_1393_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(zext_ln114_1_fu_1390_p1));
    sub_ln114_fu_1212_p2 <= std_logic_vector(unsigned(zext_ln114_fu_1204_p1) - unsigned(sext_ln114_fu_1208_p1));
    sub_ln93_1_fu_1268_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) - unsigned(tmp_5_fu_1256_p3));
    sub_ln93_2_fu_1445_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln93_1_reg_2375));
    sub_ln93_3_fu_1504_p2 <= std_logic_vector(unsigned(ap_const_lv11_4) - unsigned(trunc_ln93_reg_2370));
    sub_ln93_4_fu_1300_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) - unsigned(trunc_ln93_2_fu_1296_p1));
    sub_ln93_fu_1223_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(output_2_reg_2330));
    tmp_10_fu_1488_p3 <= add_ln93_2_fu_1468_p2(54 downto 54);
    
    tmp_3_fu_1234_p4_proc : process(select_ln93_fu_1228_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_3_fu_1234_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := select_ln93_fu_1228_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for tmp_3_fu_1234_p4_i in 0 to 16-1 loop
                v0_cpy(tmp_3_fu_1234_p4_i) := select_ln93_fu_1228_p3(16-1-tmp_3_fu_1234_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_3_fu_1234_p4 <= resvalue(16-1 downto 0);
    end process;

    tmp_4_fu_1244_p3 <= (ap_const_lv1_1 & tmp_3_fu_1234_p4);
    
    tmp_5_fu_1256_p3_proc : process(sext_ln93_fu_1252_p1)
    begin
        tmp_5_fu_1256_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln93_fu_1252_p1(i) = '1' then
                tmp_5_fu_1256_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    tmp_6_fu_1167_p1 <= grp_model_array_fu_816_ap_return_0;
    tmp_7_fu_1280_p4 <= add_ln93_fu_1274_p2(31 downto 1);
    tmp_8_fu_1334_p3 <= add_ln93_fu_1274_p2(31 downto 31);
    tmp_9_fu_1348_p3 <= select_ln93_fu_1228_p3(to_integer(unsigned(add_ln93_fu_1274_p2)) downto to_integer(unsigned(add_ln93_fu_1274_p2))) when (to_integer(unsigned(add_ln93_fu_1274_p2)) >= 0 and to_integer(unsigned(add_ln93_fu_1274_p2)) <=15) else "-";
    tmp_s_fu_1515_p3 <= (tmp_6_reg_2338 & add_ln93_3_fu_1509_p2);
    trunc_ln3_fu_1409_p4 <= mul_ln114_fu_1403_p2(27 downto 12);
    trunc_ln69_fu_1078_p1 <= j_1_reg_2214(2 - 1 downto 0);
    trunc_ln93_1_fu_1534_p4 <= add_ln93_2_fu_1468_p2(52 downto 1);
    trunc_ln93_2_fu_1296_p1 <= sub_ln93_1_fu_1268_p2(4 - 1 downto 0);
    trunc_ln93_fu_1264_p1 <= tmp_5_fu_1256_p3(11 - 1 downto 0);

    w1_local_163_out_assign_proc : process(icmp_ln69_reg_2225, w1_local_163_load_1_reg_2245, ap_CS_fsm_state20, ap_CS_fsm_state19, w1_local_163_fu_336)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            w1_local_163_out <= w1_local_163_fu_336;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            w1_local_163_out <= w1_local_163_load_1_reg_2245;
        else 
            w1_local_163_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w1_local_163_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            w1_local_163_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_163_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w1_local_1_1_out_assign_proc : process(icmp_ln69_reg_2225, w1_local_1_1_load_1_reg_2251, ap_CS_fsm_state20, ap_CS_fsm_state19, w1_local_1_1_fu_340)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            w1_local_1_1_out <= w1_local_1_1_fu_340;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            w1_local_1_1_out <= w1_local_1_1_load_1_reg_2251;
        else 
            w1_local_1_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w1_local_1_1_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            w1_local_1_1_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_1_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w1_local_2_1_out_assign_proc : process(icmp_ln69_reg_2225, w1_local_2_1_load_1_reg_2257, ap_CS_fsm_state20, ap_CS_fsm_state19, w1_local_2_1_fu_344)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            w1_local_2_1_out <= w1_local_2_1_fu_344;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            w1_local_2_1_out <= w1_local_2_1_load_1_reg_2257;
        else 
            w1_local_2_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w1_local_2_1_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            w1_local_2_1_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_2_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w1_local_3_1_out_assign_proc : process(icmp_ln69_reg_2225, w1_local_3_1_load_1_reg_2263, ap_CS_fsm_state20, ap_CS_fsm_state19, w1_local_3_1_fu_348)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            w1_local_3_1_out <= w1_local_3_1_fu_348;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            w1_local_3_1_out <= w1_local_3_1_load_1_reg_2263;
        else 
            w1_local_3_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w1_local_3_1_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            w1_local_3_1_out_ap_vld <= ap_const_logic_1;
        else 
            w1_local_3_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_165_out_assign_proc : process(icmp_ln69_reg_2225, w2_local_165_load_1_reg_2306, ap_CS_fsm_state20, ap_CS_fsm_state19, w2_local_165_fu_352)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            w2_local_165_out <= w2_local_165_fu_352;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            w2_local_165_out <= w2_local_165_load_1_reg_2306;
        else 
            w2_local_165_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w2_local_165_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            w2_local_165_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_165_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_1_1_out_assign_proc : process(icmp_ln69_reg_2225, w2_local_1_1_load_1_reg_2312, ap_CS_fsm_state20, ap_CS_fsm_state19, w2_local_1_1_fu_356)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            w2_local_1_1_out <= w2_local_1_1_fu_356;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            w2_local_1_1_out <= w2_local_1_1_load_1_reg_2312;
        else 
            w2_local_1_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w2_local_1_1_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            w2_local_1_1_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_1_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_2_1_out_assign_proc : process(icmp_ln69_reg_2225, w2_local_2_1_load_1_reg_2318, ap_CS_fsm_state20, ap_CS_fsm_state19, w2_local_2_1_fu_360)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            w2_local_2_1_out <= w2_local_2_1_fu_360;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            w2_local_2_1_out <= w2_local_2_1_load_1_reg_2318;
        else 
            w2_local_2_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w2_local_2_1_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            w2_local_2_1_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_2_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    w2_local_3_1_out_assign_proc : process(icmp_ln69_reg_2225, w2_local_3_1_load_1_reg_2324, ap_CS_fsm_state20, ap_CS_fsm_state19, w2_local_3_1_fu_364)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            w2_local_3_1_out <= w2_local_3_1_fu_364;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0))) then 
            w2_local_3_1_out <= w2_local_3_1_load_1_reg_2324;
        else 
            w2_local_3_1_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    w2_local_3_1_out_ap_vld_assign_proc : process(icmp_ln69_reg_2225, ap_CS_fsm_state20, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln69_reg_2225 = ap_const_lv1_0)))) then 
            w2_local_3_1_out_ap_vld <= ap_const_logic_1;
        else 
            w2_local_3_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln93_1_fu_1342_p2 <= (tmp_8_fu_1334_p3 xor ap_const_lv1_1);
    xor_ln93_fu_1633_p2 <= (icmp_ln93_reg_2359 xor ap_const_lv1_1);
    xor_ln96_fu_1644_p2 <= (ap_const_lv1_1 xor and_ln93_1_fu_1624_p2);
    zext_ln112_fu_1382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln114_cast1_reg_2349),16));
    zext_ln114_1_fu_1390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln114_reg_2354),18));
    zext_ln114_cast1_fu_1181_p9 <= "XXXXXXXXXXXXX";
    zext_ln114_fu_1204_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln114_cast1_fu_1181_p11),17));
    zext_ln73_cast_fu_1081_p9 <= "XXXXXXXXXXXXX";
    zext_ln73_fu_1105_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln73_cast_fu_1081_p11),16));
    zext_ln83_cast_fu_1110_p9 <= "XXXXXXXXXXXXX";
    zext_ln83_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln83_cast_fu_1110_p11),16));
    zext_ln93_1_fu_1435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln93_1_fu_1430_p2),64));
    zext_ln93_2_fu_1450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln93_2_fu_1445_p2),64));
    zext_ln93_3_fu_1465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_reg_2381),64));
    zext_ln93_4_fu_1484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln93_1_fu_1474_p4),64));
    zext_ln93_5_fu_1306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln93_4_fu_1300_p2),16));
    zext_ln93_fu_1427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln93_reg_2365),64));
end behav;
