// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module accelerator_accelerator_Pipeline_VITIS_LOOP_69_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        w2_local_3_0,
        w2_local_2_0,
        w2_local_1_0,
        w2_local_0,
        w1_local_3_0,
        w1_local_2_0,
        w1_local_1_0,
        w1_local_0,
        mux_case_17944,
        mux_case_07840,
        mux_case_17736,
        mux_case_07632,
        mux_case_17528,
        mux_case_07424,
        mux_case_17320,
        mux_case_07216,
        retval_0_3_0_0_0_load109,
        retval_0_2_0_0_0_load103,
        retval_0_1_0_0_0_load97,
        retval_0_0_0_0_0_load91,
        p_0_0_01385_1_lcssa31,
        p_0_0_01385_lcssa29,
        p_0_0_01382_1_lcssa27,
        p_0_0_01382_lcssa25,
        training,
        cmp_i_i113,
        w2_local_3_1_out,
        w2_local_3_1_out_ap_vld,
        w2_local_2_1_out,
        w2_local_2_1_out_ap_vld,
        w2_local_1_1_out,
        w2_local_1_1_out_ap_vld,
        w2_local_165_out,
        w2_local_165_out_ap_vld,
        w1_local_3_1_out,
        w1_local_3_1_out_ap_vld,
        w1_local_2_1_out,
        w1_local_2_1_out_ap_vld,
        w1_local_1_1_out,
        w1_local_1_1_out_ap_vld,
        w1_local_163_out,
        w1_local_163_out_ap_vld,
        mux_case_17943_out,
        mux_case_17943_out_ap_vld,
        mux_case_07839_out,
        mux_case_07839_out_ap_vld,
        mux_case_17735_out,
        mux_case_17735_out_ap_vld,
        mux_case_07631_out,
        mux_case_07631_out_ap_vld,
        mux_case_17527_out,
        mux_case_17527_out_ap_vld,
        mux_case_07423_out,
        mux_case_07423_out_ap_vld,
        mux_case_17319_out,
        mux_case_17319_out_ap_vld,
        mux_case_07215_out,
        mux_case_07215_out_ap_vld,
        retval_0_3_0_0_0_load108_out,
        retval_0_3_0_0_0_load108_out_ap_vld,
        retval_0_2_0_0_0_load102_out,
        retval_0_2_0_0_0_load102_out_ap_vld,
        retval_0_1_0_0_0_load96_out,
        retval_0_1_0_0_0_load96_out_ap_vld,
        retval_0_0_0_0_0_load90_out,
        retval_0_0_0_0_0_load90_out_ap_vld,
        bias_2_local_idx4_val23_out,
        bias_2_local_idx4_val23_out_ap_vld,
        bias_2_local_idx_val22_out,
        bias_2_local_idx_val22_out_ap_vld,
        bias_1_local_idx1_val21_out,
        bias_1_local_idx1_val21_out_ap_vld,
        bias_1_local_idx_val20_out,
        bias_1_local_idx_val20_out_ap_vld,
        retval_0_3_0_0_0_load_out,
        retval_0_3_0_0_0_load_out_ap_vld,
        retval_0_2_0_0_0_load_out,
        retval_0_2_0_0_0_load_out_ap_vld,
        retval_0_1_0_0_0_load_out,
        retval_0_1_0_0_0_load_out_ap_vld,
        retval_0_0_0_0_0_load_out,
        retval_0_0_0_0_0_load_out_ap_vld,
        array_back2_weight_changes_out,
        array_back2_weight_changes_out_ap_vld,
        array_back2_weight_changes_4_out,
        array_back2_weight_changes_4_out_ap_vld,
        array_back2_weight_changes_5_out,
        array_back2_weight_changes_5_out_ap_vld,
        array_back2_weight_changes_6_out,
        array_back2_weight_changes_6_out_ap_vld,
        array_back2_bias_change_out,
        array_back2_bias_change_out_ap_vld,
        array_back2_bias_change_2_out,
        array_back2_bias_change_2_out_ap_vld,
        array_back1_weight_changes_out,
        array_back1_weight_changes_out_ap_vld,
        array_back1_weight_changes_4_out,
        array_back1_weight_changes_4_out_ap_vld,
        array_back1_weight_changes_5_out,
        array_back1_weight_changes_5_out_ap_vld,
        array_back1_weight_changes_6_out,
        array_back1_weight_changes_6_out_ap_vld,
        array_back1_bias_change_out,
        array_back1_bias_change_out_ap_vld,
        array_back1_bias_change_2_out,
        array_back1_bias_change_2_out_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_pp0_stage0 = 19'd2;
parameter    ap_ST_fsm_pp0_stage1 = 19'd4;
parameter    ap_ST_fsm_pp0_stage2 = 19'd8;
parameter    ap_ST_fsm_pp0_stage3 = 19'd16;
parameter    ap_ST_fsm_pp0_stage4 = 19'd32;
parameter    ap_ST_fsm_pp0_stage5 = 19'd64;
parameter    ap_ST_fsm_pp0_stage6 = 19'd128;
parameter    ap_ST_fsm_pp0_stage7 = 19'd256;
parameter    ap_ST_fsm_pp0_stage8 = 19'd512;
parameter    ap_ST_fsm_pp0_stage9 = 19'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 19'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 19'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 19'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 19'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 19'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 19'd65536;
parameter    ap_ST_fsm_state19 = 19'd131072;
parameter    ap_ST_fsm_state20 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] w2_local_3_0;
input  [15:0] w2_local_2_0;
input  [15:0] w2_local_1_0;
input  [15:0] w2_local_0;
input  [15:0] w1_local_3_0;
input  [15:0] w1_local_2_0;
input  [15:0] w1_local_1_0;
input  [15:0] w1_local_0;
input  [15:0] mux_case_17944;
input  [15:0] mux_case_07840;
input  [15:0] mux_case_17736;
input  [15:0] mux_case_07632;
input  [15:0] mux_case_17528;
input  [15:0] mux_case_07424;
input  [15:0] mux_case_17320;
input  [15:0] mux_case_07216;
input  [15:0] retval_0_3_0_0_0_load109;
input  [15:0] retval_0_2_0_0_0_load103;
input  [15:0] retval_0_1_0_0_0_load97;
input  [15:0] retval_0_0_0_0_0_load91;
input  [15:0] p_0_0_01385_1_lcssa31;
input  [15:0] p_0_0_01385_lcssa29;
input  [15:0] p_0_0_01382_1_lcssa27;
input  [15:0] p_0_0_01382_lcssa25;
input  [15:0] training;
input  [0:0] cmp_i_i113;
output  [15:0] w2_local_3_1_out;
output   w2_local_3_1_out_ap_vld;
output  [15:0] w2_local_2_1_out;
output   w2_local_2_1_out_ap_vld;
output  [15:0] w2_local_1_1_out;
output   w2_local_1_1_out_ap_vld;
output  [15:0] w2_local_165_out;
output   w2_local_165_out_ap_vld;
output  [15:0] w1_local_3_1_out;
output   w1_local_3_1_out_ap_vld;
output  [15:0] w1_local_2_1_out;
output   w1_local_2_1_out_ap_vld;
output  [15:0] w1_local_1_1_out;
output   w1_local_1_1_out_ap_vld;
output  [15:0] w1_local_163_out;
output   w1_local_163_out_ap_vld;
output  [15:0] mux_case_17943_out;
output   mux_case_17943_out_ap_vld;
output  [15:0] mux_case_07839_out;
output   mux_case_07839_out_ap_vld;
output  [15:0] mux_case_17735_out;
output   mux_case_17735_out_ap_vld;
output  [15:0] mux_case_07631_out;
output   mux_case_07631_out_ap_vld;
output  [15:0] mux_case_17527_out;
output   mux_case_17527_out_ap_vld;
output  [15:0] mux_case_07423_out;
output   mux_case_07423_out_ap_vld;
output  [15:0] mux_case_17319_out;
output   mux_case_17319_out_ap_vld;
output  [15:0] mux_case_07215_out;
output   mux_case_07215_out_ap_vld;
output  [15:0] retval_0_3_0_0_0_load108_out;
output   retval_0_3_0_0_0_load108_out_ap_vld;
output  [15:0] retval_0_2_0_0_0_load102_out;
output   retval_0_2_0_0_0_load102_out_ap_vld;
output  [15:0] retval_0_1_0_0_0_load96_out;
output   retval_0_1_0_0_0_load96_out_ap_vld;
output  [15:0] retval_0_0_0_0_0_load90_out;
output   retval_0_0_0_0_0_load90_out_ap_vld;
output  [15:0] bias_2_local_idx4_val23_out;
output   bias_2_local_idx4_val23_out_ap_vld;
output  [15:0] bias_2_local_idx_val22_out;
output   bias_2_local_idx_val22_out_ap_vld;
output  [15:0] bias_1_local_idx1_val21_out;
output   bias_1_local_idx1_val21_out_ap_vld;
output  [15:0] bias_1_local_idx_val20_out;
output   bias_1_local_idx_val20_out_ap_vld;
output  [15:0] retval_0_3_0_0_0_load_out;
output   retval_0_3_0_0_0_load_out_ap_vld;
output  [15:0] retval_0_2_0_0_0_load_out;
output   retval_0_2_0_0_0_load_out_ap_vld;
output  [15:0] retval_0_1_0_0_0_load_out;
output   retval_0_1_0_0_0_load_out_ap_vld;
output  [15:0] retval_0_0_0_0_0_load_out;
output   retval_0_0_0_0_0_load_out_ap_vld;
output  [15:0] array_back2_weight_changes_out;
output   array_back2_weight_changes_out_ap_vld;
output  [15:0] array_back2_weight_changes_4_out;
output   array_back2_weight_changes_4_out_ap_vld;
output  [15:0] array_back2_weight_changes_5_out;
output   array_back2_weight_changes_5_out_ap_vld;
output  [15:0] array_back2_weight_changes_6_out;
output   array_back2_weight_changes_6_out_ap_vld;
output  [15:0] array_back2_bias_change_out;
output   array_back2_bias_change_out_ap_vld;
output  [15:0] array_back2_bias_change_2_out;
output   array_back2_bias_change_2_out_ap_vld;
output  [15:0] array_back1_weight_changes_out;
output   array_back1_weight_changes_out_ap_vld;
output  [15:0] array_back1_weight_changes_4_out;
output   array_back1_weight_changes_4_out_ap_vld;
output  [15:0] array_back1_weight_changes_5_out;
output   array_back1_weight_changes_5_out_ap_vld;
output  [15:0] array_back1_weight_changes_6_out;
output   array_back1_weight_changes_6_out_ap_vld;
output  [15:0] array_back1_bias_change_out;
output   array_back1_bias_change_out_ap_vld;
output  [15:0] array_back1_bias_change_2_out;
output   array_back1_bias_change_2_out_ap_vld;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] w2_local_3_1_out;
reg w2_local_3_1_out_ap_vld;
reg[15:0] w2_local_2_1_out;
reg w2_local_2_1_out_ap_vld;
reg[15:0] w2_local_1_1_out;
reg w2_local_1_1_out_ap_vld;
reg[15:0] w2_local_165_out;
reg w2_local_165_out_ap_vld;
reg[15:0] w1_local_3_1_out;
reg w1_local_3_1_out_ap_vld;
reg[15:0] w1_local_2_1_out;
reg w1_local_2_1_out_ap_vld;
reg[15:0] w1_local_1_1_out;
reg w1_local_1_1_out_ap_vld;
reg[15:0] w1_local_163_out;
reg w1_local_163_out_ap_vld;
reg mux_case_17943_out_ap_vld;
reg mux_case_07839_out_ap_vld;
reg mux_case_17735_out_ap_vld;
reg mux_case_07631_out_ap_vld;
reg mux_case_17527_out_ap_vld;
reg mux_case_07423_out_ap_vld;
reg mux_case_17319_out_ap_vld;
reg mux_case_07215_out_ap_vld;
reg[15:0] retval_0_3_0_0_0_load108_out;
reg retval_0_3_0_0_0_load108_out_ap_vld;
reg[15:0] retval_0_2_0_0_0_load102_out;
reg retval_0_2_0_0_0_load102_out_ap_vld;
reg[15:0] retval_0_1_0_0_0_load96_out;
reg retval_0_1_0_0_0_load96_out_ap_vld;
reg[15:0] retval_0_0_0_0_0_load90_out;
reg retval_0_0_0_0_0_load90_out_ap_vld;
reg[15:0] bias_2_local_idx4_val23_out;
reg bias_2_local_idx4_val23_out_ap_vld;
reg[15:0] bias_2_local_idx_val22_out;
reg bias_2_local_idx_val22_out_ap_vld;
reg[15:0] bias_1_local_idx1_val21_out;
reg bias_1_local_idx1_val21_out_ap_vld;
reg[15:0] bias_1_local_idx_val20_out;
reg bias_1_local_idx_val20_out_ap_vld;
reg retval_0_3_0_0_0_load_out_ap_vld;
reg retval_0_2_0_0_0_load_out_ap_vld;
reg retval_0_1_0_0_0_load_out_ap_vld;
reg retval_0_0_0_0_0_load_out_ap_vld;
reg array_back2_weight_changes_out_ap_vld;
reg array_back2_weight_changes_4_out_ap_vld;
reg array_back2_weight_changes_5_out_ap_vld;
reg array_back2_weight_changes_6_out_ap_vld;
reg array_back2_bias_change_out_ap_vld;
reg array_back2_bias_change_2_out_ap_vld;
reg array_back1_weight_changes_out_ap_vld;
reg array_back1_weight_changes_4_out_ap_vld;
reg array_back1_weight_changes_5_out_ap_vld;
reg array_back1_weight_changes_6_out_ap_vld;
reg array_back1_bias_change_out_ap_vld;
reg array_back1_bias_change_2_out_ap_vld;
reg[0:0] ap_return;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] j_1_reg_2214;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln69_fu_1026_p2;
reg   [0:0] icmp_ln69_reg_2225;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] and_ln144_fu_1044_p2;
reg   [0:0] and_ln144_reg_2229;
reg   [15:0] bias_1_local_idx_val20_load_1_reg_2233;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg   [15:0] bias_1_local_idx1_val21_load_1_reg_2239;
reg   [15:0] w1_local_163_load_1_reg_2245;
reg   [15:0] w1_local_1_1_load_1_reg_2251;
reg   [15:0] w1_local_2_1_load_1_reg_2257;
reg   [15:0] w1_local_3_1_load_1_reg_2263;
wire   [1:0] trunc_ln69_fu_1078_p1;
reg   [1:0] trunc_ln69_reg_2269;
wire   [15:0] zext_ln73_fu_1105_p1;
reg   [15:0] zext_ln73_reg_2274;
wire   [15:0] zext_ln83_fu_1134_p1;
reg   [15:0] zext_ln83_reg_2279;
reg   [15:0] array_out1_output_k_reg_2284;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
reg   [15:0] array_out1_output_k_1_reg_2289;
reg   [15:0] bias_2_local_idx_val22_load_1_reg_2294;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
reg   [15:0] bias_2_local_idx4_val23_load_1_reg_2300;
reg   [15:0] w2_local_165_load_1_reg_2306;
reg   [15:0] w2_local_1_1_load_1_reg_2312;
reg   [15:0] w2_local_2_1_load_1_reg_2318;
reg   [15:0] w2_local_3_1_load_1_reg_2324;
reg  signed [15:0] output_2_reg_2330;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_11001;
reg   [0:0] tmp_6_reg_2338;
wire   [0:0] icmp_ln111_fu_1175_p2;
reg   [0:0] icmp_ln111_reg_2344;
wire   [12:0] zext_ln114_cast1_fu_1181_p11;
reg   [12:0] zext_ln114_cast1_reg_2349;
wire   [16:0] sub_ln114_fu_1212_p2;
reg   [16:0] sub_ln114_reg_2354;
wire   [0:0] icmp_ln93_fu_1218_p2;
reg   [0:0] icmp_ln93_reg_2359;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_11001;
wire   [15:0] select_ln93_fu_1228_p3;
reg   [15:0] select_ln93_reg_2365;
wire   [10:0] trunc_ln93_fu_1264_p1;
reg   [10:0] trunc_ln93_reg_2370;
wire   [31:0] sub_ln93_1_fu_1268_p2;
reg   [31:0] sub_ln93_1_reg_2375;
wire   [1:0] or_ln_fu_1368_p3;
reg   [1:0] or_ln_reg_2381;
wire   [0:0] icmp_ln93_3_fu_1376_p2;
reg   [0:0] icmp_ln93_3_reg_2386;
wire   [63:0] zext_ln93_fu_1427_p1;
reg   [63:0] zext_ln93_reg_2391;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_11001;
wire   [63:0] lshr_ln93_fu_1439_p2;
reg   [63:0] lshr_ln93_reg_2396;
wire   [63:0] LD_fu_1522_p5;
reg   [63:0] LD_reg_2401;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11_11001;
wire   [0:0] or_ln93_1_fu_1556_p2;
reg   [0:0] or_ln93_1_reg_2406;
wire   [63:0] bitcast_ln748_fu_1562_p1;
reg   [63:0] bitcast_ln748_reg_2412;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12_11001;
reg   [15:0] array_back2_delta_kmin1_reg_2417;
reg   [15:0] array_back2_delta_kmin1_1_reg_2422;
reg   [15:0] array_back2_weight_changes_reg_2427;
reg   [15:0] array_back2_weight_changes_4_reg_2432;
reg   [15:0] array_back2_weight_changes_5_reg_2437;
reg   [15:0] array_back2_weight_changes_6_reg_2442;
reg   [15:0] array_back2_bias_change_reg_2447;
reg   [15:0] array_back2_bias_change_1_reg_2452;
wire   [0:0] grp_fu_833_p2;
reg   [0:0] tmp_reg_2457;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13_11001;
wire   [0:0] and_ln93_2_fu_1638_p2;
reg   [0:0] and_ln93_2_reg_2462;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14_11001;
wire   [0:0] or_ln96_fu_1656_p2;
reg   [0:0] or_ln96_reg_2470;
reg   [15:0] retval_0_0_0_0_0_load_2_reg_2478;
reg    ap_enable_reg_pp0_iter1;
reg   [15:0] retval_0_1_0_0_0_load_2_reg_2483;
reg   [15:0] retval_0_2_0_0_0_load_2_reg_2488;
reg   [15:0] retval_0_3_0_0_0_load_2_reg_2493;
wire   [15:0] retval_0_3_0_0_0_load_fu_1730_p9;
reg   [15:0] retval_0_3_0_0_0_load_reg_2498;
wire   [15:0] retval_0_2_0_0_0_load_fu_1773_p9;
reg   [15:0] retval_0_2_0_0_0_load_reg_2503;
wire   [15:0] retval_0_1_0_0_0_load_fu_1816_p9;
reg   [15:0] retval_0_1_0_0_0_load_reg_2508;
wire   [15:0] retval_0_0_0_0_0_load_fu_1859_p9;
reg   [15:0] retval_0_0_0_0_0_load_reg_2513;
reg   [15:0] array_back1_weight_changes_reg_2518;
reg   [15:0] array_back1_weight_changes_4_reg_2523;
reg   [15:0] array_back1_weight_changes_5_reg_2528;
reg   [15:0] array_back1_weight_changes_6_reg_2533;
reg   [15:0] array_back1_bias_change_reg_2538;
reg   [15:0] array_back1_bias_change_1_reg_2543;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15_subdone;
reg    ap_predicate_tran18to19_state17;
reg    ap_condition_pp0_flush_enable;
wire    ap_block_pp0_stage0_subdone;
wire    grp_model_array_fu_816_ap_start;
wire    grp_model_array_fu_816_ap_done;
wire    grp_model_array_fu_816_ap_idle;
wire    grp_model_array_fu_816_ap_ready;
reg   [15:0] grp_model_array_fu_816_p_read10;
reg   [15:0] grp_model_array_fu_816_p_read29;
reg   [15:0] grp_model_array_fu_816_p_read30;
reg   [15:0] grp_model_array_fu_816_p_read31;
reg   [15:0] grp_model_array_fu_816_biases_0_0_val;
reg   [15:0] grp_model_array_fu_816_biases_0_1_val;
reg   [15:0] grp_model_array_fu_816_output_kmin1_0_0_val;
reg   [15:0] grp_model_array_fu_816_output_kmin1_0_1_val;
reg   [15:0] grp_model_array_fu_816_delta_k_0_0_val;
reg   [15:0] grp_model_array_fu_816_delta_k_0_1_val;
wire   [15:0] grp_model_array_fu_816_ap_return_0;
wire   [15:0] grp_model_array_fu_816_ap_return_1;
wire   [15:0] grp_model_array_fu_816_ap_return_2;
wire   [15:0] grp_model_array_fu_816_ap_return_3;
wire   [15:0] grp_model_array_fu_816_ap_return_4;
wire   [15:0] grp_model_array_fu_816_ap_return_5;
wire   [15:0] grp_model_array_fu_816_ap_return_6;
wire   [15:0] grp_model_array_fu_816_ap_return_7;
wire   [15:0] grp_model_array_fu_816_ap_return_8;
wire   [15:0] grp_model_array_fu_816_ap_return_9;
reg   [0:0] ap_phi_mux_UnifiedRetVal_phi_fu_808_p4;
reg   [0:0] UnifiedRetVal_reg_804;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state19;
reg    grp_model_array_fu_816_ap_start_reg;
wire    ap_block_pp0_stage1_ignoreCallOp117;
wire    ap_block_pp0_stage5_ignoreCallOp129;
wire    ap_block_pp0_stage9_ignoreCallOp174;
wire    ap_block_pp0_stage13_ignoreCallOp222;
wire   [15:0] conv_i_i_i15419_fu_1419_p3;
reg   [2:0] j_fu_268;
wire   [2:0] add_ln69_fu_1032_p2;
wire    ap_block_pp0_stage0;
reg   [15:0] bias_1_local_idx_val20_fu_272;
wire    ap_block_pp0_stage1;
reg   [15:0] bias_1_local_idx1_val21_fu_276;
reg   [15:0] bias_2_local_idx_val22_fu_280;
wire    ap_block_pp0_stage5;
reg   [15:0] bias_2_local_idx4_val23_fu_284;
reg   [15:0] retval_0_0_0_0_0_load90_fu_288;
reg   [15:0] retval_0_1_0_0_0_load96_fu_292;
reg   [15:0] retval_0_2_0_0_0_load102_fu_296;
reg   [15:0] retval_0_3_0_0_0_load108_fu_300;
reg   [15:0] mux_case_07215_fu_304;
reg   [15:0] mux_case_17319_fu_308;
reg   [15:0] mux_case_07423_fu_312;
reg   [15:0] mux_case_17527_fu_316;
reg   [15:0] mux_case_07631_fu_320;
reg   [15:0] mux_case_17735_fu_324;
reg   [15:0] mux_case_07839_fu_328;
reg   [15:0] mux_case_17943_fu_332;
reg   [15:0] w1_local_163_fu_336;
reg   [15:0] w1_local_1_1_fu_340;
reg   [15:0] w1_local_2_1_fu_344;
reg   [15:0] w1_local_3_1_fu_348;
reg   [15:0] w2_local_165_fu_352;
reg   [15:0] w2_local_1_1_fu_356;
reg   [15:0] w2_local_2_1_fu_360;
reg   [15:0] w2_local_3_1_fu_364;
reg   [63:0] grp_fu_833_p0;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage8;
wire   [0:0] icmp_ln144_fu_1038_p2;
wire   [12:0] zext_ln73_cast_fu_1081_p9;
wire   [12:0] zext_ln73_cast_fu_1081_p11;
wire   [12:0] zext_ln83_cast_fu_1110_p9;
wire   [12:0] zext_ln83_cast_fu_1110_p11;
wire  signed [15:0] tmp_6_fu_1167_p1;
wire  signed [15:0] icmp_ln111_fu_1175_p0;
wire   [12:0] zext_ln114_cast1_fu_1181_p9;
wire  signed [15:0] sext_ln114_fu_1208_p0;
wire   [16:0] zext_ln114_fu_1204_p1;
wire  signed [16:0] sext_ln114_fu_1208_p1;
wire    ap_block_pp0_stage9;
wire   [15:0] sub_ln93_fu_1223_p2;
reg   [15:0] tmp_3_fu_1234_p4;
wire   [16:0] tmp_4_fu_1244_p3;
wire  signed [31:0] sext_ln93_fu_1252_p1;
reg   [31:0] tmp_5_fu_1256_p3;
wire   [31:0] add_ln93_fu_1274_p2;
wire   [30:0] tmp_7_fu_1280_p4;
wire   [3:0] trunc_ln93_2_fu_1296_p1;
wire   [3:0] sub_ln93_4_fu_1300_p2;
wire   [15:0] zext_ln93_5_fu_1306_p1;
wire   [15:0] lshr_ln93_2_fu_1310_p2;
wire   [15:0] and_ln93_3_fu_1316_p2;
wire   [0:0] icmp_ln93_1_fu_1290_p2;
wire   [0:0] icmp_ln93_2_fu_1322_p2;
wire   [0:0] tmp_8_fu_1334_p3;
wire   [0:0] tmp_9_fu_1348_p3;
wire   [0:0] xor_ln93_1_fu_1342_p2;
wire   [0:0] and_ln93_fu_1356_p2;
wire   [0:0] phi_ln93_fu_1328_p2;
wire   [0:0] or_ln93_fu_1362_p2;
wire   [15:0] zext_ln112_fu_1382_p1;
wire   [17:0] zext_ln114_1_fu_1390_p1;
wire  signed [17:0] sub_ln114_1_fu_1393_p2;
wire   [9:0] mul_ln114_fu_1403_p1;
wire   [27:0] mul_ln114_fu_1403_p2;
wire   [15:0] sub_ln112_fu_1385_p2;
wire   [15:0] trunc_ln3_fu_1409_p4;
wire    ap_block_pp0_stage10;
wire   [31:0] add_ln93_1_fu_1430_p2;
wire   [63:0] zext_ln93_1_fu_1435_p1;
wire    ap_block_pp0_stage11;
wire   [31:0] sub_ln93_2_fu_1445_p2;
wire   [63:0] zext_ln93_2_fu_1450_p1;
wire   [63:0] shl_ln93_fu_1454_p2;
wire   [63:0] cond50_i_i454_fu_1459_p3;
wire   [63:0] zext_ln93_3_fu_1465_p1;
wire   [63:0] add_ln93_2_fu_1468_p2;
wire   [62:0] lshr_ln93_1_fu_1474_p4;
wire   [0:0] tmp_10_fu_1488_p3;
wire   [10:0] select_ln93_1_fu_1496_p3;
wire   [10:0] sub_ln93_3_fu_1504_p2;
wire   [10:0] add_ln93_3_fu_1509_p2;
wire   [63:0] zext_ln93_4_fu_1484_p1;
wire   [11:0] tmp_s_fu_1515_p3;
wire   [51:0] trunc_ln93_1_fu_1534_p4;
wire   [0:0] icmp_ln93_5_fu_1550_p2;
wire   [0:0] icmp_ln93_4_fu_1544_p2;
wire    ap_block_pp0_stage14;
wire   [0:0] and_ln93_1_fu_1624_p2;
wire   [0:0] xor_ln93_fu_1633_p2;
wire   [0:0] and_ln96_fu_1628_p2;
wire   [0:0] xor_ln96_fu_1644_p2;
wire   [0:0] and_ln96_1_fu_1650_p2;
wire   [0:0] icmp_ln94_fu_1673_p2;
wire   [0:0] icmp_ln94_1_fu_1678_p2;
wire   [0:0] icmp_ln94_2_fu_1683_p2;
wire   [0:0] and_ln94_1_fu_1693_p2;
wire   [0:0] and_ln94_fu_1688_p2;
wire   [0:0] and_ln96_2_fu_1705_p2;
wire   [0:0] and_ln96_3_fu_1711_p2;
wire   [0:0] and_ln94_2_fu_1699_p2;
wire   [0:0] and_ln96_4_fu_1717_p2;
wire   [15:0] retval_0_3_0_0_0_load_fu_1730_p7;
wire   [1:0] retval_0_3_0_0_0_load_fu_1730_p8;
wire   [0:0] icmp_ln94_3_fu_1750_p2;
wire   [0:0] and_ln94_3_fu_1755_p2;
wire   [0:0] and_ln96_5_fu_1760_p2;
wire   [15:0] retval_0_2_0_0_0_load_fu_1773_p7;
wire   [1:0] retval_0_2_0_0_0_load_fu_1773_p8;
wire   [0:0] icmp_ln94_4_fu_1793_p2;
wire   [0:0] and_ln94_4_fu_1798_p2;
wire   [0:0] and_ln96_6_fu_1803_p2;
wire   [15:0] retval_0_1_0_0_0_load_fu_1816_p7;
wire   [1:0] retval_0_1_0_0_0_load_fu_1816_p8;
wire   [0:0] icmp_ln94_5_fu_1836_p2;
wire   [0:0] and_ln94_5_fu_1841_p2;
wire   [0:0] and_ln96_7_fu_1846_p2;
wire   [15:0] retval_0_0_0_0_0_load_fu_1859_p7;
wire   [1:0] retval_0_0_0_0_0_load_fu_1859_p8;
reg   [4:0] grp_fu_833_opcode;
wire    ap_block_pp0_stage12_00001;
wire    ap_block_pp0_stage13_00001;
reg   [0:0] ap_return_preg;
reg   [18:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
reg   [1:0] ap_exit_tran_regpp0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [1:0] zext_ln73_cast_fu_1081_p1;
wire   [1:0] zext_ln73_cast_fu_1081_p3;
wire  signed [1:0] zext_ln73_cast_fu_1081_p5;
wire  signed [1:0] zext_ln73_cast_fu_1081_p7;
wire   [1:0] zext_ln83_cast_fu_1110_p1;
wire   [1:0] zext_ln83_cast_fu_1110_p3;
wire  signed [1:0] zext_ln83_cast_fu_1110_p5;
wire  signed [1:0] zext_ln83_cast_fu_1110_p7;
wire   [1:0] zext_ln114_cast1_fu_1181_p1;
wire   [1:0] zext_ln114_cast1_fu_1181_p3;
wire  signed [1:0] zext_ln114_cast1_fu_1181_p5;
wire  signed [1:0] zext_ln114_cast1_fu_1181_p7;
wire  signed [1:0] retval_0_3_0_0_0_load_fu_1730_p1;
wire   [1:0] retval_0_3_0_0_0_load_fu_1730_p3;
wire   [1:0] retval_0_3_0_0_0_load_fu_1730_p5;
wire  signed [1:0] retval_0_2_0_0_0_load_fu_1773_p1;
wire   [1:0] retval_0_2_0_0_0_load_fu_1773_p3;
wire   [1:0] retval_0_2_0_0_0_load_fu_1773_p5;
wire  signed [1:0] retval_0_1_0_0_0_load_fu_1816_p1;
wire   [1:0] retval_0_1_0_0_0_load_fu_1816_p3;
wire   [1:0] retval_0_1_0_0_0_load_fu_1816_p5;
wire  signed [1:0] retval_0_0_0_0_0_load_fu_1859_p1;
wire   [1:0] retval_0_0_0_0_0_load_fu_1859_p3;
wire   [1:0] retval_0_0_0_0_0_load_fu_1859_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_model_array_fu_816_ap_start_reg = 1'b0;
#0 j_fu_268 = 3'd0;
#0 bias_1_local_idx_val20_fu_272 = 16'd0;
#0 bias_1_local_idx1_val21_fu_276 = 16'd0;
#0 bias_2_local_idx_val22_fu_280 = 16'd0;
#0 bias_2_local_idx4_val23_fu_284 = 16'd0;
#0 retval_0_0_0_0_0_load90_fu_288 = 16'd0;
#0 retval_0_1_0_0_0_load96_fu_292 = 16'd0;
#0 retval_0_2_0_0_0_load102_fu_296 = 16'd0;
#0 retval_0_3_0_0_0_load108_fu_300 = 16'd0;
#0 mux_case_07215_fu_304 = 16'd0;
#0 mux_case_17319_fu_308 = 16'd0;
#0 mux_case_07423_fu_312 = 16'd0;
#0 mux_case_17527_fu_316 = 16'd0;
#0 mux_case_07631_fu_320 = 16'd0;
#0 mux_case_17735_fu_324 = 16'd0;
#0 mux_case_07839_fu_328 = 16'd0;
#0 mux_case_17943_fu_332 = 16'd0;
#0 w1_local_163_fu_336 = 16'd0;
#0 w1_local_1_1_fu_340 = 16'd0;
#0 w1_local_2_1_fu_344 = 16'd0;
#0 w1_local_3_1_fu_348 = 16'd0;
#0 w2_local_165_fu_352 = 16'd0;
#0 w2_local_1_1_fu_356 = 16'd0;
#0 w2_local_2_1_fu_360 = 16'd0;
#0 w2_local_3_1_fu_364 = 16'd0;
#0 ap_return_preg = 1'd0;
end

accelerator_model_array grp_model_array_fu_816(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_model_array_fu_816_ap_start),
    .ap_done(grp_model_array_fu_816_ap_done),
    .ap_idle(grp_model_array_fu_816_ap_idle),
    .ap_ready(grp_model_array_fu_816_ap_ready),
    .ap_ce(1'b1),
    .p_read10(grp_model_array_fu_816_p_read10),
    .p_read29(grp_model_array_fu_816_p_read29),
    .p_read30(grp_model_array_fu_816_p_read30),
    .p_read31(grp_model_array_fu_816_p_read31),
    .biases_0_0_val(grp_model_array_fu_816_biases_0_0_val),
    .biases_0_1_val(grp_model_array_fu_816_biases_0_1_val),
    .output_kmin1_0_0_val(grp_model_array_fu_816_output_kmin1_0_0_val),
    .output_kmin1_0_1_val(grp_model_array_fu_816_output_kmin1_0_1_val),
    .delta_k_0_0_val(grp_model_array_fu_816_delta_k_0_0_val),
    .delta_k_0_1_val(grp_model_array_fu_816_delta_k_0_1_val),
    .training(training),
    .ap_return_0(grp_model_array_fu_816_ap_return_0),
    .ap_return_1(grp_model_array_fu_816_ap_return_1),
    .ap_return_2(grp_model_array_fu_816_ap_return_2),
    .ap_return_3(grp_model_array_fu_816_ap_return_3),
    .ap_return_4(grp_model_array_fu_816_ap_return_4),
    .ap_return_5(grp_model_array_fu_816_ap_return_5),
    .ap_return_6(grp_model_array_fu_816_ap_return_6),
    .ap_return_7(grp_model_array_fu_816_ap_return_7),
    .ap_return_8(grp_model_array_fu_816_ap_return_8),
    .ap_return_9(grp_model_array_fu_816_ap_return_9)
);

accelerator_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_833_p0),
    .din1(64'd4602678819172646912),
    .ce(1'b1),
    .opcode(grp_fu_833_opcode),
    .dout(grp_fu_833_p2)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_9_2_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 13 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 13 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 13 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 13 ),
    .def_WIDTH( 13 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 13 ))
sparsemux_9_2_13_1_1_U57(
    .din0(13'd0),
    .din1(13'd0),
    .din2(13'd4096),
    .din3(13'd4096),
    .def(zext_ln73_cast_fu_1081_p9),
    .sel(trunc_ln69_fu_1078_p1),
    .dout(zext_ln73_cast_fu_1081_p11)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_9_2_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 13 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 13 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 13 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 13 ),
    .def_WIDTH( 13 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 13 ))
sparsemux_9_2_13_1_1_U58(
    .din0(13'd0),
    .din1(13'd4096),
    .din2(13'd0),
    .din3(13'd4096),
    .def(zext_ln83_cast_fu_1110_p9),
    .sel(trunc_ln69_fu_1078_p1),
    .dout(zext_ln83_cast_fu_1110_p11)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_9_2_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 13 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 13 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 13 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 13 ),
    .def_WIDTH( 13 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 13 ))
sparsemux_9_2_13_1_1_U59(
    .din0(13'd0),
    .din1(13'd4096),
    .din2(13'd4096),
    .din3(13'd0),
    .def(zext_ln114_cast1_fu_1181_p9),
    .sel(trunc_ln69_reg_2269),
    .dout(zext_ln114_cast1_fu_1181_p11)
);

accelerator_mul_18s_10ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 28 ))
mul_18s_10ns_28_1_1_U60(
    .din0(sub_ln114_1_fu_1393_p2),
    .din1(mul_ln114_fu_1403_p1),
    .dout(mul_ln114_fu_1403_p2)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U61(
    .din0(16'd4096),
    .din1(16'd0),
    .din2(retval_0_3_0_0_0_load108_fu_300),
    .def(retval_0_3_0_0_0_load_fu_1730_p7),
    .sel(retval_0_3_0_0_0_load_fu_1730_p8),
    .dout(retval_0_3_0_0_0_load_fu_1730_p9)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U62(
    .din0(16'd4096),
    .din1(16'd0),
    .din2(retval_0_2_0_0_0_load102_fu_296),
    .def(retval_0_2_0_0_0_load_fu_1773_p7),
    .sel(retval_0_2_0_0_0_load_fu_1773_p8),
    .dout(retval_0_2_0_0_0_load_fu_1773_p9)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U63(
    .din0(16'd4096),
    .din1(16'd0),
    .din2(retval_0_1_0_0_0_load96_fu_292),
    .def(retval_0_1_0_0_0_load_fu_1816_p7),
    .sel(retval_0_1_0_0_0_load_fu_1816_p8),
    .dout(retval_0_1_0_0_0_load_fu_1816_p9)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U64(
    .din0(16'd4096),
    .din1(16'd0),
    .din2(retval_0_0_0_0_0_load90_fu_288),
    .def(retval_0_0_0_0_0_load_fu_1859_p7),
    .sel(retval_0_0_0_0_0_load_fu_1859_p8),
    .dout(retval_0_0_0_0_0_load_fu_1859_p9)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_808_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_model_array_fu_816_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_fu_1026_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            grp_model_array_fu_816_ap_start_reg <= 1'b1;
        end else if ((grp_model_array_fu_816_ap_ready == 1'b1)) begin
            grp_model_array_fu_816_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        UnifiedRetVal_reg_804 <= 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        UnifiedRetVal_reg_804 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
        if ((icmp_ln69_reg_2225 == 1'd1)) begin
                        ap_exit_tran_regpp0[0] <= 1'b1;
        end else if ((ap_predicate_tran18to19_state17 == 1'b1)) begin
                        ap_exit_tran_regpp0[0] <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bias_1_local_idx1_val21_fu_276 <= p_0_0_01382_1_lcssa27;
    end else if (((1'd0 == and_ln144_reg_2229) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bias_1_local_idx1_val21_fu_276 <= grp_model_array_fu_816_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bias_1_local_idx_val20_fu_272 <= p_0_0_01382_lcssa25;
    end else if (((1'd0 == and_ln144_reg_2229) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bias_1_local_idx_val20_fu_272 <= grp_model_array_fu_816_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bias_2_local_idx4_val23_fu_284 <= p_0_0_01385_1_lcssa31;
    end else if (((1'd0 == and_ln144_reg_2229) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        bias_2_local_idx4_val23_fu_284 <= grp_model_array_fu_816_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bias_2_local_idx_val22_fu_280 <= p_0_0_01385_lcssa29;
    end else if (((1'd0 == and_ln144_reg_2229) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        bias_2_local_idx_val22_fu_280 <= grp_model_array_fu_816_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_fu_268 <= 3'd0;
    end else if (((1'd0 == and_ln144_fu_1044_p2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_fu_1026_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_fu_268 <= add_ln69_fu_1032_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_07215_fu_304 <= mux_case_07216;
    end else if (((1'd0 == and_ln144_reg_2229) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mux_case_07215_fu_304 <= grp_model_array_fu_816_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_07423_fu_312 <= mux_case_07424;
    end else if (((1'd0 == and_ln144_reg_2229) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mux_case_07423_fu_312 <= grp_model_array_fu_816_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_07631_fu_320 <= mux_case_07632;
    end else if (((1'd0 == and_ln144_reg_2229) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        mux_case_07631_fu_320 <= grp_model_array_fu_816_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_07839_fu_328 <= mux_case_07840;
    end else if (((1'd0 == and_ln144_reg_2229) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        mux_case_07839_fu_328 <= grp_model_array_fu_816_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_17319_fu_308 <= mux_case_17320;
    end else if (((1'd0 == and_ln144_reg_2229) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mux_case_17319_fu_308 <= grp_model_array_fu_816_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_17527_fu_316 <= mux_case_17528;
    end else if (((1'd0 == and_ln144_reg_2229) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mux_case_17527_fu_316 <= grp_model_array_fu_816_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_17735_fu_324 <= mux_case_17736;
    end else if (((1'd0 == and_ln144_reg_2229) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        mux_case_17735_fu_324 <= grp_model_array_fu_816_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_17943_fu_332 <= mux_case_17944;
    end else if (((1'd0 == and_ln144_reg_2229) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        mux_case_17943_fu_332 <= grp_model_array_fu_816_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        retval_0_0_0_0_0_load90_fu_288 <= retval_0_0_0_0_0_load91;
    end else if (((1'd0 == and_ln144_reg_2229) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        retval_0_0_0_0_0_load90_fu_288 <= retval_0_0_0_0_0_load_fu_1859_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        retval_0_1_0_0_0_load96_fu_292 <= retval_0_1_0_0_0_load97;
    end else if (((1'd0 == and_ln144_reg_2229) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        retval_0_1_0_0_0_load96_fu_292 <= retval_0_1_0_0_0_load_fu_1816_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        retval_0_2_0_0_0_load102_fu_296 <= retval_0_2_0_0_0_load103;
    end else if (((1'd0 == and_ln144_reg_2229) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        retval_0_2_0_0_0_load102_fu_296 <= retval_0_2_0_0_0_load_fu_1773_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        retval_0_3_0_0_0_load108_fu_300 <= retval_0_3_0_0_0_load109;
    end else if (((1'd0 == and_ln144_reg_2229) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        retval_0_3_0_0_0_load108_fu_300 <= retval_0_3_0_0_0_load_fu_1730_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w1_local_163_fu_336 <= w1_local_0;
    end else if (((1'd0 == and_ln144_reg_2229) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w1_local_163_fu_336 <= grp_model_array_fu_816_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w1_local_1_1_fu_340 <= w1_local_1_0;
    end else if (((1'd0 == and_ln144_reg_2229) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w1_local_1_1_fu_340 <= grp_model_array_fu_816_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w1_local_2_1_fu_344 <= w1_local_2_0;
    end else if (((1'd0 == and_ln144_reg_2229) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w1_local_2_1_fu_344 <= grp_model_array_fu_816_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w1_local_3_1_fu_348 <= w1_local_3_0;
    end else if (((1'd0 == and_ln144_reg_2229) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w1_local_3_1_fu_348 <= grp_model_array_fu_816_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w2_local_165_fu_352 <= w2_local_0;
    end else if (((1'd0 == and_ln144_reg_2229) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        w2_local_165_fu_352 <= grp_model_array_fu_816_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w2_local_1_1_fu_356 <= w2_local_1_0;
    end else if (((1'd0 == and_ln144_reg_2229) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        w2_local_1_1_fu_356 <= grp_model_array_fu_816_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w2_local_2_1_fu_360 <= w2_local_2_0;
    end else if (((1'd0 == and_ln144_reg_2229) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        w2_local_2_1_fu_360 <= grp_model_array_fu_816_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w2_local_3_1_fu_364 <= w2_local_3_0;
    end else if (((1'd0 == and_ln144_reg_2229) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        w2_local_3_1_fu_364 <= grp_model_array_fu_816_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        LD_reg_2401 <= LD_fu_1522_p5;
        or_ln93_1_reg_2406 <= or_ln93_1_fu_1556_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln144_reg_2229 <= and_ln144_fu_1044_p2;
        j_1_reg_2214 <= j_fu_268;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        and_ln93_2_reg_2462 <= and_ln93_2_fu_1638_p2;
        or_ln96_reg_2470 <= or_ln96_fu_1656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        array_back1_bias_change_1_reg_2543 <= grp_model_array_fu_816_ap_return_9;
        array_back1_bias_change_reg_2538 <= grp_model_array_fu_816_ap_return_8;
        array_back1_weight_changes_4_reg_2523 <= grp_model_array_fu_816_ap_return_5;
        array_back1_weight_changes_5_reg_2528 <= grp_model_array_fu_816_ap_return_6;
        array_back1_weight_changes_6_reg_2533 <= grp_model_array_fu_816_ap_return_7;
        array_back1_weight_changes_reg_2518 <= grp_model_array_fu_816_ap_return_4;
        retval_0_0_0_0_0_load_2_reg_2478 <= retval_0_0_0_0_0_load90_fu_288;
        retval_0_0_0_0_0_load_reg_2513 <= retval_0_0_0_0_0_load_fu_1859_p9;
        retval_0_1_0_0_0_load_2_reg_2483 <= retval_0_1_0_0_0_load96_fu_292;
        retval_0_1_0_0_0_load_reg_2508 <= retval_0_1_0_0_0_load_fu_1816_p9;
        retval_0_2_0_0_0_load_2_reg_2488 <= retval_0_2_0_0_0_load102_fu_296;
        retval_0_2_0_0_0_load_reg_2503 <= retval_0_2_0_0_0_load_fu_1773_p9;
        retval_0_3_0_0_0_load_2_reg_2493 <= retval_0_3_0_0_0_load108_fu_300;
        retval_0_3_0_0_0_load_reg_2498 <= retval_0_3_0_0_0_load_fu_1730_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        array_back2_bias_change_1_reg_2452 <= grp_model_array_fu_816_ap_return_9;
        array_back2_bias_change_reg_2447 <= grp_model_array_fu_816_ap_return_8;
        array_back2_weight_changes_4_reg_2432 <= grp_model_array_fu_816_ap_return_5;
        array_back2_weight_changes_5_reg_2437 <= grp_model_array_fu_816_ap_return_6;
        array_back2_weight_changes_6_reg_2442 <= grp_model_array_fu_816_ap_return_7;
        array_back2_weight_changes_reg_2427 <= grp_model_array_fu_816_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        array_back2_delta_kmin1_1_reg_2422 <= grp_model_array_fu_816_ap_return_3;
        array_back2_delta_kmin1_reg_2417 <= grp_model_array_fu_816_ap_return_2;
        bitcast_ln748_reg_2412 <= bitcast_ln748_fu_1562_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        array_out1_output_k_1_reg_2289 <= grp_model_array_fu_816_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        array_out1_output_k_reg_2284 <= grp_model_array_fu_816_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        bias_1_local_idx1_val21_load_1_reg_2239 <= bias_1_local_idx1_val21_fu_276;
        bias_1_local_idx_val20_load_1_reg_2233 <= bias_1_local_idx_val20_fu_272;
        w1_local_163_load_1_reg_2245 <= w1_local_163_fu_336;
        w1_local_1_1_load_1_reg_2251 <= w1_local_1_1_fu_340;
        w1_local_2_1_load_1_reg_2257 <= w1_local_2_1_fu_344;
        w1_local_3_1_load_1_reg_2263 <= w1_local_3_1_fu_348;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        bias_2_local_idx4_val23_load_1_reg_2300 <= bias_2_local_idx4_val23_fu_284;
        bias_2_local_idx_val22_load_1_reg_2294 <= bias_2_local_idx_val22_fu_280;
        w2_local_165_load_1_reg_2306 <= w2_local_165_fu_352;
        w2_local_1_1_load_1_reg_2312 <= w2_local_1_1_fu_356;
        w2_local_2_1_load_1_reg_2318 <= w2_local_2_1_fu_360;
        w2_local_3_1_load_1_reg_2324 <= w2_local_3_1_fu_364;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        icmp_ln111_reg_2344 <= icmp_ln111_fu_1175_p2;
        sub_ln114_reg_2354 <= sub_ln114_fu_1212_p2;
        tmp_6_reg_2338 <= tmp_6_fu_1167_p1[32'd15];
        zext_ln114_cast1_reg_2349 <= zext_ln114_cast1_fu_1181_p11;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln69_reg_2225 <= icmp_ln69_fu_1026_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        icmp_ln93_3_reg_2386 <= icmp_ln93_3_fu_1376_p2;
        icmp_ln93_reg_2359 <= icmp_ln93_fu_1218_p2;
        or_ln_reg_2381[0] <= or_ln_fu_1368_p3[0];
        select_ln93_reg_2365 <= select_ln93_fu_1228_p3;
        sub_ln93_1_reg_2375 <= sub_ln93_1_fu_1268_p2;
        trunc_ln93_reg_2370 <= trunc_ln93_fu_1264_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        lshr_ln93_reg_2396 <= lshr_ln93_fu_1439_p2;
        zext_ln93_reg_2391[15 : 0] <= zext_ln93_fu_1427_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        output_2_reg_2330 <= grp_model_array_fu_816_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        tmp_reg_2457 <= grp_fu_833_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        trunc_ln69_reg_2269 <= trunc_ln69_fu_1078_p1;
        zext_ln73_reg_2274[12 : 0] <= zext_ln73_fu_1105_p1[12 : 0];
        zext_ln83_reg_2279[12 : 0] <= zext_ln83_fu_1134_p1[12 : 0];
    end
end

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone) & ((ap_predicate_tran18to19_state17 == 1'b1) | (icmp_ln69_reg_2225 == 1'd1)))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_808_p4 = 1'd0;
    end else begin
        ap_phi_mux_UnifiedRetVal_phi_fu_808_p4 = UnifiedRetVal_reg_804;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_return = ap_phi_mux_UnifiedRetVal_phi_fu_808_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        array_back1_bias_change_2_out_ap_vld = 1'b1;
    end else begin
        array_back1_bias_change_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        array_back1_bias_change_out_ap_vld = 1'b1;
    end else begin
        array_back1_bias_change_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        array_back1_weight_changes_4_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        array_back1_weight_changes_5_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        array_back1_weight_changes_6_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        array_back1_weight_changes_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        array_back2_bias_change_2_out_ap_vld = 1'b1;
    end else begin
        array_back2_bias_change_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        array_back2_bias_change_out_ap_vld = 1'b1;
    end else begin
        array_back2_bias_change_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        array_back2_weight_changes_4_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        array_back2_weight_changes_5_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        array_back2_weight_changes_6_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        array_back2_weight_changes_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        bias_1_local_idx1_val21_out = bias_1_local_idx1_val21_fu_276;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        bias_1_local_idx1_val21_out = bias_1_local_idx1_val21_load_1_reg_2239;
    end else begin
        bias_1_local_idx1_val21_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        bias_1_local_idx1_val21_out_ap_vld = 1'b1;
    end else begin
        bias_1_local_idx1_val21_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        bias_1_local_idx_val20_out = bias_1_local_idx_val20_fu_272;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        bias_1_local_idx_val20_out = bias_1_local_idx_val20_load_1_reg_2233;
    end else begin
        bias_1_local_idx_val20_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        bias_1_local_idx_val20_out_ap_vld = 1'b1;
    end else begin
        bias_1_local_idx_val20_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        bias_2_local_idx4_val23_out = bias_2_local_idx4_val23_fu_284;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        bias_2_local_idx4_val23_out = bias_2_local_idx4_val23_load_1_reg_2300;
    end else begin
        bias_2_local_idx4_val23_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        bias_2_local_idx4_val23_out_ap_vld = 1'b1;
    end else begin
        bias_2_local_idx4_val23_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        bias_2_local_idx_val22_out = bias_2_local_idx_val22_fu_280;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        bias_2_local_idx_val22_out = bias_2_local_idx_val22_load_1_reg_2294;
    end else begin
        bias_2_local_idx_val22_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        bias_2_local_idx_val22_out_ap_vld = 1'b1;
    end else begin
        bias_2_local_idx_val22_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_00001))) begin
            grp_fu_833_opcode = 5'd5;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_00001))) begin
            grp_fu_833_opcode = 5'd2;
        end else begin
            grp_fu_833_opcode = 'bx;
        end
    end else begin
        grp_fu_833_opcode = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
            grp_fu_833_p0 = bitcast_ln748_reg_2412;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
            grp_fu_833_p0 = bitcast_ln748_fu_1562_p1;
        end else begin
            grp_fu_833_p0 = 'bx;
        end
    end else begin
        grp_fu_833_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_ignoreCallOp222))) begin
            grp_model_array_fu_816_biases_0_0_val = bias_1_local_idx_val20_load_1_reg_2233;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_ignoreCallOp174))) begin
            grp_model_array_fu_816_biases_0_0_val = bias_2_local_idx_val22_load_1_reg_2294;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_ignoreCallOp129))) begin
            grp_model_array_fu_816_biases_0_0_val = bias_2_local_idx_val22_fu_280;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp117))) begin
            grp_model_array_fu_816_biases_0_0_val = bias_1_local_idx_val20_fu_272;
        end else begin
            grp_model_array_fu_816_biases_0_0_val = 'bx;
        end
    end else begin
        grp_model_array_fu_816_biases_0_0_val = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_ignoreCallOp222))) begin
            grp_model_array_fu_816_biases_0_1_val = bias_1_local_idx1_val21_load_1_reg_2239;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_ignoreCallOp174))) begin
            grp_model_array_fu_816_biases_0_1_val = bias_2_local_idx4_val23_load_1_reg_2300;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_ignoreCallOp129))) begin
            grp_model_array_fu_816_biases_0_1_val = bias_2_local_idx4_val23_fu_284;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp117))) begin
            grp_model_array_fu_816_biases_0_1_val = bias_1_local_idx1_val21_fu_276;
        end else begin
            grp_model_array_fu_816_biases_0_1_val = 'bx;
        end
    end else begin
        grp_model_array_fu_816_biases_0_1_val = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage13_ignoreCallOp222))) begin
        grp_model_array_fu_816_delta_k_0_0_val = array_back2_delta_kmin1_reg_2417;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage9_ignoreCallOp174))) begin
        grp_model_array_fu_816_delta_k_0_0_val = conv_i_i_i15419_fu_1419_p3;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage5_ignoreCallOp129)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp117)))) begin
        grp_model_array_fu_816_delta_k_0_0_val = 16'd0;
    end else begin
        grp_model_array_fu_816_delta_k_0_0_val = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage13_ignoreCallOp222))) begin
        grp_model_array_fu_816_delta_k_0_1_val = array_back2_delta_kmin1_1_reg_2422;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage9_ignoreCallOp174)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage5_ignoreCallOp129)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp117)))) begin
        grp_model_array_fu_816_delta_k_0_1_val = 16'd0;
    end else begin
        grp_model_array_fu_816_delta_k_0_1_val = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage13_ignoreCallOp222))) begin
        grp_model_array_fu_816_output_kmin1_0_0_val = zext_ln73_reg_2274;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage9_ignoreCallOp174)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage5_ignoreCallOp129)))) begin
        grp_model_array_fu_816_output_kmin1_0_0_val = array_out1_output_k_reg_2284;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp117))) begin
        grp_model_array_fu_816_output_kmin1_0_0_val = zext_ln73_fu_1105_p1;
    end else begin
        grp_model_array_fu_816_output_kmin1_0_0_val = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage13_ignoreCallOp222))) begin
        grp_model_array_fu_816_output_kmin1_0_1_val = zext_ln83_reg_2279;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage9_ignoreCallOp174)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage5_ignoreCallOp129)))) begin
        grp_model_array_fu_816_output_kmin1_0_1_val = array_out1_output_k_1_reg_2289;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp117))) begin
        grp_model_array_fu_816_output_kmin1_0_1_val = zext_ln83_fu_1134_p1;
    end else begin
        grp_model_array_fu_816_output_kmin1_0_1_val = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_ignoreCallOp222))) begin
            grp_model_array_fu_816_p_read10 = w1_local_163_load_1_reg_2245;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_ignoreCallOp174))) begin
            grp_model_array_fu_816_p_read10 = w2_local_165_load_1_reg_2306;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_ignoreCallOp129))) begin
            grp_model_array_fu_816_p_read10 = w2_local_165_fu_352;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp117))) begin
            grp_model_array_fu_816_p_read10 = w1_local_163_fu_336;
        end else begin
            grp_model_array_fu_816_p_read10 = 'bx;
        end
    end else begin
        grp_model_array_fu_816_p_read10 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_ignoreCallOp222))) begin
            grp_model_array_fu_816_p_read29 = w1_local_1_1_load_1_reg_2251;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_ignoreCallOp174))) begin
            grp_model_array_fu_816_p_read29 = w2_local_1_1_load_1_reg_2312;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_ignoreCallOp129))) begin
            grp_model_array_fu_816_p_read29 = w2_local_1_1_fu_356;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp117))) begin
            grp_model_array_fu_816_p_read29 = w1_local_1_1_fu_340;
        end else begin
            grp_model_array_fu_816_p_read29 = 'bx;
        end
    end else begin
        grp_model_array_fu_816_p_read29 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_ignoreCallOp222))) begin
            grp_model_array_fu_816_p_read30 = w1_local_2_1_load_1_reg_2257;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_ignoreCallOp174))) begin
            grp_model_array_fu_816_p_read30 = w2_local_2_1_load_1_reg_2318;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_ignoreCallOp129))) begin
            grp_model_array_fu_816_p_read30 = w2_local_2_1_fu_360;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp117))) begin
            grp_model_array_fu_816_p_read30 = w1_local_2_1_fu_344;
        end else begin
            grp_model_array_fu_816_p_read30 = 'bx;
        end
    end else begin
        grp_model_array_fu_816_p_read30 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2225 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_ignoreCallOp222))) begin
            grp_model_array_fu_816_p_read31 = w1_local_3_1_load_1_reg_2263;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_ignoreCallOp174))) begin
            grp_model_array_fu_816_p_read31 = w2_local_3_1_load_1_reg_2324;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_ignoreCallOp129))) begin
            grp_model_array_fu_816_p_read31 = w2_local_3_1_fu_364;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp117))) begin
            grp_model_array_fu_816_p_read31 = w1_local_3_1_fu_348;
        end else begin
            grp_model_array_fu_816_p_read31 = 'bx;
        end
    end else begin
        grp_model_array_fu_816_p_read31 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        mux_case_07215_out_ap_vld = 1'b1;
    end else begin
        mux_case_07215_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        mux_case_07423_out_ap_vld = 1'b1;
    end else begin
        mux_case_07423_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        mux_case_07631_out_ap_vld = 1'b1;
    end else begin
        mux_case_07631_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        mux_case_07839_out_ap_vld = 1'b1;
    end else begin
        mux_case_07839_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        mux_case_17319_out_ap_vld = 1'b1;
    end else begin
        mux_case_17319_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        mux_case_17527_out_ap_vld = 1'b1;
    end else begin
        mux_case_17527_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        mux_case_17735_out_ap_vld = 1'b1;
    end else begin
        mux_case_17735_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        mux_case_17943_out_ap_vld = 1'b1;
    end else begin
        mux_case_17943_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        retval_0_0_0_0_0_load90_out = retval_0_0_0_0_0_load90_fu_288;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        retval_0_0_0_0_0_load90_out = retval_0_0_0_0_0_load_2_reg_2478;
    end else begin
        retval_0_0_0_0_0_load90_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        retval_0_0_0_0_0_load90_out_ap_vld = 1'b1;
    end else begin
        retval_0_0_0_0_0_load90_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        retval_0_0_0_0_0_load_out_ap_vld = 1'b1;
    end else begin
        retval_0_0_0_0_0_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        retval_0_1_0_0_0_load96_out = retval_0_1_0_0_0_load96_fu_292;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        retval_0_1_0_0_0_load96_out = retval_0_1_0_0_0_load_2_reg_2483;
    end else begin
        retval_0_1_0_0_0_load96_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        retval_0_1_0_0_0_load96_out_ap_vld = 1'b1;
    end else begin
        retval_0_1_0_0_0_load96_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        retval_0_1_0_0_0_load_out_ap_vld = 1'b1;
    end else begin
        retval_0_1_0_0_0_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        retval_0_2_0_0_0_load102_out = retval_0_2_0_0_0_load102_fu_296;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        retval_0_2_0_0_0_load102_out = retval_0_2_0_0_0_load_2_reg_2488;
    end else begin
        retval_0_2_0_0_0_load102_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        retval_0_2_0_0_0_load102_out_ap_vld = 1'b1;
    end else begin
        retval_0_2_0_0_0_load102_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        retval_0_2_0_0_0_load_out_ap_vld = 1'b1;
    end else begin
        retval_0_2_0_0_0_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        retval_0_3_0_0_0_load108_out = retval_0_3_0_0_0_load108_fu_300;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        retval_0_3_0_0_0_load108_out = retval_0_3_0_0_0_load_2_reg_2493;
    end else begin
        retval_0_3_0_0_0_load108_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        retval_0_3_0_0_0_load108_out_ap_vld = 1'b1;
    end else begin
        retval_0_3_0_0_0_load108_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        retval_0_3_0_0_0_load_out_ap_vld = 1'b1;
    end else begin
        retval_0_3_0_0_0_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        w1_local_163_out = w1_local_163_fu_336;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        w1_local_163_out = w1_local_163_load_1_reg_2245;
    end else begin
        w1_local_163_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        w1_local_163_out_ap_vld = 1'b1;
    end else begin
        w1_local_163_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        w1_local_1_1_out = w1_local_1_1_fu_340;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        w1_local_1_1_out = w1_local_1_1_load_1_reg_2251;
    end else begin
        w1_local_1_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        w1_local_1_1_out_ap_vld = 1'b1;
    end else begin
        w1_local_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        w1_local_2_1_out = w1_local_2_1_fu_344;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        w1_local_2_1_out = w1_local_2_1_load_1_reg_2257;
    end else begin
        w1_local_2_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        w1_local_2_1_out_ap_vld = 1'b1;
    end else begin
        w1_local_2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        w1_local_3_1_out = w1_local_3_1_fu_348;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        w1_local_3_1_out = w1_local_3_1_load_1_reg_2263;
    end else begin
        w1_local_3_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        w1_local_3_1_out_ap_vld = 1'b1;
    end else begin
        w1_local_3_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        w2_local_165_out = w2_local_165_fu_352;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        w2_local_165_out = w2_local_165_load_1_reg_2306;
    end else begin
        w2_local_165_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        w2_local_165_out_ap_vld = 1'b1;
    end else begin
        w2_local_165_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        w2_local_1_1_out = w2_local_1_1_fu_356;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        w2_local_1_1_out = w2_local_1_1_load_1_reg_2312;
    end else begin
        w2_local_1_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        w2_local_1_1_out_ap_vld = 1'b1;
    end else begin
        w2_local_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        w2_local_2_1_out = w2_local_2_1_fu_360;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        w2_local_2_1_out = w2_local_2_1_load_1_reg_2318;
    end else begin
        w2_local_2_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        w2_local_2_1_out_ap_vld = 1'b1;
    end else begin
        w2_local_2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        w2_local_3_1_out = w2_local_3_1_fu_364;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0))) begin
        w2_local_3_1_out = w2_local_3_1_load_1_reg_2324;
    end else begin
        w2_local_3_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln69_reg_2225 == 1'd0)))) begin
        w2_local_3_1_out_ap_vld = 1'b1;
    end else begin
        w2_local_3_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_exit_tran_regpp0 == 2'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_exit_tran_regpp0 == 2'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_fu_1522_p5 = {{tmp_s_fu_1515_p3}, {zext_ln93_4_fu_1484_p1[51:0]}};

assign add_ln69_fu_1032_p2 = (j_fu_268 + 3'd1);

assign add_ln93_1_fu_1430_p2 = ($signed(sub_ln93_1_reg_2375) + $signed(32'd4294967242));

assign add_ln93_2_fu_1468_p2 = (cond50_i_i454_fu_1459_p3 + zext_ln93_3_fu_1465_p1);

assign add_ln93_3_fu_1509_p2 = (select_ln93_1_fu_1496_p3 + sub_ln93_3_fu_1504_p2);

assign add_ln93_fu_1274_p2 = ($signed(sub_ln93_1_fu_1268_p2) + $signed(32'd4294967243));

assign and_ln144_fu_1044_p2 = (icmp_ln144_fu_1038_p2 & cmp_i_i113);

assign and_ln93_1_fu_1624_p2 = (tmp_reg_2457 & or_ln93_1_reg_2406);

assign and_ln93_2_fu_1638_p2 = (xor_ln93_fu_1633_p2 & and_ln93_1_fu_1624_p2);

assign and_ln93_3_fu_1316_p2 = (select_ln93_fu_1228_p3 & lshr_ln93_2_fu_1310_p2);

assign and_ln93_fu_1356_p2 = (xor_ln93_1_fu_1342_p2 & tmp_9_fu_1348_p3);

assign and_ln94_1_fu_1693_p2 = (icmp_ln94_2_fu_1683_p2 & icmp_ln94_1_fu_1678_p2);

assign and_ln94_2_fu_1699_p2 = (and_ln94_fu_1688_p2 & and_ln94_1_fu_1693_p2);

assign and_ln94_3_fu_1755_p2 = (icmp_ln94_3_fu_1750_p2 & and_ln93_2_reg_2462);

assign and_ln94_4_fu_1798_p2 = (icmp_ln94_4_fu_1793_p2 & and_ln93_2_reg_2462);

assign and_ln94_5_fu_1841_p2 = (icmp_ln94_5_fu_1836_p2 & and_ln93_2_reg_2462);

assign and_ln94_fu_1688_p2 = (icmp_ln94_fu_1673_p2 & and_ln93_2_reg_2462);

assign and_ln96_1_fu_1650_p2 = (xor_ln96_fu_1644_p2 & and_ln96_fu_1628_p2);

assign and_ln96_2_fu_1705_p2 = (icmp_ln94_fu_1673_p2 & icmp_ln94_1_fu_1678_p2);

assign and_ln96_3_fu_1711_p2 = (icmp_ln94_2_fu_1683_p2 & and_ln96_2_fu_1705_p2);

assign and_ln96_4_fu_1717_p2 = (or_ln96_reg_2470 & and_ln96_3_fu_1711_p2);

assign and_ln96_5_fu_1760_p2 = (or_ln96_reg_2470 & icmp_ln94_3_fu_1750_p2);

assign and_ln96_6_fu_1803_p2 = (or_ln96_reg_2470 & icmp_ln94_4_fu_1793_p2);

assign and_ln96_7_fu_1846_p2 = (or_ln96_reg_2470 & icmp_ln94_5_fu_1836_p2);

assign and_ln96_fu_1628_p2 = (or_ln93_1_reg_2406 & grp_fu_833_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_ignoreCallOp222 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_ignoreCallOp117 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_ignoreCallOp129 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_ignoreCallOp174 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_tran18to19_state17 = ((1'd1 == and_ln144_reg_2229) & (icmp_ln69_reg_2225 == 1'd0));
end

assign array_back1_bias_change_2_out = array_back1_bias_change_1_reg_2543;

assign array_back1_bias_change_out = array_back1_bias_change_reg_2538;

assign array_back1_weight_changes_4_out = array_back1_weight_changes_4_reg_2523;

assign array_back1_weight_changes_5_out = array_back1_weight_changes_5_reg_2528;

assign array_back1_weight_changes_6_out = array_back1_weight_changes_6_reg_2533;

assign array_back1_weight_changes_out = array_back1_weight_changes_reg_2518;

assign array_back2_bias_change_2_out = array_back2_bias_change_1_reg_2452;

assign array_back2_bias_change_out = array_back2_bias_change_reg_2447;

assign array_back2_weight_changes_4_out = array_back2_weight_changes_4_reg_2432;

assign array_back2_weight_changes_5_out = array_back2_weight_changes_5_reg_2437;

assign array_back2_weight_changes_6_out = array_back2_weight_changes_6_reg_2442;

assign array_back2_weight_changes_out = array_back2_weight_changes_reg_2427;

assign bitcast_ln748_fu_1562_p1 = LD_reg_2401;

assign cond50_i_i454_fu_1459_p3 = ((icmp_ln93_3_reg_2386[0:0] == 1'b1) ? lshr_ln93_reg_2396 : shl_ln93_fu_1454_p2);

assign conv_i_i_i15419_fu_1419_p3 = ((icmp_ln111_reg_2344[0:0] == 1'b1) ? sub_ln112_fu_1385_p2 : trunc_ln3_fu_1409_p4);

assign grp_model_array_fu_816_ap_start = grp_model_array_fu_816_ap_start_reg;

assign icmp_ln111_fu_1175_p0 = grp_model_array_fu_816_ap_return_0;

assign icmp_ln111_fu_1175_p2 = (($signed(icmp_ln111_fu_1175_p0) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_1038_p2 = ((j_fu_268 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1026_p2 = ((j_fu_268 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln93_1_fu_1290_p2 = (($signed(tmp_7_fu_1280_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln93_2_fu_1322_p2 = ((and_ln93_3_fu_1316_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln93_3_fu_1376_p2 = (($signed(add_ln93_fu_1274_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln93_4_fu_1544_p2 = ((add_ln93_3_fu_1509_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln93_5_fu_1550_p2 = ((trunc_ln93_1_fu_1534_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_1218_p2 = ((output_2_reg_2330 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_1_fu_1678_p2 = ((j_1_reg_2214 != 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln94_2_fu_1683_p2 = ((j_1_reg_2214 != 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln94_3_fu_1750_p2 = ((j_1_reg_2214 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln94_4_fu_1793_p2 = ((j_1_reg_2214 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln94_5_fu_1836_p2 = ((j_1_reg_2214 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_1673_p2 = ((j_1_reg_2214 != 3'd0) ? 1'b1 : 1'b0);

assign lshr_ln93_1_fu_1474_p4 = {{add_ln93_2_fu_1468_p2[63:1]}};

assign lshr_ln93_2_fu_1310_p2 = 16'd65535 >> zext_ln93_5_fu_1306_p1;

assign lshr_ln93_fu_1439_p2 = zext_ln93_fu_1427_p1 >> zext_ln93_1_fu_1435_p1;

assign mul_ln114_fu_1403_p1 = 28'd409;

assign mux_case_07215_out = mux_case_07215_fu_304;

assign mux_case_07423_out = mux_case_07423_fu_312;

assign mux_case_07631_out = mux_case_07631_fu_320;

assign mux_case_07839_out = mux_case_07839_fu_328;

assign mux_case_17319_out = mux_case_17319_fu_308;

assign mux_case_17527_out = mux_case_17527_fu_316;

assign mux_case_17735_out = mux_case_17735_fu_324;

assign mux_case_17943_out = mux_case_17943_fu_332;

assign or_ln93_1_fu_1556_p2 = (icmp_ln93_5_fu_1550_p2 | icmp_ln93_4_fu_1544_p2);

assign or_ln93_fu_1362_p2 = (phi_ln93_fu_1328_p2 | and_ln93_fu_1356_p2);

assign or_ln96_fu_1656_p2 = (icmp_ln93_reg_2359 | and_ln96_1_fu_1650_p2);

assign or_ln_fu_1368_p3 = {{1'd0}, {or_ln93_fu_1362_p2}};

assign phi_ln93_fu_1328_p2 = (icmp_ln93_2_fu_1322_p2 & icmp_ln93_1_fu_1290_p2);

assign retval_0_0_0_0_0_load_fu_1859_p7 = 'bx;

assign retval_0_0_0_0_0_load_fu_1859_p8 = {{and_ln94_5_fu_1841_p2}, {and_ln96_7_fu_1846_p2}};

assign retval_0_0_0_0_0_load_out = retval_0_0_0_0_0_load_reg_2513;

assign retval_0_1_0_0_0_load_fu_1816_p7 = 'bx;

assign retval_0_1_0_0_0_load_fu_1816_p8 = {{and_ln94_4_fu_1798_p2}, {and_ln96_6_fu_1803_p2}};

assign retval_0_1_0_0_0_load_out = retval_0_1_0_0_0_load_reg_2508;

assign retval_0_2_0_0_0_load_fu_1773_p7 = 'bx;

assign retval_0_2_0_0_0_load_fu_1773_p8 = {{and_ln94_3_fu_1755_p2}, {and_ln96_5_fu_1760_p2}};

assign retval_0_2_0_0_0_load_out = retval_0_2_0_0_0_load_reg_2503;

assign retval_0_3_0_0_0_load_fu_1730_p7 = 'bx;

assign retval_0_3_0_0_0_load_fu_1730_p8 = {{and_ln94_2_fu_1699_p2}, {and_ln96_4_fu_1717_p2}};

assign retval_0_3_0_0_0_load_out = retval_0_3_0_0_0_load_reg_2498;

assign select_ln93_1_fu_1496_p3 = ((tmp_10_fu_1488_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln93_fu_1228_p3 = ((tmp_6_reg_2338[0:0] == 1'b1) ? sub_ln93_fu_1223_p2 : output_2_reg_2330);

assign sext_ln114_fu_1208_p0 = grp_model_array_fu_816_ap_return_0;

assign sext_ln114_fu_1208_p1 = sext_ln114_fu_1208_p0;

assign sext_ln93_fu_1252_p1 = $signed(tmp_4_fu_1244_p3);

assign shl_ln93_fu_1454_p2 = zext_ln93_reg_2391 << zext_ln93_2_fu_1450_p1;

assign sub_ln112_fu_1385_p2 = ($signed(output_2_reg_2330) - $signed(zext_ln112_fu_1382_p1));

assign sub_ln114_1_fu_1393_p2 = (18'd0 - zext_ln114_1_fu_1390_p1);

assign sub_ln114_fu_1212_p2 = ($signed(zext_ln114_fu_1204_p1) - $signed(sext_ln114_fu_1208_p1));

assign sub_ln93_1_fu_1268_p2 = (32'd16 - tmp_5_fu_1256_p3);

assign sub_ln93_2_fu_1445_p2 = (32'd54 - sub_ln93_1_reg_2375);

assign sub_ln93_3_fu_1504_p2 = (11'd4 - trunc_ln93_reg_2370);

assign sub_ln93_4_fu_1300_p2 = (4'd6 - trunc_ln93_2_fu_1296_p1);

assign sub_ln93_fu_1223_p2 = ($signed(16'd0) - $signed(output_2_reg_2330));

assign tmp_10_fu_1488_p3 = add_ln93_2_fu_1468_p2[32'd54];

integer ap_tvar_int_0;

always @ (select_ln93_fu_1228_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            tmp_3_fu_1234_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_3_fu_1234_p4[ap_tvar_int_0] = select_ln93_fu_1228_p3[15 - ap_tvar_int_0];
        end
    end
end

assign tmp_4_fu_1244_p3 = {{1'd1}, {tmp_3_fu_1234_p4}};


always @ (sext_ln93_fu_1252_p1) begin
    if (sext_ln93_fu_1252_p1[0] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd0;
    end else if (sext_ln93_fu_1252_p1[1] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd1;
    end else if (sext_ln93_fu_1252_p1[2] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd2;
    end else if (sext_ln93_fu_1252_p1[3] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd3;
    end else if (sext_ln93_fu_1252_p1[4] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd4;
    end else if (sext_ln93_fu_1252_p1[5] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd5;
    end else if (sext_ln93_fu_1252_p1[6] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd6;
    end else if (sext_ln93_fu_1252_p1[7] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd7;
    end else if (sext_ln93_fu_1252_p1[8] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd8;
    end else if (sext_ln93_fu_1252_p1[9] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd9;
    end else if (sext_ln93_fu_1252_p1[10] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd10;
    end else if (sext_ln93_fu_1252_p1[11] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd11;
    end else if (sext_ln93_fu_1252_p1[12] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd12;
    end else if (sext_ln93_fu_1252_p1[13] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd13;
    end else if (sext_ln93_fu_1252_p1[14] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd14;
    end else if (sext_ln93_fu_1252_p1[15] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd15;
    end else if (sext_ln93_fu_1252_p1[16] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd16;
    end else if (sext_ln93_fu_1252_p1[17] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd17;
    end else if (sext_ln93_fu_1252_p1[18] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd18;
    end else if (sext_ln93_fu_1252_p1[19] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd19;
    end else if (sext_ln93_fu_1252_p1[20] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd20;
    end else if (sext_ln93_fu_1252_p1[21] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd21;
    end else if (sext_ln93_fu_1252_p1[22] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd22;
    end else if (sext_ln93_fu_1252_p1[23] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd23;
    end else if (sext_ln93_fu_1252_p1[24] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd24;
    end else if (sext_ln93_fu_1252_p1[25] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd25;
    end else if (sext_ln93_fu_1252_p1[26] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd26;
    end else if (sext_ln93_fu_1252_p1[27] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd27;
    end else if (sext_ln93_fu_1252_p1[28] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd28;
    end else if (sext_ln93_fu_1252_p1[29] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd29;
    end else if (sext_ln93_fu_1252_p1[30] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd30;
    end else if (sext_ln93_fu_1252_p1[31] == 1'b1) begin
        tmp_5_fu_1256_p3 = 32'd31;
    end else begin
        tmp_5_fu_1256_p3 = 32'd32;
    end
end

assign tmp_6_fu_1167_p1 = grp_model_array_fu_816_ap_return_0;

assign tmp_7_fu_1280_p4 = {{add_ln93_fu_1274_p2[31:1]}};

assign tmp_8_fu_1334_p3 = add_ln93_fu_1274_p2[32'd31];

assign tmp_9_fu_1348_p3 = select_ln93_fu_1228_p3[add_ln93_fu_1274_p2];

assign tmp_s_fu_1515_p3 = {{tmp_6_reg_2338}, {add_ln93_3_fu_1509_p2}};

assign trunc_ln3_fu_1409_p4 = {{mul_ln114_fu_1403_p2[27:12]}};

assign trunc_ln69_fu_1078_p1 = j_1_reg_2214[1:0];

assign trunc_ln93_1_fu_1534_p4 = {{add_ln93_2_fu_1468_p2[52:1]}};

assign trunc_ln93_2_fu_1296_p1 = sub_ln93_1_fu_1268_p2[3:0];

assign trunc_ln93_fu_1264_p1 = tmp_5_fu_1256_p3[10:0];

assign xor_ln93_1_fu_1342_p2 = (tmp_8_fu_1334_p3 ^ 1'd1);

assign xor_ln93_fu_1633_p2 = (icmp_ln93_reg_2359 ^ 1'd1);

assign xor_ln96_fu_1644_p2 = (1'd1 ^ and_ln93_1_fu_1624_p2);

assign zext_ln112_fu_1382_p1 = zext_ln114_cast1_reg_2349;

assign zext_ln114_1_fu_1390_p1 = sub_ln114_reg_2354;

assign zext_ln114_cast1_fu_1181_p9 = 'bx;

assign zext_ln114_fu_1204_p1 = zext_ln114_cast1_fu_1181_p11;

assign zext_ln73_cast_fu_1081_p9 = 'bx;

assign zext_ln73_fu_1105_p1 = zext_ln73_cast_fu_1081_p11;

assign zext_ln83_cast_fu_1110_p9 = 'bx;

assign zext_ln83_fu_1134_p1 = zext_ln83_cast_fu_1110_p11;

assign zext_ln93_1_fu_1435_p1 = add_ln93_1_fu_1430_p2;

assign zext_ln93_2_fu_1450_p1 = sub_ln93_2_fu_1445_p2;

assign zext_ln93_3_fu_1465_p1 = or_ln_reg_2381;

assign zext_ln93_4_fu_1484_p1 = lshr_ln93_1_fu_1474_p4;

assign zext_ln93_5_fu_1306_p1 = sub_ln93_4_fu_1300_p2;

assign zext_ln93_fu_1427_p1 = select_ln93_reg_2365;

always @ (posedge ap_clk) begin
    zext_ln73_reg_2274[15:13] <= 3'b000;
    zext_ln83_reg_2279[15:13] <= 3'b000;
    or_ln_reg_2381[1] <= 1'b0;
    zext_ln93_reg_2391[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    ap_exit_tran_regpp0[1] <= 1'b0;
end

endmodule //accelerator_accelerator_Pipeline_VITIS_LOOP_69_4
