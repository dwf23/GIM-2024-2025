// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module accelerator_accelerator_Pipeline_VITIS_LOOP_69_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bias_2_local_1_0,
        bias_2_local_0,
        bias_1_local_1_0,
        bias_1_local_0,
        w2_local_3_0,
        w2_local_2_0,
        w2_local_1_0,
        w2_local_0,
        w1_local_3_0,
        w1_local_2_0,
        w1_local_1_0,
        w1_local_0,
        mux_case_15664,
        mux_case_05560,
        mux_case_15456,
        mux_case_05352,
        mux_case_15248,
        mux_case_05144,
        mux_case_15040,
        mux_case_04936,
        mux_case_14832,
        mux_case_04728,
        mux_case_14624,
        mux_case_04520,
        retval_0_3_0_0_0_load82,
        retval_0_2_0_0_0_load76,
        retval_0_1_0_0_0_load70,
        retval_0_0_0_0_0_load64,
        training,
        cmp_i_i100,
        bias_2_local_1_1_out,
        bias_2_local_1_1_out_ap_vld,
        bias_2_local_193_out,
        bias_2_local_193_out_ap_vld,
        bias_1_local_1_1_out,
        bias_1_local_1_1_out_ap_vld,
        bias_1_local_191_out,
        bias_1_local_191_out_ap_vld,
        w2_local_3_1_out,
        w2_local_3_1_out_ap_vld,
        w2_local_2_1_out,
        w2_local_2_1_out_ap_vld,
        w2_local_1_1_out,
        w2_local_1_1_out_ap_vld,
        w2_local_189_out,
        w2_local_189_out_ap_vld,
        w1_local_3_1_out,
        w1_local_3_1_out_ap_vld,
        w1_local_2_1_out,
        w1_local_2_1_out_ap_vld,
        w1_local_1_1_out,
        w1_local_1_1_out_ap_vld,
        w1_local_187_out,
        w1_local_187_out_ap_vld,
        mux_case_15663_out,
        mux_case_15663_out_ap_vld,
        mux_case_05559_out,
        mux_case_05559_out_ap_vld,
        mux_case_15455_out,
        mux_case_15455_out_ap_vld,
        mux_case_05351_out,
        mux_case_05351_out_ap_vld,
        mux_case_15247_out,
        mux_case_15247_out_ap_vld,
        mux_case_05143_out,
        mux_case_05143_out_ap_vld,
        mux_case_15039_out,
        mux_case_15039_out_ap_vld,
        mux_case_04935_out,
        mux_case_04935_out_ap_vld,
        mux_case_14831_out,
        mux_case_14831_out_ap_vld,
        mux_case_04727_out,
        mux_case_04727_out_ap_vld,
        mux_case_14623_out,
        mux_case_14623_out_ap_vld,
        mux_case_04519_out,
        mux_case_04519_out_ap_vld,
        retval_0_3_0_0_0_load81_out,
        retval_0_3_0_0_0_load81_out_ap_vld,
        retval_0_2_0_0_0_load75_out,
        retval_0_2_0_0_0_load75_out_ap_vld,
        retval_0_1_0_0_0_load69_out,
        retval_0_1_0_0_0_load69_out_ap_vld,
        retval_0_0_0_0_0_load63_out,
        retval_0_0_0_0_0_load63_out_ap_vld,
        retval_0_3_0_0_0_load_out,
        retval_0_3_0_0_0_load_out_ap_vld,
        retval_0_2_0_0_0_load_out,
        retval_0_2_0_0_0_load_out_ap_vld,
        retval_0_1_0_0_0_load_out,
        retval_0_1_0_0_0_load_out_ap_vld,
        retval_0_0_0_0_0_load_out,
        retval_0_0_0_0_0_load_out_ap_vld,
        array_back2_weight_changes_out,
        array_back2_weight_changes_out_ap_vld,
        array_back2_weight_changes_4_out,
        array_back2_weight_changes_4_out_ap_vld,
        array_back2_weight_changes_5_out,
        array_back2_weight_changes_5_out_ap_vld,
        array_back2_weight_changes_6_out,
        array_back2_weight_changes_6_out_ap_vld,
        array_back2_bias_change_out,
        array_back2_bias_change_out_ap_vld,
        array_back2_bias_change_2_out,
        array_back2_bias_change_2_out_ap_vld,
        array_back1_weight_changes_out,
        array_back1_weight_changes_out_ap_vld,
        array_back1_weight_changes_4_out,
        array_back1_weight_changes_4_out_ap_vld,
        array_back1_weight_changes_5_out,
        array_back1_weight_changes_5_out_ap_vld,
        array_back1_weight_changes_6_out,
        array_back1_weight_changes_6_out_ap_vld,
        array_back1_bias_change_out,
        array_back1_bias_change_out_ap_vld,
        array_back1_bias_change_2_out,
        array_back1_bias_change_2_out_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_pp0_stage0 = 15'd2;
parameter    ap_ST_fsm_pp0_stage1 = 15'd4;
parameter    ap_ST_fsm_pp0_stage2 = 15'd8;
parameter    ap_ST_fsm_pp0_stage3 = 15'd16;
parameter    ap_ST_fsm_pp0_stage4 = 15'd32;
parameter    ap_ST_fsm_pp0_stage5 = 15'd64;
parameter    ap_ST_fsm_pp0_stage6 = 15'd128;
parameter    ap_ST_fsm_pp0_stage7 = 15'd256;
parameter    ap_ST_fsm_pp0_stage8 = 15'd512;
parameter    ap_ST_fsm_pp0_stage9 = 15'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 15'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 15'd4096;
parameter    ap_ST_fsm_state16 = 15'd8192;
parameter    ap_ST_fsm_state17 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] bias_2_local_1_0;
input  [15:0] bias_2_local_0;
input  [15:0] bias_1_local_1_0;
input  [15:0] bias_1_local_0;
input  [15:0] w2_local_3_0;
input  [15:0] w2_local_2_0;
input  [15:0] w2_local_1_0;
input  [15:0] w2_local_0;
input  [15:0] w1_local_3_0;
input  [15:0] w1_local_2_0;
input  [15:0] w1_local_1_0;
input  [15:0] w1_local_0;
input  [15:0] mux_case_15664;
input  [15:0] mux_case_05560;
input  [15:0] mux_case_15456;
input  [15:0] mux_case_05352;
input  [15:0] mux_case_15248;
input  [15:0] mux_case_05144;
input  [15:0] mux_case_15040;
input  [15:0] mux_case_04936;
input  [15:0] mux_case_14832;
input  [15:0] mux_case_04728;
input  [15:0] mux_case_14624;
input  [15:0] mux_case_04520;
input  [15:0] retval_0_3_0_0_0_load82;
input  [15:0] retval_0_2_0_0_0_load76;
input  [15:0] retval_0_1_0_0_0_load70;
input  [15:0] retval_0_0_0_0_0_load64;
input  [15:0] training;
input  [0:0] cmp_i_i100;
output  [15:0] bias_2_local_1_1_out;
output   bias_2_local_1_1_out_ap_vld;
output  [15:0] bias_2_local_193_out;
output   bias_2_local_193_out_ap_vld;
output  [15:0] bias_1_local_1_1_out;
output   bias_1_local_1_1_out_ap_vld;
output  [15:0] bias_1_local_191_out;
output   bias_1_local_191_out_ap_vld;
output  [15:0] w2_local_3_1_out;
output   w2_local_3_1_out_ap_vld;
output  [15:0] w2_local_2_1_out;
output   w2_local_2_1_out_ap_vld;
output  [15:0] w2_local_1_1_out;
output   w2_local_1_1_out_ap_vld;
output  [15:0] w2_local_189_out;
output   w2_local_189_out_ap_vld;
output  [15:0] w1_local_3_1_out;
output   w1_local_3_1_out_ap_vld;
output  [15:0] w1_local_2_1_out;
output   w1_local_2_1_out_ap_vld;
output  [15:0] w1_local_1_1_out;
output   w1_local_1_1_out_ap_vld;
output  [15:0] w1_local_187_out;
output   w1_local_187_out_ap_vld;
output  [15:0] mux_case_15663_out;
output   mux_case_15663_out_ap_vld;
output  [15:0] mux_case_05559_out;
output   mux_case_05559_out_ap_vld;
output  [15:0] mux_case_15455_out;
output   mux_case_15455_out_ap_vld;
output  [15:0] mux_case_05351_out;
output   mux_case_05351_out_ap_vld;
output  [15:0] mux_case_15247_out;
output   mux_case_15247_out_ap_vld;
output  [15:0] mux_case_05143_out;
output   mux_case_05143_out_ap_vld;
output  [15:0] mux_case_15039_out;
output   mux_case_15039_out_ap_vld;
output  [15:0] mux_case_04935_out;
output   mux_case_04935_out_ap_vld;
output  [15:0] mux_case_14831_out;
output   mux_case_14831_out_ap_vld;
output  [15:0] mux_case_04727_out;
output   mux_case_04727_out_ap_vld;
output  [15:0] mux_case_14623_out;
output   mux_case_14623_out_ap_vld;
output  [15:0] mux_case_04519_out;
output   mux_case_04519_out_ap_vld;
output  [15:0] retval_0_3_0_0_0_load81_out;
output   retval_0_3_0_0_0_load81_out_ap_vld;
output  [15:0] retval_0_2_0_0_0_load75_out;
output   retval_0_2_0_0_0_load75_out_ap_vld;
output  [15:0] retval_0_1_0_0_0_load69_out;
output   retval_0_1_0_0_0_load69_out_ap_vld;
output  [15:0] retval_0_0_0_0_0_load63_out;
output   retval_0_0_0_0_0_load63_out_ap_vld;
output  [15:0] retval_0_3_0_0_0_load_out;
output   retval_0_3_0_0_0_load_out_ap_vld;
output  [15:0] retval_0_2_0_0_0_load_out;
output   retval_0_2_0_0_0_load_out_ap_vld;
output  [15:0] retval_0_1_0_0_0_load_out;
output   retval_0_1_0_0_0_load_out_ap_vld;
output  [15:0] retval_0_0_0_0_0_load_out;
output   retval_0_0_0_0_0_load_out_ap_vld;
output  [15:0] array_back2_weight_changes_out;
output   array_back2_weight_changes_out_ap_vld;
output  [15:0] array_back2_weight_changes_4_out;
output   array_back2_weight_changes_4_out_ap_vld;
output  [15:0] array_back2_weight_changes_5_out;
output   array_back2_weight_changes_5_out_ap_vld;
output  [15:0] array_back2_weight_changes_6_out;
output   array_back2_weight_changes_6_out_ap_vld;
output  [15:0] array_back2_bias_change_out;
output   array_back2_bias_change_out_ap_vld;
output  [15:0] array_back2_bias_change_2_out;
output   array_back2_bias_change_2_out_ap_vld;
output  [15:0] array_back1_weight_changes_out;
output   array_back1_weight_changes_out_ap_vld;
output  [15:0] array_back1_weight_changes_4_out;
output   array_back1_weight_changes_4_out_ap_vld;
output  [15:0] array_back1_weight_changes_5_out;
output   array_back1_weight_changes_5_out_ap_vld;
output  [15:0] array_back1_weight_changes_6_out;
output   array_back1_weight_changes_6_out_ap_vld;
output  [15:0] array_back1_bias_change_out;
output   array_back1_bias_change_out_ap_vld;
output  [15:0] array_back1_bias_change_2_out;
output   array_back1_bias_change_2_out_ap_vld;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] bias_2_local_1_1_out;
reg bias_2_local_1_1_out_ap_vld;
reg[15:0] bias_2_local_193_out;
reg bias_2_local_193_out_ap_vld;
reg[15:0] bias_1_local_1_1_out;
reg bias_1_local_1_1_out_ap_vld;
reg[15:0] bias_1_local_191_out;
reg bias_1_local_191_out_ap_vld;
reg[15:0] w2_local_3_1_out;
reg w2_local_3_1_out_ap_vld;
reg[15:0] w2_local_2_1_out;
reg w2_local_2_1_out_ap_vld;
reg[15:0] w2_local_1_1_out;
reg w2_local_1_1_out_ap_vld;
reg[15:0] w2_local_189_out;
reg w2_local_189_out_ap_vld;
reg[15:0] w1_local_3_1_out;
reg w1_local_3_1_out_ap_vld;
reg[15:0] w1_local_2_1_out;
reg w1_local_2_1_out_ap_vld;
reg[15:0] w1_local_1_1_out;
reg w1_local_1_1_out_ap_vld;
reg[15:0] w1_local_187_out;
reg w1_local_187_out_ap_vld;
reg mux_case_15663_out_ap_vld;
reg mux_case_05559_out_ap_vld;
reg mux_case_15455_out_ap_vld;
reg mux_case_05351_out_ap_vld;
reg mux_case_15247_out_ap_vld;
reg mux_case_05143_out_ap_vld;
reg mux_case_15039_out_ap_vld;
reg mux_case_04935_out_ap_vld;
reg mux_case_14831_out_ap_vld;
reg mux_case_04727_out_ap_vld;
reg mux_case_14623_out_ap_vld;
reg mux_case_04519_out_ap_vld;
reg[15:0] retval_0_3_0_0_0_load81_out;
reg retval_0_3_0_0_0_load81_out_ap_vld;
reg[15:0] retval_0_2_0_0_0_load75_out;
reg retval_0_2_0_0_0_load75_out_ap_vld;
reg[15:0] retval_0_1_0_0_0_load69_out;
reg retval_0_1_0_0_0_load69_out_ap_vld;
reg[15:0] retval_0_0_0_0_0_load63_out;
reg retval_0_0_0_0_0_load63_out_ap_vld;
reg retval_0_3_0_0_0_load_out_ap_vld;
reg retval_0_2_0_0_0_load_out_ap_vld;
reg retval_0_1_0_0_0_load_out_ap_vld;
reg retval_0_0_0_0_0_load_out_ap_vld;
reg array_back2_weight_changes_out_ap_vld;
reg array_back2_weight_changes_4_out_ap_vld;
reg array_back2_weight_changes_5_out_ap_vld;
reg array_back2_weight_changes_6_out_ap_vld;
reg array_back2_bias_change_out_ap_vld;
reg array_back2_bias_change_2_out_ap_vld;
reg array_back1_weight_changes_out_ap_vld;
reg array_back1_weight_changes_4_out_ap_vld;
reg array_back1_weight_changes_5_out_ap_vld;
reg array_back1_weight_changes_6_out_ap_vld;
reg array_back1_bias_change_out_ap_vld;
reg array_back1_bias_change_2_out_ap_vld;
reg[0:0] ap_return;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] j_1_reg_2341;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] j_1_reg_2341_pp0_iter1_reg;
wire   [0:0] icmp_ln69_fu_1137_p2;
reg   [0:0] icmp_ln69_reg_2352;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] icmp_ln69_reg_2352_pp0_iter1_reg;
wire   [0:0] and_ln143_fu_1155_p2;
reg   [0:0] and_ln143_reg_2356;
reg   [0:0] and_ln143_reg_2356_pp0_iter1_reg;
reg   [15:0] w1_local_187_load_1_reg_2360;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg   [15:0] w1_local_1_1_load_1_reg_2366;
reg   [15:0] w1_local_2_1_load_1_reg_2372;
reg   [15:0] w1_local_3_1_load_1_reg_2378;
reg   [15:0] bias_1_local_191_load_1_reg_2384;
reg   [15:0] bias_1_local_1_1_load_1_reg_2390;
wire   [1:0] trunc_ln69_fu_1189_p1;
reg   [1:0] trunc_ln69_reg_2396;
wire   [15:0] zext_ln73_fu_1216_p1;
reg   [15:0] zext_ln73_reg_2401;
wire   [15:0] zext_ln72_fu_1245_p1;
reg   [15:0] zext_ln72_reg_2406;
reg   [15:0] w2_local_189_load_1_reg_2411;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
reg   [15:0] w2_local_1_1_load_1_reg_2417;
reg   [15:0] w2_local_2_1_load_1_reg_2423;
reg   [15:0] w2_local_3_1_load_1_reg_2429;
reg   [15:0] bias_2_local_193_load_1_reg_2435;
reg   [15:0] bias_2_local_1_1_load_1_reg_2441;
reg   [15:0] array_out1_output_k_reg_2447;
reg   [15:0] array_out1_output_k_2_reg_2452;
wire   [0:0] icmp_ln93_fu_1279_p2;
reg   [0:0] icmp_ln93_reg_2457;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_11001;
wire   [0:0] tmp_fu_1285_p3;
reg   [0:0] tmp_reg_2463;
wire   [15:0] select_ln93_fu_1299_p3;
reg   [15:0] select_ln93_reg_2468;
wire   [10:0] trunc_ln93_fu_1337_p1;
reg   [10:0] trunc_ln93_reg_2473;
wire   [31:0] sub_ln93_1_fu_1341_p2;
reg   [31:0] sub_ln93_1_reg_2478;
wire   [1:0] or_ln_fu_1441_p3;
reg   [1:0] or_ln_reg_2484;
wire   [0:0] icmp_ln93_3_fu_1449_p2;
reg   [0:0] icmp_ln93_3_reg_2489;
wire   [63:0] zext_ln93_fu_1503_p1;
reg   [63:0] zext_ln93_reg_2494;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_11001;
wire   [63:0] lshr_ln93_fu_1515_p2;
reg   [63:0] lshr_ln93_reg_2499;
wire   [63:0] bitcast_ln748_fu_1610_p1;
reg   [63:0] bitcast_ln748_reg_2504;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_11001;
wire   [0:0] or_ln93_1_fu_1637_p2;
reg   [0:0] or_ln93_1_reg_2509;
wire   [0:0] grp_fu_907_p2;
reg   [0:0] tmp_1_reg_2515;
wire   [0:0] and_ln93_2_fu_1657_p2;
reg   [0:0] and_ln93_2_reg_2520;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_11001;
wire   [0:0] or_ln96_fu_1675_p2;
reg   [0:0] or_ln96_reg_2528;
reg   [15:0] array_back2_weight_changes_reg_2536;
reg   [15:0] array_back2_weight_changes_4_reg_2541;
reg   [15:0] array_back2_weight_changes_5_reg_2546;
reg   [15:0] array_back2_weight_changes_6_reg_2551;
reg   [15:0] array_back2_bias_change_reg_2556;
reg   [15:0] array_back2_bias_change_2_reg_2561;
reg   [15:0] retval_0_0_0_0_0_load_2_reg_2566;
reg    ap_enable_reg_pp0_iter1;
reg   [15:0] retval_0_1_0_0_0_load_2_reg_2571;
reg   [15:0] retval_0_2_0_0_0_load_2_reg_2576;
reg   [15:0] retval_0_3_0_0_0_load_2_reg_2581;
wire   [15:0] retval_0_3_0_0_0_load_fu_1819_p9;
reg   [15:0] retval_0_3_0_0_0_load_reg_2586;
wire   [15:0] retval_0_2_0_0_0_load_fu_1862_p9;
reg   [15:0] retval_0_2_0_0_0_load_reg_2591;
wire   [15:0] retval_0_1_0_0_0_load_fu_1905_p9;
reg   [15:0] retval_0_1_0_0_0_load_reg_2596;
wire   [15:0] retval_0_0_0_0_0_load_fu_1948_p9;
reg   [15:0] retval_0_0_0_0_0_load_reg_2601;
reg   [15:0] array_back1_weight_changes_reg_2606;
reg   [15:0] array_back1_weight_changes_4_reg_2611;
reg   [15:0] array_back1_weight_changes_5_reg_2616;
reg   [15:0] array_back1_weight_changes_6_reg_2621;
reg   [15:0] array_back1_bias_change_reg_2626;
reg   [15:0] array_back1_bias_change_2_reg_2631;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11_subdone;
reg    ap_predicate_tran15to16_state13;
reg    ap_condition_pp0_flush_enable;
wire    ap_block_pp0_stage1_subdone;
wire    grp_model_array_fu_890_ap_start;
wire    grp_model_array_fu_890_ap_done;
wire    grp_model_array_fu_890_ap_idle;
wire    grp_model_array_fu_890_ap_ready;
reg   [15:0] grp_model_array_fu_890_p_read10;
reg   [15:0] grp_model_array_fu_890_p_read29;
reg   [15:0] grp_model_array_fu_890_p_read30;
reg   [15:0] grp_model_array_fu_890_p_read31;
reg   [15:0] grp_model_array_fu_890_p_read32;
reg   [15:0] grp_model_array_fu_890_p_read33;
reg   [15:0] grp_model_array_fu_890_p_read34;
reg   [15:0] grp_model_array_fu_890_p_read35;
reg   [15:0] grp_model_array_fu_890_p_read36;
reg   [15:0] grp_model_array_fu_890_p_read37;
wire   [15:0] grp_model_array_fu_890_ap_return_0;
wire   [15:0] grp_model_array_fu_890_ap_return_1;
wire   [15:0] grp_model_array_fu_890_ap_return_2;
wire   [15:0] grp_model_array_fu_890_ap_return_3;
wire   [15:0] grp_model_array_fu_890_ap_return_4;
wire   [15:0] grp_model_array_fu_890_ap_return_5;
wire   [15:0] grp_model_array_fu_890_ap_return_6;
wire   [15:0] grp_model_array_fu_890_ap_return_7;
wire   [15:0] grp_model_array_fu_890_ap_return_8;
wire   [15:0] grp_model_array_fu_890_ap_return_9;
reg   [0:0] ap_phi_mux_UnifiedRetVal_phi_fu_882_p4;
reg   [0:0] UnifiedRetVal_reg_878;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state16;
reg    grp_model_array_fu_890_ap_start_reg;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_pp0_stage1_ignoreCallOp126;
wire    ap_block_pp0_stage4_ignoreCallOp138;
wire    ap_block_pp0_stage7_ignoreCallOp175;
wire    ap_block_pp0_stage10_ignoreCallOp219;
wire   [15:0] delta_2_1_fu_1494_p3;
reg   [2:0] j_fu_274;
wire   [2:0] add_ln69_fu_1143_p2;
wire    ap_block_pp0_stage0;
reg   [15:0] retval_0_0_0_0_0_load63_fu_278;
wire    ap_block_pp0_stage1;
reg   [15:0] retval_0_1_0_0_0_load69_fu_282;
reg   [15:0] retval_0_2_0_0_0_load75_fu_286;
reg   [15:0] retval_0_3_0_0_0_load81_fu_290;
reg   [15:0] mux_case_04519_fu_294;
reg   [15:0] mux_case_14623_fu_298;
reg   [15:0] mux_case_04727_fu_302;
reg   [15:0] mux_case_14831_fu_306;
reg   [15:0] mux_case_04935_fu_310;
reg   [15:0] mux_case_15039_fu_314;
reg   [15:0] mux_case_05143_fu_318;
reg   [15:0] mux_case_15247_fu_322;
reg   [15:0] mux_case_05351_fu_326;
reg   [15:0] mux_case_15455_fu_330;
reg   [15:0] mux_case_05559_fu_334;
reg   [15:0] mux_case_15663_fu_338;
reg   [15:0] w1_local_187_fu_342;
reg   [15:0] ap_sig_allocacmp_w1_local_187_load_1;
reg   [15:0] w1_local_1_1_fu_346;
reg   [15:0] ap_sig_allocacmp_w1_local_1_1_load_1;
reg   [15:0] w1_local_2_1_fu_350;
reg   [15:0] ap_sig_allocacmp_w1_local_2_1_load_1;
reg   [15:0] w1_local_3_1_fu_354;
reg   [15:0] ap_sig_allocacmp_w1_local_3_1_load_1;
reg   [15:0] w2_local_189_fu_358;
wire    ap_block_pp0_stage4;
reg   [15:0] w2_local_1_1_fu_362;
reg   [15:0] w2_local_2_1_fu_366;
reg   [15:0] w2_local_3_1_fu_370;
reg   [15:0] bias_1_local_191_fu_374;
reg   [15:0] ap_sig_allocacmp_bias_1_local_191_load_1;
reg   [15:0] bias_1_local_1_1_fu_378;
reg   [15:0] ap_sig_allocacmp_bias_1_local_1_1_load_1;
reg   [15:0] bias_2_local_193_fu_382;
reg   [15:0] bias_2_local_1_1_fu_386;
reg   [63:0] grp_fu_907_p0;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage7;
wire   [0:0] icmp_ln143_fu_1149_p2;
wire   [9:0] output_0_fu_1192_p9;
wire   [9:0] output_0_fu_1192_p11;
wire   [9:0] output_0_1_fu_1221_p9;
wire   [9:0] output_0_1_fu_1221_p11;
wire   [15:0] sub_ln93_fu_1293_p2;
reg   [15:0] tmp_2_fu_1307_p4;
wire   [16:0] tmp_3_fu_1317_p3;
wire  signed [31:0] sext_ln93_fu_1325_p1;
reg   [31:0] tmp_4_fu_1329_p3;
wire   [31:0] add_ln93_fu_1347_p2;
wire   [30:0] tmp_5_fu_1353_p4;
wire   [3:0] trunc_ln93_2_fu_1369_p1;
wire   [3:0] sub_ln93_4_fu_1373_p2;
wire   [15:0] zext_ln93_5_fu_1379_p1;
wire   [15:0] lshr_ln93_2_fu_1383_p2;
wire   [15:0] and_ln93_3_fu_1389_p2;
wire   [0:0] icmp_ln93_1_fu_1363_p2;
wire   [0:0] icmp_ln93_2_fu_1395_p2;
wire   [0:0] tmp_6_fu_1407_p3;
wire   [0:0] tmp_7_fu_1421_p3;
wire   [0:0] xor_ln93_1_fu_1415_p2;
wire   [0:0] and_ln93_fu_1429_p2;
wire   [0:0] phi_ln93_fu_1401_p2;
wire   [0:0] or_ln93_fu_1435_p2;
wire   [9:0] zext_ln106_cast_fu_1461_p9;
wire   [9:0] zext_ln106_cast_fu_1461_p11;
wire   [15:0] zext_ln106_fu_1484_p1;
wire   [0:0] icmp_ln105_fu_1455_p2;
wire   [15:0] delta_2_fu_1488_p2;
wire    ap_block_pp0_stage8;
wire   [31:0] add_ln93_1_fu_1506_p2;
wire   [63:0] zext_ln93_1_fu_1511_p1;
wire   [31:0] sub_ln93_2_fu_1521_p2;
wire   [63:0] zext_ln93_2_fu_1526_p1;
wire   [63:0] shl_ln93_fu_1530_p2;
wire   [63:0] cond50_i_i315_fu_1535_p3;
wire   [63:0] zext_ln93_3_fu_1541_p1;
wire   [63:0] add_ln93_2_fu_1544_p2;
wire   [62:0] lshr_ln93_1_fu_1550_p4;
wire   [0:0] tmp_9_fu_1564_p3;
wire   [10:0] select_ln93_1_fu_1572_p3;
wire   [10:0] sub_ln93_3_fu_1580_p2;
wire   [10:0] add_ln93_3_fu_1585_p2;
wire   [63:0] zext_ln93_4_fu_1560_p1;
wire   [11:0] tmp_s_fu_1591_p3;
wire   [63:0] LD_fu_1598_p5;
wire   [51:0] trunc_ln93_1_fu_1615_p4;
wire   [0:0] icmp_ln93_5_fu_1631_p2;
wire   [0:0] icmp_ln93_4_fu_1625_p2;
wire   [0:0] and_ln93_1_fu_1643_p2;
wire   [0:0] xor_ln93_fu_1652_p2;
wire   [0:0] and_ln96_fu_1647_p2;
wire   [0:0] xor_ln96_fu_1663_p2;
wire   [0:0] and_ln96_1_fu_1669_p2;
wire   [0:0] icmp_ln94_fu_1762_p2;
wire   [0:0] icmp_ln94_1_fu_1767_p2;
wire   [0:0] icmp_ln94_2_fu_1772_p2;
wire   [0:0] and_ln94_1_fu_1782_p2;
wire   [0:0] and_ln94_fu_1777_p2;
wire   [0:0] and_ln96_3_fu_1800_p2;
wire   [0:0] and_ln96_2_fu_1794_p2;
wire   [0:0] and_ln94_2_fu_1788_p2;
wire   [0:0] and_ln96_4_fu_1805_p2;
wire   [15:0] retval_0_3_0_0_0_load_fu_1819_p7;
wire   [1:0] retval_0_3_0_0_0_load_fu_1819_p8;
wire   [0:0] icmp_ln94_3_fu_1839_p2;
wire   [0:0] and_ln94_3_fu_1844_p2;
wire   [0:0] and_ln96_5_fu_1849_p2;
wire   [15:0] retval_0_2_0_0_0_load_fu_1862_p7;
wire   [1:0] retval_0_2_0_0_0_load_fu_1862_p8;
wire   [0:0] icmp_ln94_4_fu_1882_p2;
wire   [0:0] and_ln94_4_fu_1887_p2;
wire   [0:0] and_ln96_6_fu_1892_p2;
wire   [15:0] retval_0_1_0_0_0_load_fu_1905_p7;
wire   [1:0] retval_0_1_0_0_0_load_fu_1905_p8;
wire   [0:0] icmp_ln94_5_fu_1925_p2;
wire   [0:0] and_ln94_5_fu_1930_p2;
wire   [0:0] and_ln96_7_fu_1935_p2;
wire   [15:0] retval_0_0_0_0_0_load_fu_1948_p7;
wire   [1:0] retval_0_0_0_0_0_load_fu_1948_p8;
reg   [4:0] grp_fu_907_opcode;
wire    ap_block_pp0_stage9_00001;
wire    ap_block_pp0_stage10_00001;
reg   [0:0] ap_return_preg;
reg   [14:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_block_pp0_stage0_subdone;
reg   [1:0] ap_exit_tran_regpp0;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [1:0] output_0_fu_1192_p1;
wire   [1:0] output_0_fu_1192_p3;
wire  signed [1:0] output_0_fu_1192_p5;
wire  signed [1:0] output_0_fu_1192_p7;
wire   [1:0] output_0_1_fu_1221_p1;
wire   [1:0] output_0_1_fu_1221_p3;
wire  signed [1:0] output_0_1_fu_1221_p5;
wire  signed [1:0] output_0_1_fu_1221_p7;
wire   [1:0] zext_ln106_cast_fu_1461_p1;
wire   [1:0] zext_ln106_cast_fu_1461_p3;
wire  signed [1:0] zext_ln106_cast_fu_1461_p5;
wire  signed [1:0] zext_ln106_cast_fu_1461_p7;
wire  signed [1:0] retval_0_3_0_0_0_load_fu_1819_p1;
wire   [1:0] retval_0_3_0_0_0_load_fu_1819_p3;
wire   [1:0] retval_0_3_0_0_0_load_fu_1819_p5;
wire  signed [1:0] retval_0_2_0_0_0_load_fu_1862_p1;
wire   [1:0] retval_0_2_0_0_0_load_fu_1862_p3;
wire   [1:0] retval_0_2_0_0_0_load_fu_1862_p5;
wire  signed [1:0] retval_0_1_0_0_0_load_fu_1905_p1;
wire   [1:0] retval_0_1_0_0_0_load_fu_1905_p3;
wire   [1:0] retval_0_1_0_0_0_load_fu_1905_p5;
wire  signed [1:0] retval_0_0_0_0_0_load_fu_1948_p1;
wire   [1:0] retval_0_0_0_0_0_load_fu_1948_p3;
wire   [1:0] retval_0_0_0_0_0_load_fu_1948_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_model_array_fu_890_ap_start_reg = 1'b0;
#0 j_fu_274 = 3'd0;
#0 retval_0_0_0_0_0_load63_fu_278 = 16'd0;
#0 retval_0_1_0_0_0_load69_fu_282 = 16'd0;
#0 retval_0_2_0_0_0_load75_fu_286 = 16'd0;
#0 retval_0_3_0_0_0_load81_fu_290 = 16'd0;
#0 mux_case_04519_fu_294 = 16'd0;
#0 mux_case_14623_fu_298 = 16'd0;
#0 mux_case_04727_fu_302 = 16'd0;
#0 mux_case_14831_fu_306 = 16'd0;
#0 mux_case_04935_fu_310 = 16'd0;
#0 mux_case_15039_fu_314 = 16'd0;
#0 mux_case_05143_fu_318 = 16'd0;
#0 mux_case_15247_fu_322 = 16'd0;
#0 mux_case_05351_fu_326 = 16'd0;
#0 mux_case_15455_fu_330 = 16'd0;
#0 mux_case_05559_fu_334 = 16'd0;
#0 mux_case_15663_fu_338 = 16'd0;
#0 w1_local_187_fu_342 = 16'd0;
#0 w1_local_1_1_fu_346 = 16'd0;
#0 w1_local_2_1_fu_350 = 16'd0;
#0 w1_local_3_1_fu_354 = 16'd0;
#0 w2_local_189_fu_358 = 16'd0;
#0 w2_local_1_1_fu_362 = 16'd0;
#0 w2_local_2_1_fu_366 = 16'd0;
#0 w2_local_3_1_fu_370 = 16'd0;
#0 bias_1_local_191_fu_374 = 16'd0;
#0 bias_1_local_1_1_fu_378 = 16'd0;
#0 bias_2_local_193_fu_382 = 16'd0;
#0 bias_2_local_1_1_fu_386 = 16'd0;
#0 ap_return_preg = 1'd0;
end

accelerator_model_array grp_model_array_fu_890(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_model_array_fu_890_ap_start),
    .ap_done(grp_model_array_fu_890_ap_done),
    .ap_idle(grp_model_array_fu_890_ap_idle),
    .ap_ready(grp_model_array_fu_890_ap_ready),
    .ap_ce(1'b1),
    .p_read10(grp_model_array_fu_890_p_read10),
    .p_read29(grp_model_array_fu_890_p_read29),
    .p_read30(grp_model_array_fu_890_p_read30),
    .p_read31(grp_model_array_fu_890_p_read31),
    .p_read32(grp_model_array_fu_890_p_read32),
    .p_read33(grp_model_array_fu_890_p_read33),
    .p_read34(grp_model_array_fu_890_p_read34),
    .p_read35(grp_model_array_fu_890_p_read35),
    .p_read36(grp_model_array_fu_890_p_read36),
    .p_read37(grp_model_array_fu_890_p_read37),
    .training(training),
    .ap_return_0(grp_model_array_fu_890_ap_return_0),
    .ap_return_1(grp_model_array_fu_890_ap_return_1),
    .ap_return_2(grp_model_array_fu_890_ap_return_2),
    .ap_return_3(grp_model_array_fu_890_ap_return_3),
    .ap_return_4(grp_model_array_fu_890_ap_return_4),
    .ap_return_5(grp_model_array_fu_890_ap_return_5),
    .ap_return_6(grp_model_array_fu_890_ap_return_6),
    .ap_return_7(grp_model_array_fu_890_ap_return_7),
    .ap_return_8(grp_model_array_fu_890_ap_return_8),
    .ap_return_9(grp_model_array_fu_890_ap_return_9)
);

accelerator_dcmp_64ns_64ns_1_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_1_no_dsp_1_U51(
    .din0(grp_fu_907_p0),
    .din1(64'd4602678819172646912),
    .opcode(grp_fu_907_opcode),
    .dout(grp_fu_907_p2)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_9_2_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
sparsemux_9_2_10_1_1_U52(
    .din0(10'd0),
    .din1(10'd0),
    .din2(10'd512),
    .din3(10'd512),
    .def(output_0_fu_1192_p9),
    .sel(trunc_ln69_fu_1189_p1),
    .dout(output_0_fu_1192_p11)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_9_2_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
sparsemux_9_2_10_1_1_U53(
    .din0(10'd0),
    .din1(10'd512),
    .din2(10'd0),
    .din3(10'd512),
    .def(output_0_1_fu_1221_p9),
    .sel(trunc_ln69_fu_1189_p1),
    .dout(output_0_1_fu_1221_p11)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_9_2_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 10 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 10 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 10 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 10 ),
    .def_WIDTH( 10 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
sparsemux_9_2_10_1_1_U54(
    .din0(10'd0),
    .din1(10'd512),
    .din2(10'd512),
    .din3(10'd0),
    .def(zext_ln106_cast_fu_1461_p9),
    .sel(trunc_ln69_reg_2396),
    .dout(zext_ln106_cast_fu_1461_p11)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U55(
    .din0(16'd512),
    .din1(16'd0),
    .din2(retval_0_3_0_0_0_load81_fu_290),
    .def(retval_0_3_0_0_0_load_fu_1819_p7),
    .sel(retval_0_3_0_0_0_load_fu_1819_p8),
    .dout(retval_0_3_0_0_0_load_fu_1819_p9)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U56(
    .din0(16'd512),
    .din1(16'd0),
    .din2(retval_0_2_0_0_0_load75_fu_286),
    .def(retval_0_2_0_0_0_load_fu_1862_p7),
    .sel(retval_0_2_0_0_0_load_fu_1862_p8),
    .dout(retval_0_2_0_0_0_load_fu_1862_p9)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U57(
    .din0(16'd512),
    .din1(16'd0),
    .din2(retval_0_1_0_0_0_load69_fu_282),
    .def(retval_0_1_0_0_0_load_fu_1905_p7),
    .sel(retval_0_1_0_0_0_load_fu_1905_p8),
    .dout(retval_0_1_0_0_0_load_fu_1905_p9)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U58(
    .din0(16'd512),
    .din1(16'd0),
    .din2(retval_0_0_0_0_0_load63_fu_278),
    .def(retval_0_0_0_0_0_load_fu_1948_p7),
    .sel(retval_0_0_0_0_0_load_fu_1948_p8),
    .dout(retval_0_0_0_0_0_load_fu_1948_p9)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_882_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_model_array_fu_890_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_fu_1137_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            grp_model_array_fu_890_ap_start_reg <= 1'b1;
        end else if ((grp_model_array_fu_890_ap_ready == 1'b1)) begin
            grp_model_array_fu_890_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        UnifiedRetVal_reg_878 <= 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        UnifiedRetVal_reg_878 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone))) begin
        if ((icmp_ln69_reg_2352 == 1'd1)) begin
                        ap_exit_tran_regpp0[0] <= 1'b1;
        end else if ((ap_predicate_tran15to16_state13 == 1'b1)) begin
                        ap_exit_tran_regpp0[0] <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bias_1_local_191_fu_374 <= bias_1_local_0;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        bias_1_local_191_fu_374 <= grp_model_array_fu_890_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bias_1_local_1_1_fu_378 <= bias_1_local_1_0;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        bias_1_local_1_1_fu_378 <= grp_model_array_fu_890_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bias_2_local_193_fu_382 <= bias_2_local_0;
    end else if (((1'd0 == and_ln143_reg_2356) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        bias_2_local_193_fu_382 <= grp_model_array_fu_890_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bias_2_local_1_1_fu_386 <= bias_2_local_1_0;
    end else if (((1'd0 == and_ln143_reg_2356) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        bias_2_local_1_1_fu_386 <= grp_model_array_fu_890_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_fu_274 <= 3'd0;
    end else if (((1'd0 == and_ln143_fu_1155_p2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_fu_1137_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_fu_274 <= add_ln69_fu_1143_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_04519_fu_294 <= mux_case_04520;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mux_case_04519_fu_294 <= grp_model_array_fu_890_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_04727_fu_302 <= mux_case_04728;
    end else if (((1'd0 == and_ln143_reg_2356) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        mux_case_04727_fu_302 <= grp_model_array_fu_890_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_04935_fu_310 <= mux_case_04936;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mux_case_04935_fu_310 <= grp_model_array_fu_890_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_05143_fu_318 <= mux_case_05144;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mux_case_05143_fu_318 <= grp_model_array_fu_890_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_05351_fu_326 <= mux_case_05352;
    end else if (((1'd0 == and_ln143_reg_2356) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        mux_case_05351_fu_326 <= grp_model_array_fu_890_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_05559_fu_334 <= mux_case_05560;
    end else if (((1'd0 == and_ln143_reg_2356) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        mux_case_05559_fu_334 <= grp_model_array_fu_890_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_14623_fu_298 <= mux_case_14624;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mux_case_14623_fu_298 <= grp_model_array_fu_890_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_14831_fu_306 <= mux_case_14832;
    end else if (((1'd0 == and_ln143_reg_2356) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        mux_case_14831_fu_306 <= grp_model_array_fu_890_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_15039_fu_314 <= mux_case_15040;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mux_case_15039_fu_314 <= grp_model_array_fu_890_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_15247_fu_322 <= mux_case_15248;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mux_case_15247_fu_322 <= grp_model_array_fu_890_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_15455_fu_330 <= mux_case_15456;
    end else if (((1'd0 == and_ln143_reg_2356) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        mux_case_15455_fu_330 <= grp_model_array_fu_890_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_15663_fu_338 <= mux_case_15664;
    end else if (((1'd0 == and_ln143_reg_2356) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        mux_case_15663_fu_338 <= grp_model_array_fu_890_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        retval_0_0_0_0_0_load63_fu_278 <= retval_0_0_0_0_0_load64;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        retval_0_0_0_0_0_load63_fu_278 <= retval_0_0_0_0_0_load_fu_1948_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        retval_0_1_0_0_0_load69_fu_282 <= retval_0_1_0_0_0_load70;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        retval_0_1_0_0_0_load69_fu_282 <= retval_0_1_0_0_0_load_fu_1905_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        retval_0_2_0_0_0_load75_fu_286 <= retval_0_2_0_0_0_load76;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        retval_0_2_0_0_0_load75_fu_286 <= retval_0_2_0_0_0_load_fu_1862_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        retval_0_3_0_0_0_load81_fu_290 <= retval_0_3_0_0_0_load82;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        retval_0_3_0_0_0_load81_fu_290 <= retval_0_3_0_0_0_load_fu_1819_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w1_local_187_fu_342 <= w1_local_0;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        w1_local_187_fu_342 <= grp_model_array_fu_890_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w1_local_1_1_fu_346 <= w1_local_1_0;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        w1_local_1_1_fu_346 <= grp_model_array_fu_890_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w1_local_2_1_fu_350 <= w1_local_2_0;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        w1_local_2_1_fu_350 <= grp_model_array_fu_890_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w1_local_3_1_fu_354 <= w1_local_3_0;
    end else if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        w1_local_3_1_fu_354 <= grp_model_array_fu_890_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w2_local_189_fu_358 <= w2_local_0;
    end else if (((1'd0 == and_ln143_reg_2356) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        w2_local_189_fu_358 <= grp_model_array_fu_890_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w2_local_1_1_fu_362 <= w2_local_1_0;
    end else if (((1'd0 == and_ln143_reg_2356) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        w2_local_1_1_fu_362 <= grp_model_array_fu_890_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w2_local_2_1_fu_366 <= w2_local_2_0;
    end else if (((1'd0 == and_ln143_reg_2356) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        w2_local_2_1_fu_366 <= grp_model_array_fu_890_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w2_local_3_1_fu_370 <= w2_local_3_0;
    end else if (((1'd0 == and_ln143_reg_2356) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        w2_local_3_1_fu_370 <= grp_model_array_fu_890_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln143_reg_2356 <= and_ln143_fu_1155_p2;
        and_ln143_reg_2356_pp0_iter1_reg <= and_ln143_reg_2356;
        icmp_ln69_reg_2352_pp0_iter1_reg <= icmp_ln69_reg_2352;
        j_1_reg_2341 <= j_fu_274;
        j_1_reg_2341_pp0_iter1_reg <= j_1_reg_2341;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        and_ln93_2_reg_2520 <= and_ln93_2_fu_1657_p2;
        or_ln96_reg_2528 <= or_ln96_fu_1675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        array_back1_bias_change_2_reg_2631 <= grp_model_array_fu_890_ap_return_9;
        array_back1_bias_change_reg_2626 <= grp_model_array_fu_890_ap_return_8;
        array_back1_weight_changes_4_reg_2611 <= grp_model_array_fu_890_ap_return_5;
        array_back1_weight_changes_5_reg_2616 <= grp_model_array_fu_890_ap_return_6;
        array_back1_weight_changes_6_reg_2621 <= grp_model_array_fu_890_ap_return_7;
        array_back1_weight_changes_reg_2606 <= grp_model_array_fu_890_ap_return_4;
        retval_0_0_0_0_0_load_2_reg_2566 <= retval_0_0_0_0_0_load63_fu_278;
        retval_0_0_0_0_0_load_reg_2601 <= retval_0_0_0_0_0_load_fu_1948_p9;
        retval_0_1_0_0_0_load_2_reg_2571 <= retval_0_1_0_0_0_load69_fu_282;
        retval_0_1_0_0_0_load_reg_2596 <= retval_0_1_0_0_0_load_fu_1905_p9;
        retval_0_2_0_0_0_load_2_reg_2576 <= retval_0_2_0_0_0_load75_fu_286;
        retval_0_2_0_0_0_load_reg_2591 <= retval_0_2_0_0_0_load_fu_1862_p9;
        retval_0_3_0_0_0_load_2_reg_2581 <= retval_0_3_0_0_0_load81_fu_290;
        retval_0_3_0_0_0_load_reg_2586 <= retval_0_3_0_0_0_load_fu_1819_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        array_back2_bias_change_2_reg_2561 <= grp_model_array_fu_890_ap_return_9;
        array_back2_bias_change_reg_2556 <= grp_model_array_fu_890_ap_return_8;
        array_back2_weight_changes_4_reg_2541 <= grp_model_array_fu_890_ap_return_5;
        array_back2_weight_changes_5_reg_2546 <= grp_model_array_fu_890_ap_return_6;
        array_back2_weight_changes_6_reg_2551 <= grp_model_array_fu_890_ap_return_7;
        array_back2_weight_changes_reg_2536 <= grp_model_array_fu_890_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        array_out1_output_k_2_reg_2452 <= grp_model_array_fu_890_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        array_out1_output_k_reg_2447 <= grp_model_array_fu_890_ap_return_0;
        bias_2_local_193_load_1_reg_2435 <= bias_2_local_193_fu_382;
        bias_2_local_1_1_load_1_reg_2441 <= bias_2_local_1_1_fu_386;
        w2_local_189_load_1_reg_2411 <= w2_local_189_fu_358;
        w2_local_1_1_load_1_reg_2417 <= w2_local_1_1_fu_362;
        w2_local_2_1_load_1_reg_2423 <= w2_local_2_1_fu_366;
        w2_local_3_1_load_1_reg_2429 <= w2_local_3_1_fu_370;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        bias_1_local_191_load_1_reg_2384 <= ap_sig_allocacmp_bias_1_local_191_load_1;
        bias_1_local_1_1_load_1_reg_2390 <= ap_sig_allocacmp_bias_1_local_1_1_load_1;
        w1_local_187_load_1_reg_2360 <= ap_sig_allocacmp_w1_local_187_load_1;
        w1_local_1_1_load_1_reg_2366 <= ap_sig_allocacmp_w1_local_1_1_load_1;
        w1_local_2_1_load_1_reg_2372 <= ap_sig_allocacmp_w1_local_2_1_load_1;
        w1_local_3_1_load_1_reg_2378 <= ap_sig_allocacmp_w1_local_3_1_load_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        bitcast_ln748_reg_2504 <= bitcast_ln748_fu_1610_p1;
        or_ln93_1_reg_2509 <= or_ln93_1_fu_1637_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln69_reg_2352 <= icmp_ln69_fu_1137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        icmp_ln93_3_reg_2489 <= icmp_ln93_3_fu_1449_p2;
        icmp_ln93_reg_2457 <= icmp_ln93_fu_1279_p2;
        or_ln_reg_2484[0] <= or_ln_fu_1441_p3[0];
        select_ln93_reg_2468 <= select_ln93_fu_1299_p3;
        sub_ln93_1_reg_2478 <= sub_ln93_1_fu_1341_p2;
        tmp_reg_2463 <= grp_model_array_fu_890_ap_return_0[32'd15];
        trunc_ln93_reg_2473 <= trunc_ln93_fu_1337_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        lshr_ln93_reg_2499 <= lshr_ln93_fu_1515_p2;
        zext_ln93_reg_2494[15 : 0] <= zext_ln93_fu_1503_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        tmp_1_reg_2515 <= grp_fu_907_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        trunc_ln69_reg_2396 <= trunc_ln69_fu_1189_p1;
        zext_ln72_reg_2406[9 : 0] <= zext_ln72_fu_1245_p1[9 : 0];
        zext_ln73_reg_2401[9 : 0] <= zext_ln73_fu_1216_p1[9 : 0];
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone) & ((ap_predicate_tran15to16_state13 == 1'b1) | (icmp_ln69_reg_2352 == 1'd1)))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_882_p4 = 1'd0;
    end else begin
        ap_phi_mux_UnifiedRetVal_phi_fu_882_p4 = UnifiedRetVal_reg_878;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_return = ap_phi_mux_UnifiedRetVal_phi_fu_882_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_bias_1_local_191_load_1 = grp_model_array_fu_890_ap_return_8;
    end else begin
        ap_sig_allocacmp_bias_1_local_191_load_1 = bias_1_local_191_fu_374;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_bias_1_local_1_1_load_1 = grp_model_array_fu_890_ap_return_9;
    end else begin
        ap_sig_allocacmp_bias_1_local_1_1_load_1 = bias_1_local_1_1_fu_378;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_w1_local_187_load_1 = grp_model_array_fu_890_ap_return_4;
    end else begin
        ap_sig_allocacmp_w1_local_187_load_1 = w1_local_187_fu_342;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_w1_local_1_1_load_1 = grp_model_array_fu_890_ap_return_5;
    end else begin
        ap_sig_allocacmp_w1_local_1_1_load_1 = w1_local_1_1_fu_346;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_w1_local_2_1_load_1 = grp_model_array_fu_890_ap_return_6;
    end else begin
        ap_sig_allocacmp_w1_local_2_1_load_1 = w1_local_2_1_fu_350;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln143_reg_2356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln69_reg_2352_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_w1_local_3_1_load_1 = grp_model_array_fu_890_ap_return_7;
    end else begin
        ap_sig_allocacmp_w1_local_3_1_load_1 = w1_local_3_1_fu_354;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        array_back1_bias_change_2_out_ap_vld = 1'b1;
    end else begin
        array_back1_bias_change_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        array_back1_bias_change_out_ap_vld = 1'b1;
    end else begin
        array_back1_bias_change_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        array_back1_weight_changes_4_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        array_back1_weight_changes_5_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        array_back1_weight_changes_6_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        array_back1_weight_changes_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        array_back2_bias_change_2_out_ap_vld = 1'b1;
    end else begin
        array_back2_bias_change_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        array_back2_bias_change_out_ap_vld = 1'b1;
    end else begin
        array_back2_bias_change_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        array_back2_weight_changes_4_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        array_back2_weight_changes_5_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        array_back2_weight_changes_6_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        array_back2_weight_changes_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        bias_1_local_191_out = bias_1_local_191_fu_374;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        bias_1_local_191_out = bias_1_local_191_load_1_reg_2384;
    end else begin
        bias_1_local_191_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        bias_1_local_191_out_ap_vld = 1'b1;
    end else begin
        bias_1_local_191_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        bias_1_local_1_1_out = bias_1_local_1_1_fu_378;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        bias_1_local_1_1_out = bias_1_local_1_1_load_1_reg_2390;
    end else begin
        bias_1_local_1_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        bias_1_local_1_1_out_ap_vld = 1'b1;
    end else begin
        bias_1_local_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        bias_2_local_193_out = bias_2_local_193_fu_382;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        bias_2_local_193_out = bias_2_local_193_load_1_reg_2435;
    end else begin
        bias_2_local_193_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        bias_2_local_193_out_ap_vld = 1'b1;
    end else begin
        bias_2_local_193_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        bias_2_local_1_1_out = bias_2_local_1_1_fu_386;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        bias_2_local_1_1_out = bias_2_local_1_1_load_1_reg_2441;
    end else begin
        bias_2_local_1_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        bias_2_local_1_1_out_ap_vld = 1'b1;
    end else begin
        bias_2_local_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_00001))) begin
            grp_fu_907_opcode = 5'd5;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_00001))) begin
            grp_fu_907_opcode = 5'd2;
        end else begin
            grp_fu_907_opcode = 'bx;
        end
    end else begin
        grp_fu_907_opcode = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
            grp_fu_907_p0 = bitcast_ln748_reg_2504;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
            grp_fu_907_p0 = bitcast_ln748_fu_1610_p1;
        end else begin
            grp_fu_907_p0 = 'bx;
        end
    end else begin
        grp_fu_907_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_ignoreCallOp219))) begin
            grp_model_array_fu_890_p_read10 = w1_local_187_load_1_reg_2360;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_ignoreCallOp175))) begin
            grp_model_array_fu_890_p_read10 = w2_local_189_load_1_reg_2411;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_ignoreCallOp138))) begin
            grp_model_array_fu_890_p_read10 = w2_local_189_fu_358;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp126))) begin
            grp_model_array_fu_890_p_read10 = ap_sig_allocacmp_w1_local_187_load_1;
        end else begin
            grp_model_array_fu_890_p_read10 = 'bx;
        end
    end else begin
        grp_model_array_fu_890_p_read10 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_ignoreCallOp219))) begin
            grp_model_array_fu_890_p_read29 = w1_local_1_1_load_1_reg_2366;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_ignoreCallOp175))) begin
            grp_model_array_fu_890_p_read29 = w2_local_1_1_load_1_reg_2417;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_ignoreCallOp138))) begin
            grp_model_array_fu_890_p_read29 = w2_local_1_1_fu_362;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp126))) begin
            grp_model_array_fu_890_p_read29 = ap_sig_allocacmp_w1_local_1_1_load_1;
        end else begin
            grp_model_array_fu_890_p_read29 = 'bx;
        end
    end else begin
        grp_model_array_fu_890_p_read29 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_ignoreCallOp219))) begin
            grp_model_array_fu_890_p_read30 = w1_local_2_1_load_1_reg_2372;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_ignoreCallOp175))) begin
            grp_model_array_fu_890_p_read30 = w2_local_2_1_load_1_reg_2423;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_ignoreCallOp138))) begin
            grp_model_array_fu_890_p_read30 = w2_local_2_1_fu_366;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp126))) begin
            grp_model_array_fu_890_p_read30 = ap_sig_allocacmp_w1_local_2_1_load_1;
        end else begin
            grp_model_array_fu_890_p_read30 = 'bx;
        end
    end else begin
        grp_model_array_fu_890_p_read30 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_ignoreCallOp219))) begin
            grp_model_array_fu_890_p_read31 = w1_local_3_1_load_1_reg_2378;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_ignoreCallOp175))) begin
            grp_model_array_fu_890_p_read31 = w2_local_3_1_load_1_reg_2429;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_ignoreCallOp138))) begin
            grp_model_array_fu_890_p_read31 = w2_local_3_1_fu_370;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp126))) begin
            grp_model_array_fu_890_p_read31 = ap_sig_allocacmp_w1_local_3_1_load_1;
        end else begin
            grp_model_array_fu_890_p_read31 = 'bx;
        end
    end else begin
        grp_model_array_fu_890_p_read31 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_ignoreCallOp219))) begin
            grp_model_array_fu_890_p_read32 = bias_1_local_191_load_1_reg_2384;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_ignoreCallOp175))) begin
            grp_model_array_fu_890_p_read32 = bias_2_local_193_load_1_reg_2435;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_ignoreCallOp138))) begin
            grp_model_array_fu_890_p_read32 = bias_2_local_193_fu_382;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp126))) begin
            grp_model_array_fu_890_p_read32 = ap_sig_allocacmp_bias_1_local_191_load_1;
        end else begin
            grp_model_array_fu_890_p_read32 = 'bx;
        end
    end else begin
        grp_model_array_fu_890_p_read32 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_ignoreCallOp219))) begin
            grp_model_array_fu_890_p_read33 = bias_1_local_1_1_load_1_reg_2390;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_ignoreCallOp175))) begin
            grp_model_array_fu_890_p_read33 = bias_2_local_1_1_load_1_reg_2441;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_ignoreCallOp138))) begin
            grp_model_array_fu_890_p_read33 = bias_2_local_1_1_fu_386;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp126))) begin
            grp_model_array_fu_890_p_read33 = ap_sig_allocacmp_bias_1_local_1_1_load_1;
        end else begin
            grp_model_array_fu_890_p_read33 = 'bx;
        end
    end else begin
        grp_model_array_fu_890_p_read33 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_ignoreCallOp219))) begin
            grp_model_array_fu_890_p_read34 = zext_ln73_reg_2401;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_ignoreCallOp175))) begin
            grp_model_array_fu_890_p_read34 = array_out1_output_k_reg_2447;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_ignoreCallOp138))) begin
            grp_model_array_fu_890_p_read34 = grp_model_array_fu_890_ap_return_0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp126))) begin
            grp_model_array_fu_890_p_read34 = zext_ln73_fu_1216_p1;
        end else begin
            grp_model_array_fu_890_p_read34 = 'bx;
        end
    end else begin
        grp_model_array_fu_890_p_read34 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_ignoreCallOp219))) begin
            grp_model_array_fu_890_p_read35 = zext_ln72_reg_2406;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_ignoreCallOp175))) begin
            grp_model_array_fu_890_p_read35 = array_out1_output_k_2_reg_2452;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_ignoreCallOp138))) begin
            grp_model_array_fu_890_p_read35 = grp_model_array_fu_890_ap_return_1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp126))) begin
            grp_model_array_fu_890_p_read35 = zext_ln72_fu_1245_p1;
        end else begin
            grp_model_array_fu_890_p_read35 = 'bx;
        end
    end else begin
        grp_model_array_fu_890_p_read35 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage10_ignoreCallOp219))) begin
        grp_model_array_fu_890_p_read36 = grp_model_array_fu_890_ap_return_2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage7_ignoreCallOp175))) begin
        grp_model_array_fu_890_p_read36 = delta_2_1_fu_1494_p3;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage4_ignoreCallOp138)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp126)))) begin
        grp_model_array_fu_890_p_read36 = 16'd0;
    end else begin
        grp_model_array_fu_890_p_read36 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage10_ignoreCallOp219))) begin
        grp_model_array_fu_890_p_read37 = grp_model_array_fu_890_ap_return_3;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage7_ignoreCallOp175)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage4_ignoreCallOp138)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln69_reg_2352 == 1'd0) & (1'b0 == ap_block_pp0_stage1_ignoreCallOp126)))) begin
        grp_model_array_fu_890_p_read37 = 16'd0;
    end else begin
        grp_model_array_fu_890_p_read37 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        mux_case_04519_out_ap_vld = 1'b1;
    end else begin
        mux_case_04519_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        mux_case_04727_out_ap_vld = 1'b1;
    end else begin
        mux_case_04727_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        mux_case_04935_out_ap_vld = 1'b1;
    end else begin
        mux_case_04935_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        mux_case_05143_out_ap_vld = 1'b1;
    end else begin
        mux_case_05143_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        mux_case_05351_out_ap_vld = 1'b1;
    end else begin
        mux_case_05351_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        mux_case_05559_out_ap_vld = 1'b1;
    end else begin
        mux_case_05559_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        mux_case_14623_out_ap_vld = 1'b1;
    end else begin
        mux_case_14623_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        mux_case_14831_out_ap_vld = 1'b1;
    end else begin
        mux_case_14831_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        mux_case_15039_out_ap_vld = 1'b1;
    end else begin
        mux_case_15039_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        mux_case_15247_out_ap_vld = 1'b1;
    end else begin
        mux_case_15247_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        mux_case_15455_out_ap_vld = 1'b1;
    end else begin
        mux_case_15455_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        mux_case_15663_out_ap_vld = 1'b1;
    end else begin
        mux_case_15663_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        retval_0_0_0_0_0_load63_out = retval_0_0_0_0_0_load63_fu_278;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        retval_0_0_0_0_0_load63_out = retval_0_0_0_0_0_load_2_reg_2566;
    end else begin
        retval_0_0_0_0_0_load63_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        retval_0_0_0_0_0_load63_out_ap_vld = 1'b1;
    end else begin
        retval_0_0_0_0_0_load63_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        retval_0_0_0_0_0_load_out_ap_vld = 1'b1;
    end else begin
        retval_0_0_0_0_0_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        retval_0_1_0_0_0_load69_out = retval_0_1_0_0_0_load69_fu_282;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        retval_0_1_0_0_0_load69_out = retval_0_1_0_0_0_load_2_reg_2571;
    end else begin
        retval_0_1_0_0_0_load69_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        retval_0_1_0_0_0_load69_out_ap_vld = 1'b1;
    end else begin
        retval_0_1_0_0_0_load69_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        retval_0_1_0_0_0_load_out_ap_vld = 1'b1;
    end else begin
        retval_0_1_0_0_0_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        retval_0_2_0_0_0_load75_out = retval_0_2_0_0_0_load75_fu_286;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        retval_0_2_0_0_0_load75_out = retval_0_2_0_0_0_load_2_reg_2576;
    end else begin
        retval_0_2_0_0_0_load75_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        retval_0_2_0_0_0_load75_out_ap_vld = 1'b1;
    end else begin
        retval_0_2_0_0_0_load75_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        retval_0_2_0_0_0_load_out_ap_vld = 1'b1;
    end else begin
        retval_0_2_0_0_0_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        retval_0_3_0_0_0_load81_out = retval_0_3_0_0_0_load81_fu_290;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        retval_0_3_0_0_0_load81_out = retval_0_3_0_0_0_load_2_reg_2581;
    end else begin
        retval_0_3_0_0_0_load81_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        retval_0_3_0_0_0_load81_out_ap_vld = 1'b1;
    end else begin
        retval_0_3_0_0_0_load81_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        retval_0_3_0_0_0_load_out_ap_vld = 1'b1;
    end else begin
        retval_0_3_0_0_0_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        w1_local_187_out = w1_local_187_fu_342;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        w1_local_187_out = w1_local_187_load_1_reg_2360;
    end else begin
        w1_local_187_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        w1_local_187_out_ap_vld = 1'b1;
    end else begin
        w1_local_187_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        w1_local_1_1_out = w1_local_1_1_fu_346;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        w1_local_1_1_out = w1_local_1_1_load_1_reg_2366;
    end else begin
        w1_local_1_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        w1_local_1_1_out_ap_vld = 1'b1;
    end else begin
        w1_local_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        w1_local_2_1_out = w1_local_2_1_fu_350;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        w1_local_2_1_out = w1_local_2_1_load_1_reg_2372;
    end else begin
        w1_local_2_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        w1_local_2_1_out_ap_vld = 1'b1;
    end else begin
        w1_local_2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        w1_local_3_1_out = w1_local_3_1_fu_354;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        w1_local_3_1_out = w1_local_3_1_load_1_reg_2378;
    end else begin
        w1_local_3_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        w1_local_3_1_out_ap_vld = 1'b1;
    end else begin
        w1_local_3_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        w2_local_189_out = w2_local_189_fu_358;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        w2_local_189_out = w2_local_189_load_1_reg_2411;
    end else begin
        w2_local_189_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        w2_local_189_out_ap_vld = 1'b1;
    end else begin
        w2_local_189_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        w2_local_1_1_out = w2_local_1_1_fu_362;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        w2_local_1_1_out = w2_local_1_1_load_1_reg_2417;
    end else begin
        w2_local_1_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        w2_local_1_1_out_ap_vld = 1'b1;
    end else begin
        w2_local_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        w2_local_2_1_out = w2_local_2_1_fu_366;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        w2_local_2_1_out = w2_local_2_1_load_1_reg_2423;
    end else begin
        w2_local_2_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        w2_local_2_1_out_ap_vld = 1'b1;
    end else begin
        w2_local_2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        w2_local_3_1_out = w2_local_3_1_fu_370;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0))) begin
        w2_local_3_1_out = w2_local_3_1_load_1_reg_2429;
    end else begin
        w2_local_3_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln69_reg_2352 == 1'd0)))) begin
        w2_local_3_1_out_ap_vld = 1'b1;
    end else begin
        w2_local_3_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_exit_tran_regpp0 == 2'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_exit_tran_regpp0 == 2'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_fu_1598_p5 = {{tmp_s_fu_1591_p3}, {zext_ln93_4_fu_1560_p1[51:0]}};

assign add_ln69_fu_1143_p2 = (j_fu_274 + 3'd1);

assign add_ln93_1_fu_1506_p2 = ($signed(sub_ln93_1_reg_2478) + $signed(32'd4294967242));

assign add_ln93_2_fu_1544_p2 = (cond50_i_i315_fu_1535_p3 + zext_ln93_3_fu_1541_p1);

assign add_ln93_3_fu_1585_p2 = (select_ln93_1_fu_1572_p3 + sub_ln93_3_fu_1580_p2);

assign add_ln93_fu_1347_p2 = ($signed(sub_ln93_1_fu_1341_p2) + $signed(32'd4294967243));

assign and_ln143_fu_1155_p2 = (icmp_ln143_fu_1149_p2 & cmp_i_i100);

assign and_ln93_1_fu_1643_p2 = (tmp_1_reg_2515 & or_ln93_1_reg_2509);

assign and_ln93_2_fu_1657_p2 = (xor_ln93_fu_1652_p2 & and_ln93_1_fu_1643_p2);

assign and_ln93_3_fu_1389_p2 = (select_ln93_fu_1299_p3 & lshr_ln93_2_fu_1383_p2);

assign and_ln93_fu_1429_p2 = (xor_ln93_1_fu_1415_p2 & tmp_7_fu_1421_p3);

assign and_ln94_1_fu_1782_p2 = (icmp_ln94_2_fu_1772_p2 & icmp_ln94_1_fu_1767_p2);

assign and_ln94_2_fu_1788_p2 = (and_ln94_fu_1777_p2 & and_ln94_1_fu_1782_p2);

assign and_ln94_3_fu_1844_p2 = (icmp_ln94_3_fu_1839_p2 & and_ln93_2_reg_2520);

assign and_ln94_4_fu_1887_p2 = (icmp_ln94_4_fu_1882_p2 & and_ln93_2_reg_2520);

assign and_ln94_5_fu_1930_p2 = (icmp_ln94_5_fu_1925_p2 & and_ln93_2_reg_2520);

assign and_ln94_fu_1777_p2 = (icmp_ln94_fu_1762_p2 & and_ln93_2_reg_2520);

assign and_ln96_1_fu_1669_p2 = (xor_ln96_fu_1663_p2 & and_ln96_fu_1647_p2);

assign and_ln96_2_fu_1794_p2 = (icmp_ln94_fu_1762_p2 & icmp_ln94_1_fu_1767_p2);

assign and_ln96_3_fu_1800_p2 = (or_ln96_reg_2528 & icmp_ln94_2_fu_1772_p2);

assign and_ln96_4_fu_1805_p2 = (and_ln96_3_fu_1800_p2 & and_ln96_2_fu_1794_p2);

assign and_ln96_5_fu_1849_p2 = (or_ln96_reg_2528 & icmp_ln94_3_fu_1839_p2);

assign and_ln96_6_fu_1892_p2 = (or_ln96_reg_2528 & icmp_ln94_4_fu_1882_p2);

assign and_ln96_7_fu_1935_p2 = (or_ln96_reg_2528 & icmp_ln94_5_fu_1925_p2);

assign and_ln96_fu_1647_p2 = (or_ln93_1_reg_2509 & grp_fu_907_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_ignoreCallOp219 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_ignoreCallOp126 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_ignoreCallOp138 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_ignoreCallOp175 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_tran15to16_state13 = ((1'd1 == and_ln143_reg_2356) & (icmp_ln69_reg_2352 == 1'd0));
end

assign array_back1_bias_change_2_out = array_back1_bias_change_2_reg_2631;

assign array_back1_bias_change_out = array_back1_bias_change_reg_2626;

assign array_back1_weight_changes_4_out = array_back1_weight_changes_4_reg_2611;

assign array_back1_weight_changes_5_out = array_back1_weight_changes_5_reg_2616;

assign array_back1_weight_changes_6_out = array_back1_weight_changes_6_reg_2621;

assign array_back1_weight_changes_out = array_back1_weight_changes_reg_2606;

assign array_back2_bias_change_2_out = array_back2_bias_change_2_reg_2561;

assign array_back2_bias_change_out = array_back2_bias_change_reg_2556;

assign array_back2_weight_changes_4_out = array_back2_weight_changes_4_reg_2541;

assign array_back2_weight_changes_5_out = array_back2_weight_changes_5_reg_2546;

assign array_back2_weight_changes_6_out = array_back2_weight_changes_6_reg_2551;

assign array_back2_weight_changes_out = array_back2_weight_changes_reg_2536;

assign bitcast_ln748_fu_1610_p1 = LD_fu_1598_p5;

assign cond50_i_i315_fu_1535_p3 = ((icmp_ln93_3_reg_2489[0:0] == 1'b1) ? lshr_ln93_reg_2499 : shl_ln93_fu_1530_p2);

assign delta_2_1_fu_1494_p3 = ((icmp_ln105_fu_1455_p2[0:0] == 1'b1) ? delta_2_fu_1488_p2 : 16'd0);

assign delta_2_fu_1488_p2 = (grp_model_array_fu_890_ap_return_0 - zext_ln106_fu_1484_p1);

assign grp_model_array_fu_890_ap_start = grp_model_array_fu_890_ap_start_reg;

assign icmp_ln105_fu_1455_p2 = (($signed(grp_model_array_fu_890_ap_return_0) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln143_fu_1149_p2 = ((j_fu_274 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1137_p2 = ((j_fu_274 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln93_1_fu_1363_p2 = (($signed(tmp_5_fu_1353_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln93_2_fu_1395_p2 = ((and_ln93_3_fu_1389_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln93_3_fu_1449_p2 = (($signed(add_ln93_fu_1347_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln93_4_fu_1625_p2 = ((add_ln93_3_fu_1585_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln93_5_fu_1631_p2 = ((trunc_ln93_1_fu_1615_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_1279_p2 = ((grp_model_array_fu_890_ap_return_0 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_1_fu_1767_p2 = ((j_1_reg_2341_pp0_iter1_reg != 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln94_2_fu_1772_p2 = ((j_1_reg_2341_pp0_iter1_reg != 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln94_3_fu_1839_p2 = ((j_1_reg_2341_pp0_iter1_reg == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln94_4_fu_1882_p2 = ((j_1_reg_2341_pp0_iter1_reg == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln94_5_fu_1925_p2 = ((j_1_reg_2341_pp0_iter1_reg == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_1762_p2 = ((j_1_reg_2341_pp0_iter1_reg != 3'd0) ? 1'b1 : 1'b0);

assign lshr_ln93_1_fu_1550_p4 = {{add_ln93_2_fu_1544_p2[63:1]}};

assign lshr_ln93_2_fu_1383_p2 = 16'd65535 >> zext_ln93_5_fu_1379_p1;

assign lshr_ln93_fu_1515_p2 = zext_ln93_fu_1503_p1 >> zext_ln93_1_fu_1511_p1;

assign mux_case_04519_out = mux_case_04519_fu_294;

assign mux_case_04727_out = mux_case_04727_fu_302;

assign mux_case_04935_out = mux_case_04935_fu_310;

assign mux_case_05143_out = mux_case_05143_fu_318;

assign mux_case_05351_out = mux_case_05351_fu_326;

assign mux_case_05559_out = mux_case_05559_fu_334;

assign mux_case_14623_out = mux_case_14623_fu_298;

assign mux_case_14831_out = mux_case_14831_fu_306;

assign mux_case_15039_out = mux_case_15039_fu_314;

assign mux_case_15247_out = mux_case_15247_fu_322;

assign mux_case_15455_out = mux_case_15455_fu_330;

assign mux_case_15663_out = mux_case_15663_fu_338;

assign or_ln93_1_fu_1637_p2 = (icmp_ln93_5_fu_1631_p2 | icmp_ln93_4_fu_1625_p2);

assign or_ln93_fu_1435_p2 = (phi_ln93_fu_1401_p2 | and_ln93_fu_1429_p2);

assign or_ln96_fu_1675_p2 = (icmp_ln93_reg_2457 | and_ln96_1_fu_1669_p2);

assign or_ln_fu_1441_p3 = {{1'd0}, {or_ln93_fu_1435_p2}};

assign output_0_1_fu_1221_p9 = 'bx;

assign output_0_fu_1192_p9 = 'bx;

assign phi_ln93_fu_1401_p2 = (icmp_ln93_2_fu_1395_p2 & icmp_ln93_1_fu_1363_p2);

assign retval_0_0_0_0_0_load_fu_1948_p7 = 'bx;

assign retval_0_0_0_0_0_load_fu_1948_p8 = {{and_ln94_5_fu_1930_p2}, {and_ln96_7_fu_1935_p2}};

assign retval_0_0_0_0_0_load_out = retval_0_0_0_0_0_load_reg_2601;

assign retval_0_1_0_0_0_load_fu_1905_p7 = 'bx;

assign retval_0_1_0_0_0_load_fu_1905_p8 = {{and_ln94_4_fu_1887_p2}, {and_ln96_6_fu_1892_p2}};

assign retval_0_1_0_0_0_load_out = retval_0_1_0_0_0_load_reg_2596;

assign retval_0_2_0_0_0_load_fu_1862_p7 = 'bx;

assign retval_0_2_0_0_0_load_fu_1862_p8 = {{and_ln94_3_fu_1844_p2}, {and_ln96_5_fu_1849_p2}};

assign retval_0_2_0_0_0_load_out = retval_0_2_0_0_0_load_reg_2591;

assign retval_0_3_0_0_0_load_fu_1819_p7 = 'bx;

assign retval_0_3_0_0_0_load_fu_1819_p8 = {{and_ln94_2_fu_1788_p2}, {and_ln96_4_fu_1805_p2}};

assign retval_0_3_0_0_0_load_out = retval_0_3_0_0_0_load_reg_2586;

assign select_ln93_1_fu_1572_p3 = ((tmp_9_fu_1564_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln93_fu_1299_p3 = ((tmp_fu_1285_p3[0:0] == 1'b1) ? sub_ln93_fu_1293_p2 : grp_model_array_fu_890_ap_return_0);

assign sext_ln93_fu_1325_p1 = $signed(tmp_3_fu_1317_p3);

assign shl_ln93_fu_1530_p2 = zext_ln93_reg_2494 << zext_ln93_2_fu_1526_p1;

assign sub_ln93_1_fu_1341_p2 = (32'd16 - tmp_4_fu_1329_p3);

assign sub_ln93_2_fu_1521_p2 = (32'd54 - sub_ln93_1_reg_2478);

assign sub_ln93_3_fu_1580_p2 = (11'd7 - trunc_ln93_reg_2473);

assign sub_ln93_4_fu_1373_p2 = (4'd6 - trunc_ln93_2_fu_1369_p1);

assign sub_ln93_fu_1293_p2 = (16'd0 - grp_model_array_fu_890_ap_return_0);

integer ap_tvar_int_0;

always @ (select_ln93_fu_1299_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            tmp_2_fu_1307_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_2_fu_1307_p4[ap_tvar_int_0] = select_ln93_fu_1299_p3[15 - ap_tvar_int_0];
        end
    end
end

assign tmp_3_fu_1317_p3 = {{1'd1}, {tmp_2_fu_1307_p4}};


always @ (sext_ln93_fu_1325_p1) begin
    if (sext_ln93_fu_1325_p1[0] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd0;
    end else if (sext_ln93_fu_1325_p1[1] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd1;
    end else if (sext_ln93_fu_1325_p1[2] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd2;
    end else if (sext_ln93_fu_1325_p1[3] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd3;
    end else if (sext_ln93_fu_1325_p1[4] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd4;
    end else if (sext_ln93_fu_1325_p1[5] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd5;
    end else if (sext_ln93_fu_1325_p1[6] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd6;
    end else if (sext_ln93_fu_1325_p1[7] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd7;
    end else if (sext_ln93_fu_1325_p1[8] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd8;
    end else if (sext_ln93_fu_1325_p1[9] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd9;
    end else if (sext_ln93_fu_1325_p1[10] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd10;
    end else if (sext_ln93_fu_1325_p1[11] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd11;
    end else if (sext_ln93_fu_1325_p1[12] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd12;
    end else if (sext_ln93_fu_1325_p1[13] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd13;
    end else if (sext_ln93_fu_1325_p1[14] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd14;
    end else if (sext_ln93_fu_1325_p1[15] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd15;
    end else if (sext_ln93_fu_1325_p1[16] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd16;
    end else if (sext_ln93_fu_1325_p1[17] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd17;
    end else if (sext_ln93_fu_1325_p1[18] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd18;
    end else if (sext_ln93_fu_1325_p1[19] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd19;
    end else if (sext_ln93_fu_1325_p1[20] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd20;
    end else if (sext_ln93_fu_1325_p1[21] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd21;
    end else if (sext_ln93_fu_1325_p1[22] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd22;
    end else if (sext_ln93_fu_1325_p1[23] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd23;
    end else if (sext_ln93_fu_1325_p1[24] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd24;
    end else if (sext_ln93_fu_1325_p1[25] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd25;
    end else if (sext_ln93_fu_1325_p1[26] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd26;
    end else if (sext_ln93_fu_1325_p1[27] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd27;
    end else if (sext_ln93_fu_1325_p1[28] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd28;
    end else if (sext_ln93_fu_1325_p1[29] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd29;
    end else if (sext_ln93_fu_1325_p1[30] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd30;
    end else if (sext_ln93_fu_1325_p1[31] == 1'b1) begin
        tmp_4_fu_1329_p3 = 32'd31;
    end else begin
        tmp_4_fu_1329_p3 = 32'd32;
    end
end

assign tmp_5_fu_1353_p4 = {{add_ln93_fu_1347_p2[31:1]}};

assign tmp_6_fu_1407_p3 = add_ln93_fu_1347_p2[32'd31];

assign tmp_7_fu_1421_p3 = select_ln93_fu_1299_p3[add_ln93_fu_1347_p2];

assign tmp_9_fu_1564_p3 = add_ln93_2_fu_1544_p2[32'd54];

assign tmp_fu_1285_p3 = grp_model_array_fu_890_ap_return_0[32'd15];

assign tmp_s_fu_1591_p3 = {{tmp_reg_2463}, {add_ln93_3_fu_1585_p2}};

assign trunc_ln69_fu_1189_p1 = j_1_reg_2341[1:0];

assign trunc_ln93_1_fu_1615_p4 = {{add_ln93_2_fu_1544_p2[52:1]}};

assign trunc_ln93_2_fu_1369_p1 = sub_ln93_1_fu_1341_p2[3:0];

assign trunc_ln93_fu_1337_p1 = tmp_4_fu_1329_p3[10:0];

assign xor_ln93_1_fu_1415_p2 = (tmp_6_fu_1407_p3 ^ 1'd1);

assign xor_ln93_fu_1652_p2 = (icmp_ln93_reg_2457 ^ 1'd1);

assign xor_ln96_fu_1663_p2 = (1'd1 ^ and_ln93_1_fu_1643_p2);

assign zext_ln106_cast_fu_1461_p9 = 'bx;

assign zext_ln106_fu_1484_p1 = zext_ln106_cast_fu_1461_p11;

assign zext_ln72_fu_1245_p1 = output_0_1_fu_1221_p11;

assign zext_ln73_fu_1216_p1 = output_0_fu_1192_p11;

assign zext_ln93_1_fu_1511_p1 = add_ln93_1_fu_1506_p2;

assign zext_ln93_2_fu_1526_p1 = sub_ln93_2_fu_1521_p2;

assign zext_ln93_3_fu_1541_p1 = or_ln_reg_2484;

assign zext_ln93_4_fu_1560_p1 = lshr_ln93_1_fu_1550_p4;

assign zext_ln93_5_fu_1379_p1 = sub_ln93_4_fu_1373_p2;

assign zext_ln93_fu_1503_p1 = select_ln93_reg_2468;

always @ (posedge ap_clk) begin
    zext_ln73_reg_2401[15:10] <= 6'b000000;
    zext_ln72_reg_2406[15:10] <= 6'b000000;
    or_ln_reg_2484[1] <= 1'b0;
    zext_ln93_reg_2494[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    ap_exit_tran_regpp0[1] <= 1'b0;
end

endmodule //accelerator_accelerator_Pipeline_VITIS_LOOP_69_4
