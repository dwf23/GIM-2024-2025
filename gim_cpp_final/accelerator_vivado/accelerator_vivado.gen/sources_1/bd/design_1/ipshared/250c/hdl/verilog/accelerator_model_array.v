// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module accelerator_model_array (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        p_read10,
        p_read29,
        p_read30,
        p_read31,
        biases_0_0_val,
        biases_0_1_val,
        output_kmin1_0_0_val,
        output_kmin1_0_1_val,
        delta_k_0_0_val,
        delta_k_0_1_val,
        training,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] p_read10;
input  [15:0] p_read29;
input  [15:0] p_read30;
input  [15:0] p_read31;
input  [15:0] biases_0_0_val;
input  [15:0] biases_0_1_val;
input  [15:0] output_kmin1_0_0_val;
input  [15:0] output_kmin1_0_1_val;
input  [15:0] delta_k_0_0_val;
input  [15:0] delta_k_0_1_val;
input  [15:0] training;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
reg    ap_block_pp0_stage4_subdone;
reg  signed [15:0] delta_k_0_0_val_read_reg_677;
wire    ap_block_pp0_stage0_11001;
reg  signed [15:0] output_kmin1_0_1_val_read_reg_682;
reg  signed [15:0] output_kmin1_0_0_val_read_reg_687;
reg  signed [15:0] p_read_2_reg_692;
reg  signed [15:0] p_read_3_reg_697;
wire  signed [24:0] sext_ln13_2_fu_148_p1;
reg  signed [24:0] sext_ln13_2_reg_707;
reg   [15:0] tmp_reg_712;
reg   [15:0] tmp_1_reg_717;
wire  signed [24:0] sext_ln12_6_fu_178_p1;
wire  signed [24:0] sext_ln13_3_fu_188_p1;
reg  signed [24:0] sext_ln13_3_reg_727;
reg   [15:0] tmp_2_reg_733;
wire   [0:0] cmp_i_i_fu_202_p2;
reg   [0:0] cmp_i_i_reg_738;
wire   [0:0] icmp_ln11_fu_208_p2;
reg   [0:0] icmp_ln11_reg_744;
wire   [0:0] icmp_ln11_1_fu_214_p2;
reg   [0:0] icmp_ln11_1_reg_749;
reg  signed [15:0] delta_k_0_1_val_read_reg_754;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg  signed [15:0] p_read_reg_760;
reg  signed [15:0] p_read_1_reg_765;
wire  signed [31:0] sext_ln12_fu_220_p1;
reg  signed [31:0] sext_ln12_reg_770;
wire  signed [31:0] sext_ln13_fu_223_p1;
reg  signed [31:0] sext_ln13_reg_775;
reg   [15:0] weight_out_weight_change_reg_780;
wire  signed [24:0] sext_ln12_7_fu_260_p1;
wire  signed [24:0] sext_ln12_8_fu_264_p1;
wire  signed [24:0] sext_ln12_9_fu_273_p1;
reg  signed [24:0] sext_ln12_9_reg_796;
reg   [15:0] tmp_3_reg_802;
reg   [15:0] biases_0_0_val_read_reg_807;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire  signed [31:0] sext_ln13_1_fu_287_p1;
reg  signed [31:0] sext_ln13_1_reg_812;
wire  signed [31:0] sext_ln12_2_fu_315_p1;
reg  signed [31:0] sext_ln12_2_reg_827;
wire   [31:0] mul_ln14_3_fu_321_p2;
reg   [31:0] mul_ln14_3_reg_837;
reg   [15:0] weight_out_weight_change_1_reg_842;
reg   [15:0] bias_out_bias_change_reg_847;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire   [14:0] output_3_fu_393_p3;
reg   [14:0] output_3_reg_857;
reg   [15:0] weight_out_weight_change_2_reg_862;
reg   [15:0] weight_out_weight_change_3_reg_872;
reg   [15:0] biases_0_1_val_read_reg_877;
wire    ap_block_pp0_stage4_11001;
wire   [15:0] agg_result_delta_kmin1_0_0_fu_510_p3;
reg   [15:0] agg_result_delta_kmin1_0_0_reg_892;
wire   [15:0] agg_result_delta_kmin1_1_0_fu_517_p3;
reg   [15:0] agg_result_delta_kmin1_1_0_reg_897;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg   [15:0] ap_port_reg_p_read30;
reg  signed [15:0] ap_port_reg_p_read31;
reg   [15:0] ap_port_reg_biases_0_0_val;
reg   [15:0] ap_port_reg_biases_0_1_val;
reg   [15:0] ap_port_reg_delta_k_0_1_val;
reg  signed [31:0] grp_fu_120_p0;
wire  signed [33:0] sext_ln14_fu_232_p1;
wire  signed [33:0] sext_ln24_fu_302_p1;
wire  signed [33:0] sext_ln24_1_fu_365_p1;
wire  signed [6:0] grp_fu_120_p1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire  signed [6:0] mul_ln14_7_fu_125_p1;
wire    ap_block_pp0_stage0;
wire  signed [15:0] sext_ln12_3_fu_134_p0;
wire  signed [15:0] sext_ln12_4_fu_138_p0;
wire  signed [15:0] mul_ln12_fu_142_p0;
wire  signed [24:0] sext_ln12_3_fu_134_p1;
wire  signed [15:0] mul_ln12_fu_142_p1;
wire  signed [24:0] sext_ln12_4_fu_138_p1;
wire  signed [15:0] sext_ln13_2_fu_148_p0;
wire  signed [15:0] mul_ln13_fu_152_p0;
wire   [24:0] mul_ln13_fu_152_p2;
wire   [24:0] mul_ln12_fu_142_p2;
wire  signed [15:0] sext_ln12_6_fu_178_p0;
wire  signed [15:0] mul_ln12_1_fu_182_p0;
wire  signed [15:0] mul_ln12_1_fu_182_p1;
wire  signed [15:0] sext_ln13_3_fu_188_p0;
wire   [24:0] mul_ln12_1_fu_182_p2;
wire  signed [15:0] icmp_ln11_fu_208_p0;
wire  signed [15:0] icmp_ln11_1_fu_214_p0;
wire   [31:0] mul_ln14_fu_226_p2;
wire   [33:0] shl_ln_fu_237_p3;
wire   [33:0] grp_fu_120_p2;
wire   [33:0] add_ln14_fu_244_p2;
wire  signed [15:0] sext_ln12_7_fu_260_p0;
wire  signed [15:0] sext_ln12_8_fu_264_p0;
wire  signed [15:0] mul_ln13_2_fu_268_p0;
wire  signed [15:0] mul_ln13_2_fu_268_p1;
wire  signed [15:0] sext_ln12_9_fu_273_p0;
wire   [24:0] mul_ln13_2_fu_268_p2;
wire  signed [15:0] mul_ln14_2_fu_297_p0;
wire   [31:0] mul_ln14_2_fu_297_p2;
wire  signed [15:0] mul_ln14_3_fu_321_p1;
wire   [33:0] shl_ln14_1_fu_326_p3;
wire   [33:0] add_ln14_1_fu_333_p2;
wire  signed [24:0] grp_fu_625_p3;
wire  signed [24:0] weight_out_sum_output_out_fu_369_p1;
wire   [24:0] grp_fu_634_p3;
wire   [15:0] weight_out_sum_output_out_fu_369_p4;
wire   [15:0] bias_out_net_sum_fu_378_p2;
wire   [0:0] icmp_ln12_fu_387_p2;
wire   [14:0] trunc_ln12_fu_383_p1;
wire   [33:0] shl_ln14_2_fu_401_p3;
wire   [33:0] add_ln14_3_fu_408_p2;
wire  signed [15:0] mul_ln14_6_fu_431_p0;
wire  signed [15:0] mul_ln14_6_fu_431_p1;
wire  signed [31:0] mul_ln14_6_fu_431_p2;
wire   [33:0] shl_ln14_3_fu_440_p3;
wire   [33:0] mul_ln14_7_fu_125_p2;
wire   [33:0] add_ln14_4_fu_447_p2;
wire  signed [24:0] weight_out_sum_delta_out_fu_463_p1;
wire   [24:0] grp_fu_643_p3;
wire    ap_block_pp0_stage4;
wire  signed [24:0] weight_out_sum_delta_out_1_fu_472_p1;
wire   [24:0] grp_fu_652_p3;
wire   [15:0] weight_out_sum_delta_out_fu_463_p4;
wire   [15:0] weight_out_sum_delta_out_1_fu_472_p4;
wire   [15:0] error_1_fu_496_p3;
wire   [15:0] error_3_fu_503_p3;
wire  signed [24:0] weight_out_sum_output_out_1_fu_527_p1;
wire   [24:0] grp_fu_661_p3;
wire   [15:0] weight_out_sum_output_out_1_fu_527_p4;
wire   [15:0] bias_out_net_sum_1_fu_536_p2;
wire  signed [24:0] grp_fu_668_p3;
wire   [0:0] icmp_ln12_1_fu_554_p2;
wire   [14:0] trunc_ln32_fu_541_p1;
wire   [14:0] output_2_fu_560_p3;
wire   [15:0] zext_ln12_fu_524_p1;
wire   [15:0] zext_ln6_fu_568_p1;
wire   [5:0] grp_fu_625_p1;
wire  signed [24:0] grp_fu_625_p2;
wire  signed [15:0] grp_fu_634_p0;
wire   [24:0] grp_fu_634_p2;
wire  signed [15:0] grp_fu_643_p0;
wire  signed [15:0] grp_fu_643_p1;
wire   [24:0] grp_fu_643_p2;
wire  signed [15:0] grp_fu_652_p1;
wire   [24:0] grp_fu_652_p2;
wire  signed [15:0] grp_fu_661_p0;
wire  signed [15:0] grp_fu_661_p1;
wire   [24:0] grp_fu_661_p2;
wire   [5:0] grp_fu_668_p1;
wire  signed [24:0] grp_fu_668_p2;
reg    grp_fu_625_ce;
reg    grp_fu_634_ce;
reg    grp_fu_643_ce;
reg    grp_fu_652_ce;
reg    grp_fu_661_ce;
reg    grp_fu_668_ce;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

accelerator_mul_32s_7s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 34 ))
mul_32s_7s_34_1_1_U17(
    .din0(grp_fu_120_p0),
    .din1(grp_fu_120_p1),
    .dout(grp_fu_120_p2)
);

accelerator_mul_32s_7s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 34 ))
mul_32s_7s_34_1_1_U18(
    .din0(mul_ln14_6_fu_431_p2),
    .din1(mul_ln14_7_fu_125_p1),
    .dout(mul_ln14_7_fu_125_p2)
);

accelerator_mul_16s_16s_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
mul_16s_16s_25_1_1_U19(
    .din0(mul_ln12_fu_142_p0),
    .din1(mul_ln12_fu_142_p1),
    .dout(mul_ln12_fu_142_p2)
);

accelerator_mul_16s_16s_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
mul_16s_16s_25_1_1_U20(
    .din0(mul_ln13_fu_152_p0),
    .din1(output_kmin1_0_0_val),
    .dout(mul_ln13_fu_152_p2)
);

accelerator_mul_16s_16s_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
mul_16s_16s_25_1_1_U21(
    .din0(mul_ln12_1_fu_182_p0),
    .din1(mul_ln12_1_fu_182_p1),
    .dout(mul_ln12_1_fu_182_p2)
);

accelerator_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U22(
    .din0(delta_k_0_0_val_read_reg_677),
    .din1(output_kmin1_0_0_val_read_reg_687),
    .dout(mul_ln14_fu_226_p2)
);

accelerator_mul_16s_16s_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
mul_16s_16s_25_1_1_U23(
    .din0(mul_ln13_2_fu_268_p0),
    .din1(mul_ln13_2_fu_268_p1),
    .dout(mul_ln13_2_fu_268_p2)
);

accelerator_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U24(
    .din0(mul_ln14_2_fu_297_p0),
    .din1(output_kmin1_0_1_val_read_reg_682),
    .dout(mul_ln14_2_fu_297_p2)
);

accelerator_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U25(
    .din0(delta_k_0_1_val_read_reg_754),
    .din1(mul_ln14_3_fu_321_p1),
    .dout(mul_ln14_3_fu_321_p2)
);

accelerator_mul_16s_16s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_1_U26(
    .din0(mul_ln14_6_fu_431_p0),
    .din1(mul_ln14_6_fu_431_p1),
    .dout(mul_ln14_6_fu_431_p2)
);

accelerator_mac_mulsub_16s_6ns_25s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
mac_mulsub_16s_6ns_25s_25_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(delta_k_0_0_val),
    .din1(grp_fu_625_p1),
    .din2(grp_fu_625_p2),
    .ce(grp_fu_625_ce),
    .dout(grp_fu_625_p3)
);

accelerator_mac_muladd_16s_16s_25ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_16s_25ns_25_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_634_p0),
    .din1(output_kmin1_0_1_val),
    .din2(grp_fu_634_p2),
    .ce(grp_fu_634_ce),
    .dout(grp_fu_634_p3)
);

accelerator_mac_muladd_16s_16s_25ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_16s_25ns_25_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_643_p0),
    .din1(grp_fu_643_p1),
    .din2(grp_fu_643_p2),
    .ce(grp_fu_643_ce),
    .dout(grp_fu_643_p3)
);

accelerator_mac_muladd_16s_16s_25ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_16s_25ns_25_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_port_reg_p_read31),
    .din1(grp_fu_652_p1),
    .din2(grp_fu_652_p2),
    .ce(grp_fu_652_ce),
    .dout(grp_fu_652_p3)
);

accelerator_mac_muladd_16s_16s_25ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_16s_25ns_25_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_661_p0),
    .din1(grp_fu_661_p1),
    .din2(grp_fu_661_p2),
    .ce(grp_fu_661_ce),
    .dout(grp_fu_661_p3)
);

accelerator_mac_mulsub_16s_6ns_25s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
mac_mulsub_16s_6ns_25s_25_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(delta_k_0_1_val_read_reg_754),
    .din1(grp_fu_668_p1),
    .din2(grp_fu_668_p2),
    .ce(grp_fu_668_ce),
    .dout(grp_fu_668_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        agg_result_delta_kmin1_0_0_reg_892 <= agg_result_delta_kmin1_0_0_fu_510_p3;
        agg_result_delta_kmin1_1_0_reg_897 <= agg_result_delta_kmin1_1_0_fu_517_p3;
        biases_0_1_val_read_reg_877 <= ap_port_reg_biases_0_1_val;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_port_reg_biases_0_0_val <= biases_0_0_val;
        ap_port_reg_biases_0_1_val <= biases_0_1_val;
        ap_port_reg_delta_k_0_1_val <= delta_k_0_1_val;
        ap_port_reg_p_read30 <= p_read30;
        ap_port_reg_p_read31 <= p_read31;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        bias_out_bias_change_reg_847 <= {{grp_fu_625_p3[24:9]}};
        output_3_reg_857 <= output_3_fu_393_p3;
        weight_out_weight_change_2_reg_862 <= {{add_ln14_3_fu_408_p2[33:18]}};
        weight_out_weight_change_3_reg_872 <= {{add_ln14_4_fu_447_p2[33:18]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        biases_0_0_val_read_reg_807 <= ap_port_reg_biases_0_0_val;
        mul_ln14_3_reg_837 <= mul_ln14_3_fu_321_p2;
        sext_ln12_2_reg_827 <= sext_ln12_2_fu_315_p1;
        sext_ln13_1_reg_812 <= sext_ln13_1_fu_287_p1;
        weight_out_weight_change_1_reg_842 <= {{add_ln14_1_fu_333_p2[33:18]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp_i_i_reg_738 <= cmp_i_i_fu_202_p2;
        delta_k_0_0_val_read_reg_677 <= delta_k_0_0_val;
        icmp_ln11_1_reg_749 <= icmp_ln11_1_fu_214_p2;
        icmp_ln11_reg_744 <= icmp_ln11_fu_208_p2;
        output_kmin1_0_0_val_read_reg_687 <= output_kmin1_0_0_val;
        output_kmin1_0_1_val_read_reg_682 <= output_kmin1_0_1_val;
        p_read_2_reg_692 <= p_read29;
        p_read_3_reg_697 <= p_read10;
        sext_ln13_2_reg_707 <= sext_ln13_2_fu_148_p1;
        sext_ln13_3_reg_727 <= sext_ln13_3_fu_188_p1;
        tmp_1_reg_717 <= {{mul_ln12_fu_142_p2[24:9]}};
        tmp_2_reg_733 <= {{mul_ln12_1_fu_182_p2[24:9]}};
        tmp_reg_712 <= {{mul_ln13_fu_152_p2[24:9]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        delta_k_0_1_val_read_reg_754 <= ap_port_reg_delta_k_0_1_val;
        p_read_1_reg_765 <= ap_port_reg_p_read30;
        p_read_reg_760 <= ap_port_reg_p_read31;
        sext_ln12_9_reg_796 <= sext_ln12_9_fu_273_p1;
        sext_ln12_reg_770 <= sext_ln12_fu_220_p1;
        sext_ln13_reg_775 <= sext_ln13_fu_223_p1;
        tmp_3_reg_802 <= {{mul_ln13_2_fu_268_p2[24:9]}};
        weight_out_weight_change_reg_780 <= {{add_ln14_fu_244_p2[33:18]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_120_p0 = sext_ln24_1_fu_365_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_120_p0 = sext_ln24_fu_302_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_120_p0 = sext_ln14_fu_232_p1;
        end else begin
            grp_fu_120_p0 = 'bx;
        end
    end else begin
        grp_fu_120_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))))) begin
        grp_fu_625_ce = 1'b1;
    end else begin
        grp_fu_625_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))))) begin
        grp_fu_634_ce = 1'b1;
    end else begin
        grp_fu_634_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))))) begin
        grp_fu_643_ce = 1'b1;
    end else begin
        grp_fu_643_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))))) begin
        grp_fu_652_ce = 1'b1;
    end else begin
        grp_fu_652_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))))) begin
        grp_fu_661_ce = 1'b1;
    end else begin
        grp_fu_661_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))))) begin
        grp_fu_668_ce = 1'b1;
    end else begin
        grp_fu_668_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_idle_pp0_1to1 == 1'b1) & (ap_start == 1'b0)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14_1_fu_333_p2 = (shl_ln14_1_fu_326_p3 + grp_fu_120_p2);

assign add_ln14_3_fu_408_p2 = (shl_ln14_2_fu_401_p3 + grp_fu_120_p2);

assign add_ln14_4_fu_447_p2 = (shl_ln14_3_fu_440_p3 + mul_ln14_7_fu_125_p2);

assign add_ln14_fu_244_p2 = (shl_ln_fu_237_p3 + grp_fu_120_p2);

assign agg_result_delta_kmin1_0_0_fu_510_p3 = ((cmp_i_i_reg_738[0:0] == 1'b1) ? 16'd0 : error_1_fu_496_p3);

assign agg_result_delta_kmin1_1_0_fu_517_p3 = ((cmp_i_i_reg_738[0:0] == 1'b1) ? 16'd0 : error_3_fu_503_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_subdone = (1'b0 == ap_ce);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = zext_ln12_fu_524_p1;

assign ap_return_1 = zext_ln6_fu_568_p1;

assign ap_return_2 = agg_result_delta_kmin1_0_0_reg_892;

assign ap_return_3 = agg_result_delta_kmin1_1_0_reg_897;

assign ap_return_4 = weight_out_weight_change_reg_780;

assign ap_return_5 = weight_out_weight_change_1_reg_842;

assign ap_return_6 = weight_out_weight_change_2_reg_862;

assign ap_return_7 = weight_out_weight_change_3_reg_872;

assign ap_return_8 = bias_out_bias_change_reg_847;

assign ap_return_9 = {{grp_fu_668_p3[24:9]}};

assign bias_out_net_sum_1_fu_536_p2 = (weight_out_sum_output_out_1_fu_527_p4 + biases_0_1_val_read_reg_877);

assign bias_out_net_sum_fu_378_p2 = (weight_out_sum_output_out_fu_369_p4 + biases_0_0_val_read_reg_807);

assign cmp_i_i_fu_202_p2 = ((training == 16'd0) ? 1'b1 : 1'b0);

assign error_1_fu_496_p3 = ((icmp_ln11_reg_744[0:0] == 1'b1) ? weight_out_sum_delta_out_fu_463_p4 : 16'd0);

assign error_3_fu_503_p3 = ((icmp_ln11_1_reg_749[0:0] == 1'b1) ? weight_out_sum_delta_out_1_fu_472_p4 : 16'd0);

assign grp_fu_120_p1 = 34'd17179869133;

assign grp_fu_625_p1 = 23'd51;

assign grp_fu_625_p2 = {{ap_port_reg_biases_0_0_val}, {9'd0}};

assign grp_fu_634_p0 = sext_ln12_6_fu_178_p1;

assign grp_fu_634_p2 = {{tmp_reg_712}, {9'd0}};

assign grp_fu_643_p0 = sext_ln12_7_fu_260_p1;

assign grp_fu_643_p1 = sext_ln12_8_fu_264_p1;

assign grp_fu_643_p2 = {{tmp_1_reg_717}, {9'd0}};

assign grp_fu_652_p1 = sext_ln12_8_fu_264_p1;

assign grp_fu_652_p2 = {{tmp_2_reg_733}, {9'd0}};

assign grp_fu_661_p0 = sext_ln12_9_reg_796;

assign grp_fu_661_p1 = sext_ln13_3_reg_727;

assign grp_fu_661_p2 = {{tmp_3_reg_802}, {9'd0}};

assign grp_fu_668_p1 = 23'd51;

assign grp_fu_668_p2 = {{ap_port_reg_biases_0_1_val}, {9'd0}};

assign icmp_ln11_1_fu_214_p0 = output_kmin1_0_1_val;

assign icmp_ln11_1_fu_214_p2 = (($signed(icmp_ln11_1_fu_214_p0) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_208_p0 = output_kmin1_0_0_val;

assign icmp_ln11_fu_208_p2 = (($signed(icmp_ln11_fu_208_p0) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln12_1_fu_554_p2 = (($signed(bias_out_net_sum_1_fu_536_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln12_fu_387_p2 = (($signed(bias_out_net_sum_fu_378_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign mul_ln12_1_fu_182_p0 = sext_ln12_6_fu_178_p1;

assign mul_ln12_1_fu_182_p1 = sext_ln12_4_fu_138_p1;

assign mul_ln12_fu_142_p0 = sext_ln12_3_fu_134_p1;

assign mul_ln12_fu_142_p1 = sext_ln12_4_fu_138_p1;

assign mul_ln13_2_fu_268_p0 = sext_ln12_7_fu_260_p1;

assign mul_ln13_2_fu_268_p1 = sext_ln13_2_reg_707;

assign mul_ln13_fu_152_p0 = sext_ln12_3_fu_134_p1;

assign mul_ln14_2_fu_297_p0 = sext_ln12_reg_770;

assign mul_ln14_3_fu_321_p1 = sext_ln13_reg_775;

assign mul_ln14_6_fu_431_p0 = sext_ln12_2_reg_827;

assign mul_ln14_6_fu_431_p1 = sext_ln13_1_reg_812;

assign mul_ln14_7_fu_125_p1 = 34'd17179869133;

assign output_2_fu_560_p3 = ((icmp_ln12_1_fu_554_p2[0:0] == 1'b1) ? trunc_ln32_fu_541_p1 : 15'd0);

assign output_3_fu_393_p3 = ((icmp_ln12_fu_387_p2[0:0] == 1'b1) ? trunc_ln12_fu_383_p1 : 15'd0);

assign sext_ln12_2_fu_315_p1 = delta_k_0_1_val_read_reg_754;

assign sext_ln12_3_fu_134_p0 = p_read10;

assign sext_ln12_3_fu_134_p1 = sext_ln12_3_fu_134_p0;

assign sext_ln12_4_fu_138_p0 = delta_k_0_0_val;

assign sext_ln12_4_fu_138_p1 = sext_ln12_4_fu_138_p0;

assign sext_ln12_6_fu_178_p0 = p_read29;

assign sext_ln12_6_fu_178_p1 = sext_ln12_6_fu_178_p0;

assign sext_ln12_7_fu_260_p0 = ap_port_reg_p_read30;

assign sext_ln12_7_fu_260_p1 = sext_ln12_7_fu_260_p0;

assign sext_ln12_8_fu_264_p0 = ap_port_reg_delta_k_0_1_val;

assign sext_ln12_8_fu_264_p1 = sext_ln12_8_fu_264_p0;

assign sext_ln12_9_fu_273_p0 = ap_port_reg_p_read31;

assign sext_ln12_9_fu_273_p1 = sext_ln12_9_fu_273_p0;

assign sext_ln12_fu_220_p1 = delta_k_0_0_val_read_reg_677;

assign sext_ln13_1_fu_287_p1 = output_kmin1_0_1_val_read_reg_682;

assign sext_ln13_2_fu_148_p0 = output_kmin1_0_0_val;

assign sext_ln13_2_fu_148_p1 = sext_ln13_2_fu_148_p0;

assign sext_ln13_3_fu_188_p0 = output_kmin1_0_1_val;

assign sext_ln13_3_fu_188_p1 = sext_ln13_3_fu_188_p0;

assign sext_ln13_fu_223_p1 = output_kmin1_0_0_val_read_reg_687;

assign sext_ln14_fu_232_p1 = $signed(mul_ln14_fu_226_p2);

assign sext_ln24_1_fu_365_p1 = $signed(mul_ln14_3_reg_837);

assign sext_ln24_fu_302_p1 = $signed(mul_ln14_2_fu_297_p2);

assign shl_ln14_1_fu_326_p3 = {{p_read_2_reg_692}, {18'd0}};

assign shl_ln14_2_fu_401_p3 = {{p_read_1_reg_765}, {18'd0}};

assign shl_ln14_3_fu_440_p3 = {{p_read_reg_760}, {18'd0}};

assign shl_ln_fu_237_p3 = {{p_read_3_reg_697}, {18'd0}};

assign trunc_ln12_fu_383_p1 = bias_out_net_sum_fu_378_p2[14:0];

assign trunc_ln32_fu_541_p1 = bias_out_net_sum_1_fu_536_p2[14:0];

assign weight_out_sum_delta_out_1_fu_472_p1 = grp_fu_652_p3;

assign weight_out_sum_delta_out_1_fu_472_p4 = {{weight_out_sum_delta_out_1_fu_472_p1[24:9]}};

assign weight_out_sum_delta_out_fu_463_p1 = grp_fu_643_p3;

assign weight_out_sum_delta_out_fu_463_p4 = {{weight_out_sum_delta_out_fu_463_p1[24:9]}};

assign weight_out_sum_output_out_1_fu_527_p1 = grp_fu_661_p3;

assign weight_out_sum_output_out_1_fu_527_p4 = {{weight_out_sum_output_out_1_fu_527_p1[24:9]}};

assign weight_out_sum_output_out_fu_369_p1 = grp_fu_634_p3;

assign weight_out_sum_output_out_fu_369_p4 = {{weight_out_sum_output_out_fu_369_p1[24:9]}};

assign zext_ln12_fu_524_p1 = output_3_reg_857;

assign zext_ln6_fu_568_p1 = output_2_fu_560_p3;

endmodule //accelerator_model_array
