// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module accelerator_accelerator_Pipeline_VITIS_LOOP_73_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        w2_local_1_reload,
        w2_local_reload,
        w2_local_3_reload,
        w2_local_2_reload,
        w1_local_1_reload,
        w1_local_reload,
        w1_local_3_reload,
        w1_local_2_reload,
        bias_2_local_idx90_promoted157_reload,
        bias_2_local_idx89_promoted155_reload,
        bias_1_local_idx97_promoted153_reload,
        bias_1_local_idx96_promoted151_reload,
        training,
        cmp_i_i,
        w2_local_3_0_out,
        w2_local_3_0_out_ap_vld,
        w2_local_2_0_out,
        w2_local_2_0_out_ap_vld,
        w2_local_1_0_out,
        w2_local_1_0_out_ap_vld,
        w2_local_0_out,
        w2_local_0_out_ap_vld,
        w1_local_3_0_out,
        w1_local_3_0_out_ap_vld,
        w1_local_2_0_out,
        w1_local_2_0_out_ap_vld,
        w1_local_1_0_out,
        w1_local_1_0_out_ap_vld,
        w1_local_0_out,
        w1_local_0_out_ap_vld,
        bias_2_local_idx90_val110_out,
        bias_2_local_idx90_val110_out_ap_vld,
        bias_2_local_idx89_val109_out,
        bias_2_local_idx89_val109_out_ap_vld,
        bias_1_local_idx97_val108_out,
        bias_1_local_idx97_val108_out_ap_vld,
        bias_1_local_idx96_val107_out,
        bias_1_local_idx96_val107_out_ap_vld,
        output_array_inference_3_out,
        output_array_inference_3_out_ap_vld,
        output_array_inference_2_out,
        output_array_inference_2_out_ap_vld,
        output_array_inference_1_out,
        output_array_inference_1_out_ap_vld,
        output_array_inference_out,
        output_array_inference_out_ap_vld,
        output_array_inference_4_out,
        output_array_inference_4_out_ap_vld,
        output_array_inference_5_out,
        output_array_inference_5_out_ap_vld,
        output_array_inference_6_out,
        output_array_inference_6_out_ap_vld,
        output_array_inference_7_out,
        output_array_inference_7_out_ap_vld,
        array_back2_weight_changes_24_out,
        array_back2_weight_changes_24_out_ap_vld,
        array_back2_weight_changes_25_out,
        array_back2_weight_changes_25_out_ap_vld,
        array_back2_weight_changes_26_out,
        array_back2_weight_changes_26_out_ap_vld,
        array_back2_weight_changes_27_out,
        array_back2_weight_changes_27_out_ap_vld,
        array_back2_bias_change_8_out,
        array_back2_bias_change_8_out_ap_vld,
        array_back2_bias_change_9_out,
        array_back2_bias_change_9_out_ap_vld,
        array_back1_weight_changes_24_out,
        array_back1_weight_changes_24_out_ap_vld,
        array_back1_weight_changes_25_out,
        array_back1_weight_changes_25_out_ap_vld,
        array_back1_weight_changes_26_out,
        array_back1_weight_changes_26_out_ap_vld,
        array_back1_weight_changes_27_out,
        array_back1_weight_changes_27_out_ap_vld,
        array_back1_bias_change_8_out,
        array_back1_bias_change_8_out_ap_vld,
        array_back1_bias_change_9_out,
        array_back1_bias_change_9_out_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_state1 = 148'd1;
parameter    ap_ST_fsm_state2 = 148'd2;
parameter    ap_ST_fsm_state3 = 148'd4;
parameter    ap_ST_fsm_state4 = 148'd8;
parameter    ap_ST_fsm_state5 = 148'd16;
parameter    ap_ST_fsm_state6 = 148'd32;
parameter    ap_ST_fsm_state7 = 148'd64;
parameter    ap_ST_fsm_state8 = 148'd128;
parameter    ap_ST_fsm_state9 = 148'd256;
parameter    ap_ST_fsm_state10 = 148'd512;
parameter    ap_ST_fsm_state11 = 148'd1024;
parameter    ap_ST_fsm_state12 = 148'd2048;
parameter    ap_ST_fsm_state13 = 148'd4096;
parameter    ap_ST_fsm_state14 = 148'd8192;
parameter    ap_ST_fsm_state15 = 148'd16384;
parameter    ap_ST_fsm_state16 = 148'd32768;
parameter    ap_ST_fsm_state17 = 148'd65536;
parameter    ap_ST_fsm_state18 = 148'd131072;
parameter    ap_ST_fsm_state19 = 148'd262144;
parameter    ap_ST_fsm_state20 = 148'd524288;
parameter    ap_ST_fsm_state21 = 148'd1048576;
parameter    ap_ST_fsm_state22 = 148'd2097152;
parameter    ap_ST_fsm_state23 = 148'd4194304;
parameter    ap_ST_fsm_state24 = 148'd8388608;
parameter    ap_ST_fsm_state25 = 148'd16777216;
parameter    ap_ST_fsm_state26 = 148'd33554432;
parameter    ap_ST_fsm_state27 = 148'd67108864;
parameter    ap_ST_fsm_state28 = 148'd134217728;
parameter    ap_ST_fsm_state29 = 148'd268435456;
parameter    ap_ST_fsm_state30 = 148'd536870912;
parameter    ap_ST_fsm_state31 = 148'd1073741824;
parameter    ap_ST_fsm_state32 = 148'd2147483648;
parameter    ap_ST_fsm_state33 = 148'd4294967296;
parameter    ap_ST_fsm_state34 = 148'd8589934592;
parameter    ap_ST_fsm_state35 = 148'd17179869184;
parameter    ap_ST_fsm_state36 = 148'd34359738368;
parameter    ap_ST_fsm_state37 = 148'd68719476736;
parameter    ap_ST_fsm_state38 = 148'd137438953472;
parameter    ap_ST_fsm_state39 = 148'd274877906944;
parameter    ap_ST_fsm_state40 = 148'd549755813888;
parameter    ap_ST_fsm_state41 = 148'd1099511627776;
parameter    ap_ST_fsm_state42 = 148'd2199023255552;
parameter    ap_ST_fsm_state43 = 148'd4398046511104;
parameter    ap_ST_fsm_state44 = 148'd8796093022208;
parameter    ap_ST_fsm_state45 = 148'd17592186044416;
parameter    ap_ST_fsm_state46 = 148'd35184372088832;
parameter    ap_ST_fsm_state47 = 148'd70368744177664;
parameter    ap_ST_fsm_state48 = 148'd140737488355328;
parameter    ap_ST_fsm_state49 = 148'd281474976710656;
parameter    ap_ST_fsm_state50 = 148'd562949953421312;
parameter    ap_ST_fsm_state51 = 148'd1125899906842624;
parameter    ap_ST_fsm_state52 = 148'd2251799813685248;
parameter    ap_ST_fsm_state53 = 148'd4503599627370496;
parameter    ap_ST_fsm_state54 = 148'd9007199254740992;
parameter    ap_ST_fsm_state55 = 148'd18014398509481984;
parameter    ap_ST_fsm_state56 = 148'd36028797018963968;
parameter    ap_ST_fsm_state57 = 148'd72057594037927936;
parameter    ap_ST_fsm_state58 = 148'd144115188075855872;
parameter    ap_ST_fsm_state59 = 148'd288230376151711744;
parameter    ap_ST_fsm_state60 = 148'd576460752303423488;
parameter    ap_ST_fsm_state61 = 148'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 148'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 148'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 148'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 148'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 148'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 148'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 148'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 148'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 148'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 148'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 148'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 148'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 148'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 148'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 148'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 148'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 148'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 148'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 148'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 148'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 148'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 148'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 148'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 148'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 148'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 148'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 148'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 148'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 148'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 148'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 148'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 148'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 148'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 148'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 148'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 148'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 148'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 148'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 148'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 148'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 148'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 148'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 148'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 148'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 148'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 148'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 148'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 148'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 148'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 148'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 148'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 148'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 148'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 148'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 148'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 148'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 148'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 148'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 148'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 148'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 148'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 148'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 148'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 148'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 148'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 148'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 148'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 148'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 148'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 148'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 148'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 148'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 148'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 148'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 148'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 148'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 148'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 148'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 148'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 148'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 148'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 148'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 148'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 148'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 148'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 148'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 148'd178405961588244985132285746181186892047843328;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] w2_local_1_reload;
input  [15:0] w2_local_reload;
input  [15:0] w2_local_3_reload;
input  [15:0] w2_local_2_reload;
input  [15:0] w1_local_1_reload;
input  [15:0] w1_local_reload;
input  [15:0] w1_local_3_reload;
input  [15:0] w1_local_2_reload;
input  [15:0] bias_2_local_idx90_promoted157_reload;
input  [15:0] bias_2_local_idx89_promoted155_reload;
input  [15:0] bias_1_local_idx97_promoted153_reload;
input  [15:0] bias_1_local_idx96_promoted151_reload;
input  [15:0] training;
input  [0:0] cmp_i_i;
output  [15:0] w2_local_3_0_out;
output   w2_local_3_0_out_ap_vld;
output  [15:0] w2_local_2_0_out;
output   w2_local_2_0_out_ap_vld;
output  [15:0] w2_local_1_0_out;
output   w2_local_1_0_out_ap_vld;
output  [15:0] w2_local_0_out;
output   w2_local_0_out_ap_vld;
output  [15:0] w1_local_3_0_out;
output   w1_local_3_0_out_ap_vld;
output  [15:0] w1_local_2_0_out;
output   w1_local_2_0_out_ap_vld;
output  [15:0] w1_local_1_0_out;
output   w1_local_1_0_out_ap_vld;
output  [15:0] w1_local_0_out;
output   w1_local_0_out_ap_vld;
output  [15:0] bias_2_local_idx90_val110_out;
output   bias_2_local_idx90_val110_out_ap_vld;
output  [15:0] bias_2_local_idx89_val109_out;
output   bias_2_local_idx89_val109_out_ap_vld;
output  [15:0] bias_1_local_idx97_val108_out;
output   bias_1_local_idx97_val108_out_ap_vld;
output  [15:0] bias_1_local_idx96_val107_out;
output   bias_1_local_idx96_val107_out_ap_vld;
output  [15:0] output_array_inference_3_out;
output   output_array_inference_3_out_ap_vld;
output  [15:0] output_array_inference_2_out;
output   output_array_inference_2_out_ap_vld;
output  [15:0] output_array_inference_1_out;
output   output_array_inference_1_out_ap_vld;
output  [15:0] output_array_inference_out;
output   output_array_inference_out_ap_vld;
output  [15:0] output_array_inference_4_out;
output   output_array_inference_4_out_ap_vld;
output  [15:0] output_array_inference_5_out;
output   output_array_inference_5_out_ap_vld;
output  [15:0] output_array_inference_6_out;
output   output_array_inference_6_out_ap_vld;
output  [15:0] output_array_inference_7_out;
output   output_array_inference_7_out_ap_vld;
output  [15:0] array_back2_weight_changes_24_out;
output   array_back2_weight_changes_24_out_ap_vld;
output  [15:0] array_back2_weight_changes_25_out;
output   array_back2_weight_changes_25_out_ap_vld;
output  [15:0] array_back2_weight_changes_26_out;
output   array_back2_weight_changes_26_out_ap_vld;
output  [15:0] array_back2_weight_changes_27_out;
output   array_back2_weight_changes_27_out_ap_vld;
output  [15:0] array_back2_bias_change_8_out;
output   array_back2_bias_change_8_out_ap_vld;
output  [15:0] array_back2_bias_change_9_out;
output   array_back2_bias_change_9_out_ap_vld;
output  [15:0] array_back1_weight_changes_24_out;
output   array_back1_weight_changes_24_out_ap_vld;
output  [15:0] array_back1_weight_changes_25_out;
output   array_back1_weight_changes_25_out_ap_vld;
output  [15:0] array_back1_weight_changes_26_out;
output   array_back1_weight_changes_26_out_ap_vld;
output  [15:0] array_back1_weight_changes_27_out;
output   array_back1_weight_changes_27_out_ap_vld;
output  [15:0] array_back1_bias_change_8_out;
output   array_back1_bias_change_8_out_ap_vld;
output  [15:0] array_back1_bias_change_9_out;
output   array_back1_bias_change_9_out_ap_vld;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] w2_local_3_0_out;
reg w2_local_3_0_out_ap_vld;
reg[15:0] w2_local_2_0_out;
reg w2_local_2_0_out_ap_vld;
reg[15:0] w2_local_1_0_out;
reg w2_local_1_0_out_ap_vld;
reg[15:0] w2_local_0_out;
reg w2_local_0_out_ap_vld;
reg[15:0] w1_local_3_0_out;
reg w1_local_3_0_out_ap_vld;
reg[15:0] w1_local_2_0_out;
reg w1_local_2_0_out_ap_vld;
reg[15:0] w1_local_1_0_out;
reg w1_local_1_0_out_ap_vld;
reg[15:0] w1_local_0_out;
reg w1_local_0_out_ap_vld;
reg[15:0] bias_2_local_idx90_val110_out;
reg bias_2_local_idx90_val110_out_ap_vld;
reg[15:0] bias_2_local_idx89_val109_out;
reg bias_2_local_idx89_val109_out_ap_vld;
reg[15:0] bias_1_local_idx97_val108_out;
reg bias_1_local_idx97_val108_out_ap_vld;
reg[15:0] bias_1_local_idx96_val107_out;
reg bias_1_local_idx96_val107_out_ap_vld;
reg[15:0] output_array_inference_3_out;
reg output_array_inference_3_out_ap_vld;
reg[15:0] output_array_inference_2_out;
reg output_array_inference_2_out_ap_vld;
reg[15:0] output_array_inference_1_out;
reg output_array_inference_1_out_ap_vld;
reg[15:0] output_array_inference_out;
reg output_array_inference_out_ap_vld;
reg output_array_inference_4_out_ap_vld;
reg output_array_inference_5_out_ap_vld;
reg output_array_inference_6_out_ap_vld;
reg output_array_inference_7_out_ap_vld;
reg array_back2_weight_changes_24_out_ap_vld;
reg array_back2_weight_changes_25_out_ap_vld;
reg array_back2_weight_changes_26_out_ap_vld;
reg array_back2_weight_changes_27_out_ap_vld;
reg array_back2_bias_change_8_out_ap_vld;
reg array_back2_bias_change_9_out_ap_vld;
reg array_back1_weight_changes_24_out_ap_vld;
reg array_back1_weight_changes_25_out_ap_vld;
reg array_back1_weight_changes_26_out_ap_vld;
reg array_back1_weight_changes_27_out_ap_vld;
reg array_back1_bias_change_8_out_ap_vld;
reg array_back1_bias_change_9_out_ap_vld;
reg[0:0] ap_return;

(* fsm_encoding = "none" *) reg   [147:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] reg_706;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state119;
reg   [15:0] reg_711;
wire   [15:0] grp_fu_650_p3;
reg   [15:0] reg_716;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state128;
reg   [15:0] reg_720;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state137;
reg   [15:0] reg_725;
reg   [15:0] reg_730;
reg   [15:0] reg_736;
reg   [15:0] reg_742;
reg   [15:0] reg_748;
reg   [15:0] reg_754;
reg   [15:0] reg_760;
reg   [15:0] reg_766;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state146;
reg   [15:0] reg_772;
reg   [15:0] reg_778;
reg   [15:0] reg_784;
reg   [15:0] reg_790;
reg   [15:0] reg_796;
reg   [15:0] reg_802;
wire   [0:0] cmp_i_i_read_read_fu_276_p2;
wire   [0:0] icmp_ln73_fu_901_p2;
reg   [0:0] icmp_ln73_reg_2653;
wire    ap_CS_fsm_state2;
wire   [8:0] i_2_fu_907_p2;
reg   [8:0] i_2_reg_2657;
reg   [15:0] bias_1_local_idx96_val107_load_1_reg_2662;
wire    ap_CS_fsm_state3;
reg   [15:0] bias_1_local_idx97_val108_load_1_reg_2668;
reg   [15:0] w1_local_0_load_1_reg_2674;
reg   [15:0] w1_local_1_0_load_1_reg_2680;
reg   [15:0] w1_local_2_0_load_1_reg_2686;
reg   [15:0] w1_local_3_0_load_1_reg_2692;
reg   [15:0] bias_2_local_idx89_val109_load_1_reg_2698;
wire    ap_CS_fsm_state12;
reg   [15:0] bias_2_local_idx90_val110_load_1_reg_2704;
reg   [15:0] w2_local_0_load_1_reg_2710;
reg   [15:0] w2_local_1_0_load_1_reg_2716;
reg   [15:0] w2_local_2_0_load_1_reg_2722;
reg   [15:0] w2_local_3_0_load_1_reg_2728;
wire   [0:0] grp_fu_630_p2;
reg   [0:0] icmp_ln102_reg_2734;
wire   [0:0] grp_fu_636_p3;
reg   [0:0] tmp_3_reg_2740;
wire   [10:0] trunc_ln102_fu_985_p1;
reg   [10:0] trunc_ln102_reg_2745;
wire   [31:0] sub_ln102_1_fu_989_p2;
reg   [31:0] sub_ln102_1_reg_2750;
wire   [1:0] or_ln_fu_1089_p3;
reg   [1:0] or_ln_reg_2756;
wire   [0:0] icmp_ln102_3_fu_1097_p2;
reg   [0:0] icmp_ln102_3_reg_2761;
wire   [14:0] select_ln114_fu_1103_p3;
reg   [14:0] select_ln114_reg_2766;
wire   [63:0] zext_ln102_fu_1111_p1;
reg   [63:0] zext_ln102_reg_2771;
wire    ap_CS_fsm_state21;
wire   [63:0] lshr_ln102_fu_1124_p2;
reg   [63:0] lshr_ln102_reg_2776;
wire   [63:0] LD_fu_1211_p5;
reg   [63:0] LD_reg_2781;
wire    ap_CS_fsm_state22;
wire   [0:0] or_ln102_7_fu_1245_p2;
reg   [0:0] or_ln102_7_reg_2786;
wire   [63:0] bitcast_ln748_fu_1251_p1;
reg   [63:0] bitcast_ln748_reg_2792;
wire    ap_CS_fsm_state23;
wire   [0:0] grp_fu_617_p2;
reg   [0:0] tmp_reg_2797;
wire    ap_CS_fsm_state24;
reg   [0:0] tmp_2_reg_2802;
wire    ap_CS_fsm_state25;
reg   [0:0] tmp_14_reg_2807;
wire   [10:0] trunc_ln102_4_fu_1275_p1;
reg   [10:0] trunc_ln102_4_reg_2812;
wire   [31:0] sub_ln102_5_fu_1279_p2;
reg   [31:0] sub_ln102_5_reg_2817;
wire   [1:0] or_ln102_1_fu_1379_p3;
reg   [1:0] or_ln102_1_reg_2823;
wire   [0:0] icmp_ln102_9_fu_1387_p2;
reg   [0:0] icmp_ln102_9_reg_2828;
wire   [0:0] grp_fu_806_p2;
reg   [0:0] icmp_ln102_5_reg_2833;
wire    ap_CS_fsm_state57;
wire   [63:0] zext_ln102_4_fu_1393_p1;
reg   [63:0] zext_ln102_4_reg_2839;
wire   [63:0] lshr_ln102_2_fu_1406_p2;
reg   [63:0] lshr_ln102_2_reg_2844;
wire   [63:0] LD_1_fu_1489_p5;
reg   [63:0] LD_1_reg_2849;
wire    ap_CS_fsm_state58;
wire   [0:0] or_ln102_8_fu_1523_p2;
reg   [0:0] or_ln102_8_reg_2854;
wire   [63:0] bitcast_ln748_1_fu_1529_p1;
reg   [63:0] bitcast_ln748_1_reg_2860;
wire    ap_CS_fsm_state59;
reg   [0:0] tmp_16_reg_2865;
wire    ap_CS_fsm_state60;
reg   [0:0] tmp_17_reg_2870;
wire    ap_CS_fsm_state61;
reg   [0:0] tmp_25_reg_2875;
wire   [10:0] trunc_ln102_8_fu_1553_p1;
reg   [10:0] trunc_ln102_8_reg_2880;
wire   [31:0] sub_ln102_9_fu_1557_p2;
reg   [31:0] sub_ln102_9_reg_2885;
wire   [1:0] or_ln102_2_fu_1657_p3;
reg   [1:0] or_ln102_2_reg_2891;
wire   [0:0] icmp_ln102_14_fu_1665_p2;
reg   [0:0] icmp_ln102_14_reg_2896;
reg   [0:0] icmp_ln102_10_reg_2901;
wire    ap_CS_fsm_state93;
wire   [63:0] zext_ln102_8_fu_1671_p1;
reg   [63:0] zext_ln102_8_reg_2907;
wire   [63:0] lshr_ln102_4_fu_1684_p2;
reg   [63:0] lshr_ln102_4_reg_2912;
wire   [63:0] LD_2_fu_1767_p5;
reg   [63:0] LD_2_reg_2917;
wire    ap_CS_fsm_state94;
wire   [0:0] or_ln102_9_fu_1801_p2;
reg   [0:0] or_ln102_9_reg_2922;
wire   [63:0] bitcast_ln748_2_fu_1807_p1;
reg   [63:0] bitcast_ln748_2_reg_2928;
wire    ap_CS_fsm_state95;
reg   [0:0] tmp_26_reg_2933;
wire    ap_CS_fsm_state96;
reg   [0:0] tmp_27_reg_2938;
wire    ap_CS_fsm_state97;
reg   [0:0] icmp_ln102_15_reg_2943;
reg   [0:0] tmp_39_reg_2949;
wire   [10:0] trunc_ln102_10_fu_1835_p1;
reg   [10:0] trunc_ln102_10_reg_2954;
wire   [31:0] sub_ln102_13_fu_1839_p2;
reg   [31:0] sub_ln102_13_reg_2959;
wire   [1:0] or_ln102_3_fu_1939_p3;
reg   [1:0] or_ln102_3_reg_2965;
wire   [0:0] icmp_ln102_19_fu_1947_p2;
reg   [0:0] icmp_ln102_19_reg_2970;
wire   [14:0] select_ln114_3_fu_1953_p3;
reg   [14:0] select_ln114_3_reg_2975;
wire   [63:0] zext_ln102_12_fu_1961_p1;
reg   [63:0] zext_ln102_12_reg_2980;
wire    ap_CS_fsm_state129;
wire   [63:0] lshr_ln102_6_fu_1974_p2;
reg   [63:0] lshr_ln102_6_reg_2985;
wire   [63:0] LD_3_fu_2061_p5;
reg   [63:0] LD_3_reg_2990;
wire    ap_CS_fsm_state130;
wire   [0:0] or_ln102_10_fu_2095_p2;
reg   [0:0] or_ln102_10_reg_2995;
wire   [63:0] bitcast_ln748_3_fu_2101_p1;
reg   [63:0] bitcast_ln748_3_reg_3001;
wire    ap_CS_fsm_state131;
reg   [0:0] tmp_36_reg_3006;
wire    ap_CS_fsm_state132;
reg   [0:0] tmp_37_reg_3011;
wire    ap_CS_fsm_state133;
reg   [15:0] output_array_inference_load_1_reg_3016;
reg   [15:0] output_array_inference_1_load_1_reg_3021;
reg   [15:0] output_array_inference_2_load_1_reg_3026;
reg   [15:0] output_array_inference_3_load_1_reg_3031;
wire   [15:0] output_array_inference_4_fu_2159_p9;
reg   [15:0] output_array_inference_4_reg_3036;
wire   [15:0] output_array_inference_5_fu_2221_p9;
reg   [15:0] output_array_inference_5_reg_3041;
wire   [15:0] output_array_inference_6_fu_2283_p9;
reg   [15:0] output_array_inference_6_reg_3046;
wire   [15:0] output_array_inference_7_fu_2345_p9;
reg   [15:0] output_array_inference_7_reg_3051;
wire    grp_model_array_fu_596_ap_start;
wire    grp_model_array_fu_596_ap_done;
wire    grp_model_array_fu_596_ap_idle;
wire    grp_model_array_fu_596_ap_ready;
reg   [15:0] grp_model_array_fu_596_p_read10;
reg   [15:0] grp_model_array_fu_596_p_read29;
reg   [15:0] grp_model_array_fu_596_p_read30;
reg   [15:0] grp_model_array_fu_596_p_read31;
reg   [15:0] grp_model_array_fu_596_biases_0_0_val;
reg   [15:0] grp_model_array_fu_596_biases_0_1_val;
reg   [15:0] grp_model_array_fu_596_output_kmin1_0_0_val;
reg   [15:0] grp_model_array_fu_596_output_kmin1_0_1_val;
reg   [15:0] grp_model_array_fu_596_delta_k_0_0_val;
reg   [15:0] grp_model_array_fu_596_delta_k_0_1_val;
wire   [15:0] grp_model_array_fu_596_ap_return_0;
wire   [15:0] grp_model_array_fu_596_ap_return_1;
wire   [15:0] grp_model_array_fu_596_ap_return_2;
wire   [15:0] grp_model_array_fu_596_ap_return_3;
wire   [15:0] grp_model_array_fu_596_ap_return_4;
wire   [15:0] grp_model_array_fu_596_ap_return_5;
wire   [15:0] grp_model_array_fu_596_ap_return_6;
wire   [15:0] grp_model_array_fu_596_ap_return_7;
wire   [15:0] grp_model_array_fu_596_ap_return_8;
wire   [15:0] grp_model_array_fu_596_ap_return_9;
reg   [0:0] ap_phi_mux_UnifiedRetVal_phi_fu_588_p4;
reg   [0:0] UnifiedRetVal_reg_584;
wire    ap_CS_fsm_state148;
wire    ap_CS_fsm_state147;
reg    grp_model_array_fu_596_ap_start_reg;
reg   [147:0] ap_NS_fsm;
wire    ap_NS_fsm_state3;
wire    ap_NS_fsm_state12;
wire    ap_NS_fsm_state21;
wire    ap_NS_fsm_state30;
wire    ap_NS_fsm_state39;
wire    ap_NS_fsm_state48;
wire    ap_NS_fsm_state57;
wire    ap_NS_fsm_state66;
wire    ap_NS_fsm_state75;
wire    ap_NS_fsm_state84;
wire    ap_NS_fsm_state93;
wire    ap_NS_fsm_state102;
wire    ap_NS_fsm_state111;
wire    ap_NS_fsm_state120;
wire    ap_NS_fsm_state129;
wire    ap_NS_fsm_state138;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state120;
wire    ap_CS_fsm_state138;
wire   [15:0] zext_ln132_fu_1130_p1;
wire   [15:0] grp_fu_824_p3;
wire   [15:0] zext_ln132_1_fu_1980_p1;
reg   [8:0] i_fu_208;
reg   [15:0] output_array_inference_fu_212;
reg   [15:0] output_array_inference_1_fu_216;
reg   [15:0] output_array_inference_2_fu_220;
reg   [15:0] output_array_inference_3_fu_224;
reg   [15:0] bias_1_local_idx96_val107_fu_228;
reg   [15:0] bias_1_local_idx97_val108_fu_232;
reg   [15:0] bias_2_local_idx89_val109_fu_236;
reg   [15:0] bias_2_local_idx90_val110_fu_240;
reg   [15:0] w1_local_0_fu_244;
reg   [15:0] w1_local_1_0_fu_248;
reg   [15:0] w1_local_2_0_fu_252;
reg   [15:0] w1_local_3_0_fu_256;
reg   [15:0] w2_local_0_fu_260;
reg   [15:0] w2_local_1_0_fu_264;
reg   [15:0] w2_local_2_0_fu_268;
reg   [15:0] w2_local_3_0_fu_272;
reg   [63:0] grp_fu_617_p0;
wire   [15:0] grp_fu_644_p2;
wire   [0:0] grp_fu_812_p2;
wire   [15:0] grp_fu_818_p2;
reg   [15:0] grp_fu_658_p4;
wire   [16:0] tmp_6_fu_965_p3;
wire  signed [31:0] sext_ln102_fu_973_p1;
reg   [31:0] tmp_7_fu_977_p3;
wire   [31:0] add_ln102_fu_995_p2;
wire   [30:0] tmp_4_fu_1001_p4;
wire   [3:0] trunc_ln102_1_fu_1017_p1;
wire   [3:0] sub_ln102_16_fu_1021_p2;
wire   [15:0] zext_ln102_20_fu_1027_p1;
wire   [15:0] lshr_ln102_8_fu_1031_p2;
wire   [15:0] and_ln102_12_fu_1037_p2;
wire   [0:0] icmp_ln102_1_fu_1011_p2;
wire   [0:0] icmp_ln102_2_fu_1043_p2;
wire   [0:0] tmp_8_fu_1055_p3;
wire   [0:0] tmp_9_fu_1069_p3;
wire   [0:0] xor_ln102_4_fu_1063_p2;
wire   [0:0] and_ln102_fu_1077_p2;
wire   [0:0] phi_ln102_fu_1049_p2;
wire   [0:0] or_ln102_4_fu_1083_p2;
wire   [0:0] grp_fu_668_p2;
wire   [14:0] trunc_ln97_fu_961_p1;
wire   [31:0] add_ln102_1_fu_1115_p2;
wire   [63:0] zext_ln102_1_fu_1120_p1;
wire   [31:0] sub_ln102_2_fu_1134_p2;
wire   [63:0] zext_ln102_2_fu_1139_p1;
wire   [63:0] shl_ln102_fu_1143_p2;
wire   [63:0] cond50_i_i315_fu_1148_p3;
wire   [63:0] zext_ln102_3_fu_1154_p1;
wire   [63:0] add_ln102_2_fu_1157_p2;
wire   [62:0] lshr_ln102_1_fu_1163_p4;
wire   [0:0] tmp_13_fu_1177_p3;
wire   [10:0] select_ln102_1_fu_1185_p3;
wire   [10:0] sub_ln102_3_fu_1193_p2;
wire   [10:0] add_ln102_3_fu_1198_p2;
wire   [63:0] zext_ln102_16_fu_1173_p1;
wire   [11:0] tmp_1_fu_1204_p3;
wire   [51:0] trunc_ln102_2_fu_1223_p4;
wire   [0:0] icmp_ln102_6_fu_1239_p2;
wire   [0:0] icmp_ln102_4_fu_1233_p2;
wire   [16:0] tmp_10_fu_1255_p3;
wire  signed [31:0] sext_ln102_1_fu_1263_p1;
reg   [31:0] tmp_11_fu_1267_p3;
wire   [31:0] add_ln102_4_fu_1285_p2;
wire   [30:0] tmp_15_fu_1291_p4;
wire   [3:0] trunc_ln102_6_fu_1307_p1;
wire   [3:0] sub_ln102_17_fu_1311_p2;
wire   [15:0] zext_ln102_21_fu_1317_p1;
wire   [15:0] lshr_ln102_9_fu_1321_p2;
wire   [15:0] and_ln102_13_fu_1327_p2;
wire   [0:0] icmp_ln102_8_fu_1301_p2;
wire   [0:0] icmp_ln102_7_fu_1333_p2;
wire   [0:0] tmp_19_fu_1345_p3;
wire   [0:0] tmp_23_fu_1359_p3;
wire   [0:0] xor_ln102_5_fu_1353_p2;
wire   [0:0] and_ln102_3_fu_1367_p2;
wire   [0:0] phi_ln102_1_fu_1339_p2;
wire   [0:0] or_ln102_fu_1373_p2;
wire   [31:0] add_ln102_5_fu_1397_p2;
wire   [63:0] zext_ln102_5_fu_1402_p1;
wire   [31:0] sub_ln102_6_fu_1412_p2;
wire   [63:0] zext_ln102_6_fu_1417_p1;
wire   [63:0] shl_ln102_1_fu_1421_p2;
wire   [63:0] cond50_i_i315_1_fu_1426_p3;
wire   [63:0] zext_ln102_7_fu_1432_p1;
wire   [63:0] add_ln102_6_fu_1435_p2;
wire   [62:0] lshr_ln102_3_fu_1441_p4;
wire   [0:0] tmp_24_fu_1455_p3;
wire   [10:0] select_ln102_3_fu_1463_p3;
wire   [10:0] sub_ln102_7_fu_1471_p2;
wire   [10:0] add_ln102_7_fu_1476_p2;
wire   [63:0] zext_ln102_17_fu_1451_p1;
wire   [11:0] tmp_12_fu_1482_p3;
wire   [51:0] trunc_ln102_3_fu_1501_p4;
wire   [0:0] icmp_ln102_13_fu_1517_p2;
wire   [0:0] icmp_ln102_11_fu_1511_p2;
wire   [16:0] tmp_20_fu_1533_p3;
wire  signed [31:0] sext_ln102_2_fu_1541_p1;
reg   [31:0] tmp_21_fu_1545_p3;
wire   [31:0] add_ln102_8_fu_1563_p2;
wire   [30:0] tmp_29_fu_1569_p4;
wire   [3:0] trunc_ln102_9_fu_1585_p1;
wire   [3:0] sub_ln102_18_fu_1589_p2;
wire   [15:0] zext_ln102_22_fu_1595_p1;
wire   [15:0] lshr_ln102_10_fu_1599_p2;
wire   [15:0] and_ln102_14_fu_1605_p2;
wire   [0:0] icmp_ln102_16_fu_1579_p2;
wire   [0:0] icmp_ln102_12_fu_1611_p2;
wire   [0:0] tmp_33_fu_1623_p3;
wire   [0:0] tmp_34_fu_1637_p3;
wire   [0:0] xor_ln102_6_fu_1631_p2;
wire   [0:0] and_ln102_6_fu_1645_p2;
wire   [0:0] phi_ln102_2_fu_1617_p2;
wire   [0:0] or_ln102_5_fu_1651_p2;
wire   [31:0] add_ln102_9_fu_1675_p2;
wire   [63:0] zext_ln102_9_fu_1680_p1;
wire   [31:0] sub_ln102_10_fu_1690_p2;
wire   [63:0] zext_ln102_10_fu_1695_p1;
wire   [63:0] shl_ln102_2_fu_1699_p2;
wire   [63:0] cond50_i_i315_2_fu_1704_p3;
wire   [63:0] zext_ln102_11_fu_1710_p1;
wire   [63:0] add_ln102_10_fu_1713_p2;
wire   [62:0] lshr_ln102_5_fu_1719_p4;
wire   [0:0] tmp_35_fu_1733_p3;
wire   [10:0] select_ln102_5_fu_1741_p3;
wire   [10:0] sub_ln102_11_fu_1749_p2;
wire   [10:0] add_ln102_11_fu_1754_p2;
wire   [63:0] zext_ln102_18_fu_1729_p1;
wire   [11:0] tmp_22_fu_1760_p3;
wire   [51:0] trunc_ln102_5_fu_1779_p4;
wire   [0:0] icmp_ln102_20_fu_1795_p2;
wire   [0:0] icmp_ln102_18_fu_1789_p2;
wire   [16:0] tmp_30_fu_1815_p3;
wire  signed [31:0] sext_ln102_3_fu_1823_p1;
reg   [31:0] tmp_31_fu_1827_p3;
wire   [31:0] add_ln102_12_fu_1845_p2;
wire   [30:0] tmp_40_fu_1851_p4;
wire   [3:0] trunc_ln102_11_fu_1867_p1;
wire   [3:0] sub_ln102_19_fu_1871_p2;
wire   [15:0] zext_ln102_23_fu_1877_p1;
wire   [15:0] lshr_ln102_11_fu_1881_p2;
wire   [15:0] and_ln102_15_fu_1887_p2;
wire   [0:0] icmp_ln102_21_fu_1861_p2;
wire   [0:0] icmp_ln102_17_fu_1893_p2;
wire   [0:0] tmp_41_fu_1905_p3;
wire   [0:0] tmp_42_fu_1919_p3;
wire   [0:0] xor_ln102_7_fu_1913_p2;
wire   [0:0] and_ln102_9_fu_1927_p2;
wire   [0:0] phi_ln102_3_fu_1899_p2;
wire   [0:0] or_ln102_6_fu_1933_p2;
wire   [14:0] trunc_ln97_1_fu_1811_p1;
wire   [31:0] add_ln102_13_fu_1965_p2;
wire   [63:0] zext_ln102_13_fu_1970_p1;
wire   [31:0] sub_ln102_14_fu_1984_p2;
wire   [63:0] zext_ln102_14_fu_1989_p1;
wire   [63:0] shl_ln102_3_fu_1993_p2;
wire   [63:0] cond50_i_i315_3_fu_1998_p3;
wire   [63:0] zext_ln102_15_fu_2004_p1;
wire   [63:0] add_ln102_14_fu_2007_p2;
wire   [62:0] lshr_ln102_7_fu_2013_p4;
wire   [0:0] tmp_43_fu_2027_p3;
wire   [10:0] select_ln102_7_fu_2035_p3;
wire   [10:0] sub_ln102_15_fu_2043_p2;
wire   [10:0] add_ln102_15_fu_2048_p2;
wire   [63:0] zext_ln102_19_fu_2023_p1;
wire   [11:0] tmp_32_fu_2054_p3;
wire   [51:0] trunc_ln102_7_fu_2073_p4;
wire   [0:0] icmp_ln102_23_fu_2089_p2;
wire   [0:0] icmp_ln102_22_fu_2083_p2;
wire   [0:0] and_ln102_1_fu_2117_p2;
wire   [0:0] and_ln105_fu_2129_p2;
wire   [0:0] xor_ln102_fu_2141_p2;
wire   [0:0] and_ln102_2_fu_2146_p2;
wire   [15:0] output_array_inference_4_fu_2159_p4;
wire   [15:0] output_array_inference_4_fu_2159_p6;
wire   [15:0] output_array_inference_4_fu_2159_p7;
wire   [1:0] output_array_inference_4_fu_2159_p8;
wire   [0:0] and_ln102_4_fu_2179_p2;
wire   [0:0] and_ln105_1_fu_2191_p2;
wire   [0:0] xor_ln102_1_fu_2203_p2;
wire   [0:0] and_ln102_5_fu_2208_p2;
wire   [15:0] output_array_inference_5_fu_2221_p4;
wire   [15:0] output_array_inference_5_fu_2221_p6;
wire   [15:0] output_array_inference_5_fu_2221_p7;
wire   [1:0] output_array_inference_5_fu_2221_p8;
wire   [0:0] and_ln102_7_fu_2241_p2;
wire   [0:0] and_ln105_2_fu_2253_p2;
wire   [0:0] xor_ln102_2_fu_2265_p2;
wire   [0:0] and_ln102_8_fu_2270_p2;
wire   [15:0] output_array_inference_6_fu_2283_p4;
wire   [15:0] output_array_inference_6_fu_2283_p6;
wire   [15:0] output_array_inference_6_fu_2283_p7;
wire   [1:0] output_array_inference_6_fu_2283_p8;
wire   [0:0] and_ln102_10_fu_2303_p2;
wire   [0:0] and_ln105_3_fu_2315_p2;
wire   [0:0] xor_ln102_3_fu_2327_p2;
wire   [0:0] and_ln102_11_fu_2332_p2;
wire   [15:0] output_array_inference_7_fu_2345_p4;
wire   [15:0] output_array_inference_7_fu_2345_p6;
wire   [15:0] output_array_inference_7_fu_2345_p7;
wire   [1:0] output_array_inference_7_fu_2345_p8;
reg   [4:0] grp_fu_617_opcode;
reg   [0:0] ap_return_preg;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ST_fsm_state116_blk;
wire    ap_ST_fsm_state117_blk;
wire    ap_ST_fsm_state118_blk;
wire    ap_ST_fsm_state119_blk;
wire    ap_ST_fsm_state120_blk;
wire    ap_ST_fsm_state121_blk;
wire    ap_ST_fsm_state122_blk;
wire    ap_ST_fsm_state123_blk;
wire    ap_ST_fsm_state124_blk;
wire    ap_ST_fsm_state125_blk;
wire    ap_ST_fsm_state126_blk;
wire    ap_ST_fsm_state127_blk;
wire    ap_ST_fsm_state128_blk;
wire    ap_ST_fsm_state129_blk;
wire    ap_ST_fsm_state130_blk;
wire    ap_ST_fsm_state131_blk;
wire    ap_ST_fsm_state132_blk;
wire    ap_ST_fsm_state133_blk;
wire    ap_ST_fsm_state134_blk;
wire    ap_ST_fsm_state135_blk;
wire    ap_ST_fsm_state136_blk;
wire    ap_ST_fsm_state137_blk;
wire    ap_ST_fsm_state138_blk;
wire    ap_ST_fsm_state139_blk;
wire    ap_ST_fsm_state140_blk;
wire    ap_ST_fsm_state141_blk;
wire    ap_ST_fsm_state142_blk;
wire    ap_ST_fsm_state143_blk;
wire    ap_ST_fsm_state144_blk;
wire    ap_ST_fsm_state145_blk;
wire    ap_ST_fsm_state146_blk;
wire    ap_ST_fsm_state147_blk;
wire    ap_ST_fsm_state148_blk;
wire  signed [1:0] output_array_inference_4_fu_2159_p1;
wire   [1:0] output_array_inference_4_fu_2159_p3;
wire   [1:0] output_array_inference_4_fu_2159_p5;
wire  signed [1:0] output_array_inference_5_fu_2221_p1;
wire   [1:0] output_array_inference_5_fu_2221_p3;
wire   [1:0] output_array_inference_5_fu_2221_p5;
wire  signed [1:0] output_array_inference_6_fu_2283_p1;
wire   [1:0] output_array_inference_6_fu_2283_p3;
wire   [1:0] output_array_inference_6_fu_2283_p5;
wire  signed [1:0] output_array_inference_7_fu_2345_p1;
wire   [1:0] output_array_inference_7_fu_2345_p3;
wire   [1:0] output_array_inference_7_fu_2345_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 148'd1;
#0 grp_model_array_fu_596_ap_start_reg = 1'b0;
#0 i_fu_208 = 9'd0;
#0 output_array_inference_fu_212 = 16'd0;
#0 output_array_inference_1_fu_216 = 16'd0;
#0 output_array_inference_2_fu_220 = 16'd0;
#0 output_array_inference_3_fu_224 = 16'd0;
#0 bias_1_local_idx96_val107_fu_228 = 16'd0;
#0 bias_1_local_idx97_val108_fu_232 = 16'd0;
#0 bias_2_local_idx89_val109_fu_236 = 16'd0;
#0 bias_2_local_idx90_val110_fu_240 = 16'd0;
#0 w1_local_0_fu_244 = 16'd0;
#0 w1_local_1_0_fu_248 = 16'd0;
#0 w1_local_2_0_fu_252 = 16'd0;
#0 w1_local_3_0_fu_256 = 16'd0;
#0 w2_local_0_fu_260 = 16'd0;
#0 w2_local_1_0_fu_264 = 16'd0;
#0 w2_local_2_0_fu_268 = 16'd0;
#0 w2_local_3_0_fu_272 = 16'd0;
#0 ap_return_preg = 1'd0;
end

accelerator_model_array grp_model_array_fu_596(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_model_array_fu_596_ap_start),
    .ap_done(grp_model_array_fu_596_ap_done),
    .ap_idle(grp_model_array_fu_596_ap_idle),
    .ap_ready(grp_model_array_fu_596_ap_ready),
    .p_read10(grp_model_array_fu_596_p_read10),
    .p_read29(grp_model_array_fu_596_p_read29),
    .p_read30(grp_model_array_fu_596_p_read30),
    .p_read31(grp_model_array_fu_596_p_read31),
    .biases_0_0_val(grp_model_array_fu_596_biases_0_0_val),
    .biases_0_1_val(grp_model_array_fu_596_biases_0_1_val),
    .output_kmin1_0_0_val(grp_model_array_fu_596_output_kmin1_0_0_val),
    .output_kmin1_0_1_val(grp_model_array_fu_596_output_kmin1_0_1_val),
    .delta_k_0_0_val(grp_model_array_fu_596_delta_k_0_0_val),
    .delta_k_0_1_val(grp_model_array_fu_596_delta_k_0_1_val),
    .training(training),
    .ap_return_0(grp_model_array_fu_596_ap_return_0),
    .ap_return_1(grp_model_array_fu_596_ap_return_1),
    .ap_return_2(grp_model_array_fu_596_ap_return_2),
    .ap_return_3(grp_model_array_fu_596_ap_return_3),
    .ap_return_4(grp_model_array_fu_596_ap_return_4),
    .ap_return_5(grp_model_array_fu_596_ap_return_5),
    .ap_return_6(grp_model_array_fu_596_ap_return_6),
    .ap_return_7(grp_model_array_fu_596_ap_return_7),
    .ap_return_8(grp_model_array_fu_596_ap_return_8),
    .ap_return_9(grp_model_array_fu_596_ap_return_9),
    .ap_ce(1'b1)
);

accelerator_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_617_p0),
    .din1(64'd4602678819172646912),
    .ce(1'b1),
    .opcode(grp_fu_617_opcode),
    .dout(grp_fu_617_p2)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U56(
    .din0(16'd0),
    .din1(output_array_inference_4_fu_2159_p4),
    .din2(output_array_inference_4_fu_2159_p6),
    .def(output_array_inference_4_fu_2159_p7),
    .sel(output_array_inference_4_fu_2159_p8),
    .dout(output_array_inference_4_fu_2159_p9)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U57(
    .din0(16'd0),
    .din1(output_array_inference_5_fu_2221_p4),
    .din2(output_array_inference_5_fu_2221_p6),
    .def(output_array_inference_5_fu_2221_p7),
    .sel(output_array_inference_5_fu_2221_p8),
    .dout(output_array_inference_5_fu_2221_p9)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U58(
    .din0(16'd0),
    .din1(output_array_inference_6_fu_2283_p4),
    .din2(output_array_inference_6_fu_2283_p6),
    .def(output_array_inference_6_fu_2283_p7),
    .sel(output_array_inference_6_fu_2283_p8),
    .dout(output_array_inference_6_fu_2283_p9)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U59(
    .din0(16'd0),
    .din1(output_array_inference_7_fu_2345_p4),
    .din2(output_array_inference_7_fu_2345_p6),
    .def(output_array_inference_7_fu_2345_p7),
    .sel(output_array_inference_7_fu_2345_p8),
    .dout(output_array_inference_7_fu_2345_p9)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state147)) begin
            ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_588_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_model_array_fu_596_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln73_fu_901_p2 == 1'd0) & (1'b1 == ap_NS_fsm_state3) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state138) & (1'b1 == ap_CS_fsm_state137)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state129) & (1'b1 == ap_CS_fsm_state128)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state120) & (1'b1 == ap_CS_fsm_state119)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state111) & (1'b1 == ap_CS_fsm_state110)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state102) & (1'b1 == ap_CS_fsm_state101)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state93) & (1'b1 == ap_CS_fsm_state92)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state84) & (1'b1 == ap_CS_fsm_state83)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state75) & (1'b1 == ap_CS_fsm_state74)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state66) & (1'b1 == ap_CS_fsm_state65)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state57) & (1'b1 == ap_CS_fsm_state56)) 
    | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state48) & (1'b1 == ap_CS_fsm_state47)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state39) & (1'b1 == ap_CS_fsm_state38)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state30) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state21) & (1'b1 == ap_CS_fsm_state20)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_NS_fsm_state12) & (1'b1 == ap_CS_fsm_state11)))) begin
            grp_model_array_fu_596_ap_start_reg <= 1'b1;
        end else if ((grp_model_array_fu_596_ap_ready == 1'b1)) begin
            grp_model_array_fu_596_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        UnifiedRetVal_reg_584 <= 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state148)) begin
        UnifiedRetVal_reg_584 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        bias_1_local_idx96_val107_fu_228 <= bias_1_local_idx96_promoted151_reload;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
        bias_1_local_idx96_val107_fu_228 <= grp_model_array_fu_596_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        bias_1_local_idx97_val108_fu_232 <= bias_1_local_idx97_promoted153_reload;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
        bias_1_local_idx97_val108_fu_232 <= grp_model_array_fu_596_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        bias_2_local_idx89_val109_fu_236 <= bias_2_local_idx89_promoted155_reload;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
        bias_2_local_idx89_val109_fu_236 <= reg_754;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        bias_2_local_idx90_val110_fu_240 <= bias_2_local_idx90_promoted157_reload;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
        bias_2_local_idx90_val110_fu_240 <= reg_760;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_208 <= 9'd0;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
        i_fu_208 <= i_2_reg_2657;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w1_local_0_fu_244 <= w1_local_2_reload;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
        w1_local_0_fu_244 <= grp_model_array_fu_596_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w1_local_1_0_fu_248 <= w1_local_3_reload;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
        w1_local_1_0_fu_248 <= grp_model_array_fu_596_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w1_local_2_0_fu_252 <= w1_local_reload;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
        w1_local_2_0_fu_252 <= grp_model_array_fu_596_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w1_local_3_0_fu_256 <= w1_local_1_reload;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
        w1_local_3_0_fu_256 <= grp_model_array_fu_596_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w2_local_0_fu_260 <= w2_local_2_reload;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
        w2_local_0_fu_260 <= reg_730;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w2_local_1_0_fu_264 <= w2_local_3_reload;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
        w2_local_1_0_fu_264 <= reg_736;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w2_local_2_0_fu_268 <= w2_local_reload;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
        w2_local_2_0_fu_268 <= reg_742;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w2_local_3_0_fu_272 <= w2_local_1_reload;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
        w2_local_3_0_fu_272 <= reg_748;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        LD_1_reg_2849 <= LD_1_fu_1489_p5;
        or_ln102_8_reg_2854 <= or_ln102_8_fu_1523_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        LD_2_reg_2917 <= LD_2_fu_1767_p5;
        or_ln102_9_reg_2922 <= or_ln102_9_fu_1801_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        LD_3_reg_2990 <= LD_3_fu_2061_p5;
        or_ln102_10_reg_2995 <= or_ln102_10_fu_2095_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        LD_reg_2781 <= LD_fu_1211_p5;
        or_ln102_7_reg_2786 <= or_ln102_7_fu_1245_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bias_1_local_idx96_val107_load_1_reg_2662 <= bias_1_local_idx96_val107_fu_228;
        bias_1_local_idx97_val108_load_1_reg_2668 <= bias_1_local_idx97_val108_fu_232;
        w1_local_0_load_1_reg_2674 <= w1_local_0_fu_244;
        w1_local_1_0_load_1_reg_2680 <= w1_local_1_0_fu_248;
        w1_local_2_0_load_1_reg_2686 <= w1_local_2_0_fu_252;
        w1_local_3_0_load_1_reg_2692 <= w1_local_3_0_fu_256;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bias_2_local_idx89_val109_load_1_reg_2698 <= bias_2_local_idx89_val109_fu_236;
        bias_2_local_idx90_val110_load_1_reg_2704 <= bias_2_local_idx90_val110_fu_240;
        w2_local_0_load_1_reg_2710 <= w2_local_0_fu_260;
        w2_local_1_0_load_1_reg_2716 <= w2_local_1_0_fu_264;
        w2_local_2_0_load_1_reg_2722 <= w2_local_2_0_fu_268;
        w2_local_3_0_load_1_reg_2728 <= w2_local_3_0_fu_272;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        bitcast_ln748_1_reg_2860 <= bitcast_ln748_1_fu_1529_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        bitcast_ln748_2_reg_2928 <= bitcast_ln748_2_fu_1807_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        bitcast_ln748_3_reg_3001 <= bitcast_ln748_3_fu_2101_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        bitcast_ln748_reg_2792 <= bitcast_ln748_fu_1251_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_2657 <= i_2_fu_907_p2;
        icmp_ln73_reg_2653 <= icmp_ln73_fu_901_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        icmp_ln102_10_reg_2901 <= grp_fu_806_p2;
        lshr_ln102_4_reg_2912 <= lshr_ln102_4_fu_1684_p2;
        zext_ln102_8_reg_2907[15 : 0] <= zext_ln102_8_fu_1671_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        icmp_ln102_14_reg_2896 <= icmp_ln102_14_fu_1665_p2;
        or_ln102_2_reg_2891[0] <= or_ln102_2_fu_1657_p3[0];
        sub_ln102_9_reg_2885 <= sub_ln102_9_fu_1557_p2;
        tmp_25_reg_2875 <= grp_model_array_fu_596_ap_return_0[32'd15];
        trunc_ln102_8_reg_2880 <= trunc_ln102_8_fu_1553_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        icmp_ln102_15_reg_2943 <= grp_fu_630_p2;
        icmp_ln102_19_reg_2970 <= icmp_ln102_19_fu_1947_p2;
        or_ln102_3_reg_2965[0] <= or_ln102_3_fu_1939_p3[0];
        select_ln114_3_reg_2975 <= select_ln114_3_fu_1953_p3;
        sub_ln102_13_reg_2959 <= sub_ln102_13_fu_1839_p2;
        tmp_39_reg_2949 <= grp_model_array_fu_596_ap_return_0[32'd15];
        trunc_ln102_10_reg_2954 <= trunc_ln102_10_fu_1835_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        icmp_ln102_3_reg_2761 <= icmp_ln102_3_fu_1097_p2;
        icmp_ln102_reg_2734 <= grp_fu_630_p2;
        or_ln_reg_2756[0] <= or_ln_fu_1089_p3[0];
        select_ln114_reg_2766 <= select_ln114_fu_1103_p3;
        sub_ln102_1_reg_2750 <= sub_ln102_1_fu_989_p2;
        tmp_3_reg_2740 <= grp_model_array_fu_596_ap_return_0[32'd15];
        trunc_ln102_reg_2745 <= trunc_ln102_fu_985_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        icmp_ln102_5_reg_2833 <= grp_fu_806_p2;
        lshr_ln102_2_reg_2844 <= lshr_ln102_2_fu_1406_p2;
        zext_ln102_4_reg_2839[15 : 0] <= zext_ln102_4_fu_1393_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        icmp_ln102_9_reg_2828 <= icmp_ln102_9_fu_1387_p2;
        or_ln102_1_reg_2823[0] <= or_ln102_1_fu_1379_p3[0];
        sub_ln102_5_reg_2817 <= sub_ln102_5_fu_1279_p2;
        tmp_14_reg_2807 <= grp_model_array_fu_596_ap_return_0[32'd15];
        trunc_ln102_4_reg_2812 <= trunc_ln102_4_fu_1275_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state129)) begin
        lshr_ln102_6_reg_2985 <= lshr_ln102_6_fu_1974_p2;
        zext_ln102_12_reg_2980[15 : 0] <= zext_ln102_12_fu_1961_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        lshr_ln102_reg_2776 <= lshr_ln102_fu_1124_p2;
        zext_ln102_reg_2771[15 : 0] <= zext_ln102_fu_1111_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
        output_array_inference_1_fu_216 <= output_array_inference_6_fu_2283_p9;
        output_array_inference_2_fu_220 <= output_array_inference_5_fu_2221_p9;
        output_array_inference_3_fu_224 <= output_array_inference_4_fu_2159_p9;
        output_array_inference_fu_212 <= output_array_inference_7_fu_2345_p9;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        output_array_inference_1_load_1_reg_3021 <= output_array_inference_1_fu_216;
        output_array_inference_2_load_1_reg_3026 <= output_array_inference_2_fu_220;
        output_array_inference_3_load_1_reg_3031 <= output_array_inference_3_fu_224;
        output_array_inference_4_reg_3036 <= output_array_inference_4_fu_2159_p9;
        output_array_inference_5_reg_3041 <= output_array_inference_5_fu_2221_p9;
        output_array_inference_6_reg_3046 <= output_array_inference_6_fu_2283_p9;
        output_array_inference_7_reg_3051 <= output_array_inference_7_fu_2345_p9;
        output_array_inference_load_1_reg_3016 <= output_array_inference_fu_212;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_706 <= grp_model_array_fu_596_ap_return_0;
        reg_711 <= grp_model_array_fu_596_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_716 <= grp_fu_650_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state29))) begin
        reg_720 <= grp_model_array_fu_596_ap_return_2;
        reg_725 <= grp_model_array_fu_596_ap_return_3;
        reg_730 <= grp_model_array_fu_596_ap_return_4;
        reg_736 <= grp_model_array_fu_596_ap_return_5;
        reg_742 <= grp_model_array_fu_596_ap_return_6;
        reg_748 <= grp_model_array_fu_596_ap_return_7;
        reg_754 <= grp_model_array_fu_596_ap_return_8;
        reg_760 <= grp_model_array_fu_596_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state38))) begin
        reg_766 <= grp_model_array_fu_596_ap_return_4;
        reg_772 <= grp_model_array_fu_596_ap_return_5;
        reg_778 <= grp_model_array_fu_596_ap_return_6;
        reg_784 <= grp_model_array_fu_596_ap_return_7;
        reg_790 <= grp_model_array_fu_596_ap_return_8;
        reg_796 <= grp_model_array_fu_596_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state56))) begin
        reg_802 <= grp_model_array_fu_596_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        tmp_16_reg_2865 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        tmp_17_reg_2870 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        tmp_26_reg_2933 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        tmp_27_reg_2938 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_2_reg_2802 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        tmp_36_reg_3006 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        tmp_37_reg_3011 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_reg_2797 <= grp_fu_617_p2;
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state116_blk = 1'b0;

assign ap_ST_fsm_state117_blk = 1'b0;

assign ap_ST_fsm_state118_blk = 1'b0;

assign ap_ST_fsm_state119_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state120_blk = 1'b0;

assign ap_ST_fsm_state121_blk = 1'b0;

assign ap_ST_fsm_state122_blk = 1'b0;

assign ap_ST_fsm_state123_blk = 1'b0;

assign ap_ST_fsm_state124_blk = 1'b0;

assign ap_ST_fsm_state125_blk = 1'b0;

assign ap_ST_fsm_state126_blk = 1'b0;

assign ap_ST_fsm_state127_blk = 1'b0;

assign ap_ST_fsm_state128_blk = 1'b0;

assign ap_ST_fsm_state129_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state130_blk = 1'b0;

assign ap_ST_fsm_state131_blk = 1'b0;

assign ap_ST_fsm_state132_blk = 1'b0;

assign ap_ST_fsm_state133_blk = 1'b0;

assign ap_ST_fsm_state134_blk = 1'b0;

assign ap_ST_fsm_state135_blk = 1'b0;

assign ap_ST_fsm_state136_blk = 1'b0;

assign ap_ST_fsm_state137_blk = 1'b0;

assign ap_ST_fsm_state138_blk = 1'b0;

assign ap_ST_fsm_state139_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state140_blk = 1'b0;

assign ap_ST_fsm_state141_blk = 1'b0;

assign ap_ST_fsm_state142_blk = 1'b0;

assign ap_ST_fsm_state143_blk = 1'b0;

assign ap_ST_fsm_state144_blk = 1'b0;

assign ap_ST_fsm_state145_blk = 1'b0;

assign ap_ST_fsm_state146_blk = 1'b0;

assign ap_ST_fsm_state147_blk = 1'b0;

assign ap_ST_fsm_state148_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state147) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_588_p4 = 1'd0;
    end else begin
        ap_phi_mux_UnifiedRetVal_phi_fu_588_p4 = UnifiedRetVal_reg_584;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state147)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state147)) begin
        ap_return = ap_phi_mux_UnifiedRetVal_phi_fu_588_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        array_back1_bias_change_8_out_ap_vld = 1'b1;
    end else begin
        array_back1_bias_change_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        array_back1_bias_change_9_out_ap_vld = 1'b1;
    end else begin
        array_back1_bias_change_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        array_back1_weight_changes_24_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        array_back1_weight_changes_25_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_25_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        array_back1_weight_changes_26_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_26_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        array_back1_weight_changes_27_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_27_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        array_back2_bias_change_8_out_ap_vld = 1'b1;
    end else begin
        array_back2_bias_change_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        array_back2_bias_change_9_out_ap_vld = 1'b1;
    end else begin
        array_back2_bias_change_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        array_back2_weight_changes_24_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        array_back2_weight_changes_25_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_25_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        array_back2_weight_changes_26_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_26_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        array_back2_weight_changes_27_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_27_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        bias_1_local_idx96_val107_out = bias_1_local_idx96_val107_fu_228;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        bias_1_local_idx96_val107_out = bias_1_local_idx96_val107_load_1_reg_2662;
    end else begin
        bias_1_local_idx96_val107_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        bias_1_local_idx96_val107_out_ap_vld = 1'b1;
    end else begin
        bias_1_local_idx96_val107_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        bias_1_local_idx97_val108_out = bias_1_local_idx97_val108_fu_232;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        bias_1_local_idx97_val108_out = bias_1_local_idx97_val108_load_1_reg_2668;
    end else begin
        bias_1_local_idx97_val108_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        bias_1_local_idx97_val108_out_ap_vld = 1'b1;
    end else begin
        bias_1_local_idx97_val108_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        bias_2_local_idx89_val109_out = bias_2_local_idx89_val109_fu_236;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        bias_2_local_idx89_val109_out = bias_2_local_idx89_val109_load_1_reg_2698;
    end else begin
        bias_2_local_idx89_val109_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        bias_2_local_idx89_val109_out_ap_vld = 1'b1;
    end else begin
        bias_2_local_idx89_val109_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        bias_2_local_idx90_val110_out = bias_2_local_idx90_val110_fu_240;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        bias_2_local_idx90_val110_out = bias_2_local_idx90_val110_load_1_reg_2704;
    end else begin
        bias_2_local_idx90_val110_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        bias_2_local_idx90_val110_out_ap_vld = 1'b1;
    end else begin
        bias_2_local_idx90_val110_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state132)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state96)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state60)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state24)))) begin
        grp_fu_617_opcode = 5'd5;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state131)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state95)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state59)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state23)))) begin
        grp_fu_617_opcode = 5'd2;
    end else begin
        grp_fu_617_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_617_p0 = bitcast_ln748_3_reg_3001;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        grp_fu_617_p0 = bitcast_ln748_3_fu_2101_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_617_p0 = bitcast_ln748_2_reg_2928;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_617_p0 = bitcast_ln748_2_fu_1807_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_617_p0 = bitcast_ln748_1_reg_2860;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_617_p0 = bitcast_ln748_1_fu_1529_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_617_p0 = bitcast_ln748_reg_2792;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_617_p0 = bitcast_ln748_fu_1251_p1;
    end else begin
        grp_fu_617_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state120)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state84)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state129)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state93)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state57)))) begin
        grp_model_array_fu_596_biases_0_0_val = reg_754;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state138)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state111)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state102)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state66)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        grp_model_array_fu_596_biases_0_0_val = reg_790;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        grp_model_array_fu_596_biases_0_0_val = bias_1_local_idx96_val107_load_1_reg_2662;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        grp_model_array_fu_596_biases_0_0_val = bias_2_local_idx89_val109_load_1_reg_2698;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        grp_model_array_fu_596_biases_0_0_val = bias_2_local_idx89_val109_fu_236;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_model_array_fu_596_biases_0_0_val = bias_1_local_idx96_val107_fu_228;
    end else begin
        grp_model_array_fu_596_biases_0_0_val = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state120)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state84)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state129)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state93)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state57)))) begin
        grp_model_array_fu_596_biases_0_1_val = reg_760;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state138)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state111)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state102)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state66)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        grp_model_array_fu_596_biases_0_1_val = reg_796;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        grp_model_array_fu_596_biases_0_1_val = bias_1_local_idx97_val108_load_1_reg_2668;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        grp_model_array_fu_596_biases_0_1_val = bias_2_local_idx90_val110_load_1_reg_2704;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        grp_model_array_fu_596_biases_0_1_val = bias_2_local_idx90_val110_fu_240;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_model_array_fu_596_biases_0_1_val = bias_1_local_idx97_val108_fu_232;
    end else begin
        grp_model_array_fu_596_biases_0_1_val = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state129))) begin
        grp_model_array_fu_596_delta_k_0_0_val = zext_ln132_1_fu_1980_p1;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state93)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state57)))) begin
        grp_model_array_fu_596_delta_k_0_0_val = grp_fu_824_p3;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state138)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state102)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state66)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state30)))) begin
        grp_model_array_fu_596_delta_k_0_0_val = reg_720;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        grp_model_array_fu_596_delta_k_0_0_val = zext_ln132_fu_1130_p1;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state120)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state111)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state84)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state39)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_model_array_fu_596_delta_k_0_0_val = 16'd0;
    end else begin
        grp_model_array_fu_596_delta_k_0_0_val = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state138)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state102)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state66)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state30)))) begin
        grp_model_array_fu_596_delta_k_0_1_val = reg_725;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state120)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state111)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state84)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state39)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state129)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state93)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state57)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state21)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_model_array_fu_596_delta_k_0_1_val = 16'd0;
    end else begin
        grp_model_array_fu_596_delta_k_0_1_val = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state138)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state111)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state102)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state75)))) begin
        grp_model_array_fu_596_output_kmin1_0_0_val = 16'd512;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state120)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state84)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state129)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state93)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state57)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state21)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        grp_model_array_fu_596_output_kmin1_0_0_val = reg_706;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state66)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state39)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state30)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_model_array_fu_596_output_kmin1_0_0_val = 16'd0;
    end else begin
        grp_model_array_fu_596_output_kmin1_0_0_val = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state138)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state111)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state66)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        grp_model_array_fu_596_output_kmin1_0_1_val = 16'd512;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state120)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state84)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state129)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state93)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state57)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state21)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        grp_model_array_fu_596_output_kmin1_0_1_val = reg_711;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state102)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state30)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_model_array_fu_596_output_kmin1_0_1_val = 16'd0;
    end else begin
        grp_model_array_fu_596_output_kmin1_0_1_val = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state120)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state84)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state129)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state93)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state57)))) begin
        grp_model_array_fu_596_p_read10 = reg_730;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state138)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state111)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state102)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state66)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        grp_model_array_fu_596_p_read10 = reg_766;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        grp_model_array_fu_596_p_read10 = w1_local_0_load_1_reg_2674;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        grp_model_array_fu_596_p_read10 = w2_local_0_load_1_reg_2710;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        grp_model_array_fu_596_p_read10 = w2_local_0_fu_260;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_model_array_fu_596_p_read10 = w1_local_0_fu_244;
    end else begin
        grp_model_array_fu_596_p_read10 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state120)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state84)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state129)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state93)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state57)))) begin
        grp_model_array_fu_596_p_read29 = reg_736;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state138)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state111)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state102)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state66)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        grp_model_array_fu_596_p_read29 = reg_772;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        grp_model_array_fu_596_p_read29 = w1_local_1_0_load_1_reg_2680;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        grp_model_array_fu_596_p_read29 = w2_local_1_0_load_1_reg_2716;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        grp_model_array_fu_596_p_read29 = w2_local_1_0_fu_264;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_model_array_fu_596_p_read29 = w1_local_1_0_fu_248;
    end else begin
        grp_model_array_fu_596_p_read29 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state120)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state84)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state129)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state93)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state57)))) begin
        grp_model_array_fu_596_p_read30 = reg_742;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state138)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state111)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state102)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state66)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        grp_model_array_fu_596_p_read30 = reg_778;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        grp_model_array_fu_596_p_read30 = w1_local_2_0_load_1_reg_2686;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        grp_model_array_fu_596_p_read30 = w2_local_2_0_load_1_reg_2722;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        grp_model_array_fu_596_p_read30 = w2_local_2_0_fu_268;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_model_array_fu_596_p_read30 = w1_local_2_0_fu_252;
    end else begin
        grp_model_array_fu_596_p_read30 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state120)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state84)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state129)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state93)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state57)))) begin
        grp_model_array_fu_596_p_read31 = reg_748;
    end else if ((((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state138)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state111)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state102)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state66)) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state39)))) begin
        grp_model_array_fu_596_p_read31 = reg_784;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        grp_model_array_fu_596_p_read31 = w1_local_3_0_load_1_reg_2692;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        grp_model_array_fu_596_p_read31 = w2_local_3_0_load_1_reg_2728;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        grp_model_array_fu_596_p_read31 = w2_local_3_0_fu_272;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_model_array_fu_596_p_read31 = w1_local_3_0_fu_256;
    end else begin
        grp_model_array_fu_596_p_read31 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        output_array_inference_1_out = output_array_inference_1_fu_216;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        output_array_inference_1_out = output_array_inference_1_load_1_reg_3021;
    end else begin
        output_array_inference_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        output_array_inference_1_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        output_array_inference_2_out = output_array_inference_2_fu_220;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        output_array_inference_2_out = output_array_inference_2_load_1_reg_3026;
    end else begin
        output_array_inference_2_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        output_array_inference_2_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        output_array_inference_3_out = output_array_inference_3_fu_224;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        output_array_inference_3_out = output_array_inference_3_load_1_reg_3031;
    end else begin
        output_array_inference_3_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        output_array_inference_3_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        output_array_inference_4_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        output_array_inference_5_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        output_array_inference_6_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        output_array_inference_7_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        output_array_inference_out = output_array_inference_fu_212;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        output_array_inference_out = output_array_inference_load_1_reg_3016;
    end else begin
        output_array_inference_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        output_array_inference_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        w1_local_0_out = w1_local_0_fu_244;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        w1_local_0_out = w1_local_0_load_1_reg_2674;
    end else begin
        w1_local_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        w1_local_0_out_ap_vld = 1'b1;
    end else begin
        w1_local_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        w1_local_1_0_out = w1_local_1_0_fu_248;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        w1_local_1_0_out = w1_local_1_0_load_1_reg_2680;
    end else begin
        w1_local_1_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        w1_local_1_0_out_ap_vld = 1'b1;
    end else begin
        w1_local_1_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        w1_local_2_0_out = w1_local_2_0_fu_252;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        w1_local_2_0_out = w1_local_2_0_load_1_reg_2686;
    end else begin
        w1_local_2_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        w1_local_2_0_out_ap_vld = 1'b1;
    end else begin
        w1_local_2_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        w1_local_3_0_out = w1_local_3_0_fu_256;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        w1_local_3_0_out = w1_local_3_0_load_1_reg_2692;
    end else begin
        w1_local_3_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        w1_local_3_0_out_ap_vld = 1'b1;
    end else begin
        w1_local_3_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        w2_local_0_out = w2_local_0_fu_260;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        w2_local_0_out = w2_local_0_load_1_reg_2710;
    end else begin
        w2_local_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        w2_local_0_out_ap_vld = 1'b1;
    end else begin
        w2_local_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        w2_local_1_0_out = w2_local_1_0_fu_264;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        w2_local_1_0_out = w2_local_1_0_load_1_reg_2716;
    end else begin
        w2_local_1_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        w2_local_1_0_out_ap_vld = 1'b1;
    end else begin
        w2_local_1_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        w2_local_2_0_out = w2_local_2_0_fu_268;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        w2_local_2_0_out = w2_local_2_0_load_1_reg_2722;
    end else begin
        w2_local_2_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        w2_local_2_0_out_ap_vld = 1'b1;
    end else begin
        w2_local_2_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        w2_local_3_0_out = w2_local_3_0_fu_272;
    end else if (((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147))) begin
        w2_local_3_0_out = w2_local_3_0_load_1_reg_2728;
    end else begin
        w2_local_3_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | ((icmp_ln73_reg_2653 == 1'd0) & (1'b1 == ap_CS_fsm_state147)))) begin
        w2_local_3_0_out_ap_vld = 1'b1;
    end else begin
        w2_local_3_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            if (((icmp_ln73_reg_2653 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state146))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln73_reg_2653 == 1'd1) & (1'b1 == ap_CS_fsm_state146))) begin
                ap_NS_fsm = ap_ST_fsm_state148;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state147;
            end
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_1_fu_1489_p5 = {{tmp_12_fu_1482_p3}, {zext_ln102_17_fu_1451_p1[51:0]}};

assign LD_2_fu_1767_p5 = {{tmp_22_fu_1760_p3}, {zext_ln102_18_fu_1729_p1[51:0]}};

assign LD_3_fu_2061_p5 = {{tmp_32_fu_2054_p3}, {zext_ln102_19_fu_2023_p1[51:0]}};

assign LD_fu_1211_p5 = {{tmp_1_fu_1204_p3}, {zext_ln102_16_fu_1173_p1[51:0]}};

assign add_ln102_10_fu_1713_p2 = (cond50_i_i315_2_fu_1704_p3 + zext_ln102_11_fu_1710_p1);

assign add_ln102_11_fu_1754_p2 = (select_ln102_5_fu_1741_p3 + sub_ln102_11_fu_1749_p2);

assign add_ln102_12_fu_1845_p2 = ($signed(sub_ln102_13_fu_1839_p2) + $signed(32'd4294967243));

assign add_ln102_13_fu_1965_p2 = ($signed(sub_ln102_13_reg_2959) + $signed(32'd4294967242));

assign add_ln102_14_fu_2007_p2 = (cond50_i_i315_3_fu_1998_p3 + zext_ln102_15_fu_2004_p1);

assign add_ln102_15_fu_2048_p2 = (select_ln102_7_fu_2035_p3 + sub_ln102_15_fu_2043_p2);

assign add_ln102_1_fu_1115_p2 = ($signed(sub_ln102_1_reg_2750) + $signed(32'd4294967242));

assign add_ln102_2_fu_1157_p2 = (cond50_i_i315_fu_1148_p3 + zext_ln102_3_fu_1154_p1);

assign add_ln102_3_fu_1198_p2 = (select_ln102_1_fu_1185_p3 + sub_ln102_3_fu_1193_p2);

assign add_ln102_4_fu_1285_p2 = ($signed(sub_ln102_5_fu_1279_p2) + $signed(32'd4294967243));

assign add_ln102_5_fu_1397_p2 = ($signed(sub_ln102_5_reg_2817) + $signed(32'd4294967242));

assign add_ln102_6_fu_1435_p2 = (cond50_i_i315_1_fu_1426_p3 + zext_ln102_7_fu_1432_p1);

assign add_ln102_7_fu_1476_p2 = (select_ln102_3_fu_1463_p3 + sub_ln102_7_fu_1471_p2);

assign add_ln102_8_fu_1563_p2 = ($signed(sub_ln102_9_fu_1557_p2) + $signed(32'd4294967243));

assign add_ln102_9_fu_1675_p2 = ($signed(sub_ln102_9_reg_2885) + $signed(32'd4294967242));

assign add_ln102_fu_995_p2 = ($signed(sub_ln102_1_fu_989_p2) + $signed(32'd4294967243));

assign and_ln102_10_fu_2303_p2 = (tmp_36_reg_3006 & or_ln102_10_reg_2995);

assign and_ln102_11_fu_2332_p2 = (xor_ln102_3_fu_2327_p2 & and_ln102_10_fu_2303_p2);

assign and_ln102_12_fu_1037_p2 = (lshr_ln102_8_fu_1031_p2 & grp_fu_650_p3);

assign and_ln102_13_fu_1327_p2 = (lshr_ln102_9_fu_1321_p2 & grp_fu_650_p3);

assign and_ln102_14_fu_1605_p2 = (lshr_ln102_10_fu_1599_p2 & grp_fu_650_p3);

assign and_ln102_15_fu_1887_p2 = (lshr_ln102_11_fu_1881_p2 & grp_fu_650_p3);

assign and_ln102_1_fu_2117_p2 = (tmp_reg_2797 & or_ln102_7_reg_2786);

assign and_ln102_2_fu_2146_p2 = (xor_ln102_fu_2141_p2 & and_ln102_1_fu_2117_p2);

assign and_ln102_3_fu_1367_p2 = (xor_ln102_5_fu_1353_p2 & tmp_23_fu_1359_p3);

assign and_ln102_4_fu_2179_p2 = (tmp_16_reg_2865 & or_ln102_8_reg_2854);

assign and_ln102_5_fu_2208_p2 = (xor_ln102_1_fu_2203_p2 & and_ln102_4_fu_2179_p2);

assign and_ln102_6_fu_1645_p2 = (xor_ln102_6_fu_1631_p2 & tmp_34_fu_1637_p3);

assign and_ln102_7_fu_2241_p2 = (tmp_26_reg_2933 & or_ln102_9_reg_2922);

assign and_ln102_8_fu_2270_p2 = (xor_ln102_2_fu_2265_p2 & and_ln102_7_fu_2241_p2);

assign and_ln102_9_fu_1927_p2 = (xor_ln102_7_fu_1913_p2 & tmp_42_fu_1919_p3);

assign and_ln102_fu_1077_p2 = (xor_ln102_4_fu_1063_p2 & tmp_9_fu_1069_p3);

assign and_ln105_1_fu_2191_p2 = (tmp_17_reg_2870 & or_ln102_8_reg_2854);

assign and_ln105_2_fu_2253_p2 = (tmp_27_reg_2938 & or_ln102_9_reg_2922);

assign and_ln105_3_fu_2315_p2 = (tmp_37_reg_3011 & or_ln102_10_reg_2995);

assign and_ln105_fu_2129_p2 = (tmp_2_reg_2802 & or_ln102_7_reg_2786);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_NS_fsm_state102 = ap_NS_fsm[32'd101];

assign ap_NS_fsm_state111 = ap_NS_fsm[32'd110];

assign ap_NS_fsm_state12 = ap_NS_fsm[32'd11];

assign ap_NS_fsm_state120 = ap_NS_fsm[32'd119];

assign ap_NS_fsm_state129 = ap_NS_fsm[32'd128];

assign ap_NS_fsm_state138 = ap_NS_fsm[32'd137];

assign ap_NS_fsm_state21 = ap_NS_fsm[32'd20];

assign ap_NS_fsm_state3 = ap_NS_fsm[32'd2];

assign ap_NS_fsm_state30 = ap_NS_fsm[32'd29];

assign ap_NS_fsm_state39 = ap_NS_fsm[32'd38];

assign ap_NS_fsm_state48 = ap_NS_fsm[32'd47];

assign ap_NS_fsm_state57 = ap_NS_fsm[32'd56];

assign ap_NS_fsm_state66 = ap_NS_fsm[32'd65];

assign ap_NS_fsm_state75 = ap_NS_fsm[32'd74];

assign ap_NS_fsm_state84 = ap_NS_fsm[32'd83];

assign ap_NS_fsm_state93 = ap_NS_fsm[32'd92];

assign array_back1_bias_change_8_out = reg_790;

assign array_back1_bias_change_9_out = reg_796;

assign array_back1_weight_changes_24_out = reg_766;

assign array_back1_weight_changes_25_out = reg_772;

assign array_back1_weight_changes_26_out = reg_778;

assign array_back1_weight_changes_27_out = reg_784;

assign array_back2_bias_change_8_out = reg_754;

assign array_back2_bias_change_9_out = reg_760;

assign array_back2_weight_changes_24_out = reg_730;

assign array_back2_weight_changes_25_out = reg_736;

assign array_back2_weight_changes_26_out = reg_742;

assign array_back2_weight_changes_27_out = reg_748;

assign bitcast_ln748_1_fu_1529_p1 = LD_1_reg_2849;

assign bitcast_ln748_2_fu_1807_p1 = LD_2_reg_2917;

assign bitcast_ln748_3_fu_2101_p1 = LD_3_reg_2990;

assign bitcast_ln748_fu_1251_p1 = LD_reg_2781;

assign cmp_i_i_read_read_fu_276_p2 = cmp_i_i;

assign cond50_i_i315_1_fu_1426_p3 = ((icmp_ln102_9_reg_2828[0:0] == 1'b1) ? lshr_ln102_2_reg_2844 : shl_ln102_1_fu_1421_p2);

assign cond50_i_i315_2_fu_1704_p3 = ((icmp_ln102_14_reg_2896[0:0] == 1'b1) ? lshr_ln102_4_reg_2912 : shl_ln102_2_fu_1699_p2);

assign cond50_i_i315_3_fu_1998_p3 = ((icmp_ln102_19_reg_2970[0:0] == 1'b1) ? lshr_ln102_6_reg_2985 : shl_ln102_3_fu_1993_p2);

assign cond50_i_i315_fu_1148_p3 = ((icmp_ln102_3_reg_2761[0:0] == 1'b1) ? lshr_ln102_reg_2776 : shl_ln102_fu_1143_p2);

assign grp_fu_630_p2 = ((grp_model_array_fu_596_ap_return_0 == 16'd0) ? 1'b1 : 1'b0);

assign grp_fu_636_p3 = grp_model_array_fu_596_ap_return_0[32'd15];

assign grp_fu_644_p2 = (16'd0 - grp_model_array_fu_596_ap_return_0);

assign grp_fu_650_p3 = ((grp_fu_636_p3[0:0] == 1'b1) ? grp_fu_644_p2 : grp_model_array_fu_596_ap_return_0);

integer ap_tvar_int_0;

always @ (grp_fu_650_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            grp_fu_658_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            grp_fu_658_p4[ap_tvar_int_0] = grp_fu_650_p3[15 - ap_tvar_int_0];
        end
    end
end

assign grp_fu_668_p2 = (($signed(grp_model_array_fu_596_ap_return_0) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign grp_fu_806_p2 = ((reg_802 == 16'd0) ? 1'b1 : 1'b0);

assign grp_fu_812_p2 = (($signed(reg_802) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign grp_fu_818_p2 = ($signed(reg_802) + $signed(16'd65024));

assign grp_fu_824_p3 = ((grp_fu_812_p2[0:0] == 1'b1) ? grp_fu_818_p2 : 16'd0);

assign grp_model_array_fu_596_ap_start = grp_model_array_fu_596_ap_start_reg;

assign i_2_fu_907_p2 = (i_fu_208 + 9'd1);

assign icmp_ln102_11_fu_1511_p2 = ((add_ln102_7_fu_1476_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln102_12_fu_1611_p2 = ((and_ln102_14_fu_1605_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln102_13_fu_1517_p2 = ((trunc_ln102_3_fu_1501_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln102_14_fu_1665_p2 = (($signed(add_ln102_8_fu_1563_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln102_16_fu_1579_p2 = (($signed(tmp_29_fu_1569_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln102_17_fu_1893_p2 = ((and_ln102_15_fu_1887_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln102_18_fu_1789_p2 = ((add_ln102_11_fu_1754_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln102_19_fu_1947_p2 = (($signed(add_ln102_12_fu_1845_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln102_1_fu_1011_p2 = (($signed(tmp_4_fu_1001_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln102_20_fu_1795_p2 = ((trunc_ln102_5_fu_1779_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln102_21_fu_1861_p2 = (($signed(tmp_40_fu_1851_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln102_22_fu_2083_p2 = ((add_ln102_15_fu_2048_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln102_23_fu_2089_p2 = ((trunc_ln102_7_fu_2073_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln102_2_fu_1043_p2 = ((and_ln102_12_fu_1037_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln102_3_fu_1097_p2 = (($signed(add_ln102_fu_995_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln102_4_fu_1233_p2 = ((add_ln102_3_fu_1198_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln102_6_fu_1239_p2 = ((trunc_ln102_2_fu_1223_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln102_7_fu_1333_p2 = ((and_ln102_13_fu_1327_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln102_8_fu_1301_p2 = (($signed(tmp_15_fu_1291_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln102_9_fu_1387_p2 = (($signed(add_ln102_4_fu_1285_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_901_p2 = ((i_fu_208 == 9'd500) ? 1'b1 : 1'b0);

assign lshr_ln102_10_fu_1599_p2 = 16'd65535 >> zext_ln102_22_fu_1595_p1;

assign lshr_ln102_11_fu_1881_p2 = 16'd65535 >> zext_ln102_23_fu_1877_p1;

assign lshr_ln102_1_fu_1163_p4 = {{add_ln102_2_fu_1157_p2[63:1]}};

assign lshr_ln102_2_fu_1406_p2 = zext_ln102_4_fu_1393_p1 >> zext_ln102_5_fu_1402_p1;

assign lshr_ln102_3_fu_1441_p4 = {{add_ln102_6_fu_1435_p2[63:1]}};

assign lshr_ln102_4_fu_1684_p2 = zext_ln102_8_fu_1671_p1 >> zext_ln102_9_fu_1680_p1;

assign lshr_ln102_5_fu_1719_p4 = {{add_ln102_10_fu_1713_p2[63:1]}};

assign lshr_ln102_6_fu_1974_p2 = zext_ln102_12_fu_1961_p1 >> zext_ln102_13_fu_1970_p1;

assign lshr_ln102_7_fu_2013_p4 = {{add_ln102_14_fu_2007_p2[63:1]}};

assign lshr_ln102_8_fu_1031_p2 = 16'd65535 >> zext_ln102_20_fu_1027_p1;

assign lshr_ln102_9_fu_1321_p2 = 16'd65535 >> zext_ln102_21_fu_1317_p1;

assign lshr_ln102_fu_1124_p2 = zext_ln102_fu_1111_p1 >> zext_ln102_1_fu_1120_p1;

assign or_ln102_10_fu_2095_p2 = (icmp_ln102_23_fu_2089_p2 | icmp_ln102_22_fu_2083_p2);

assign or_ln102_1_fu_1379_p3 = {{1'd0}, {or_ln102_fu_1373_p2}};

assign or_ln102_2_fu_1657_p3 = {{1'd0}, {or_ln102_5_fu_1651_p2}};

assign or_ln102_3_fu_1939_p3 = {{1'd0}, {or_ln102_6_fu_1933_p2}};

assign or_ln102_4_fu_1083_p2 = (phi_ln102_fu_1049_p2 | and_ln102_fu_1077_p2);

assign or_ln102_5_fu_1651_p2 = (phi_ln102_2_fu_1617_p2 | and_ln102_6_fu_1645_p2);

assign or_ln102_6_fu_1933_p2 = (phi_ln102_3_fu_1899_p2 | and_ln102_9_fu_1927_p2);

assign or_ln102_7_fu_1245_p2 = (icmp_ln102_6_fu_1239_p2 | icmp_ln102_4_fu_1233_p2);

assign or_ln102_8_fu_1523_p2 = (icmp_ln102_13_fu_1517_p2 | icmp_ln102_11_fu_1511_p2);

assign or_ln102_9_fu_1801_p2 = (icmp_ln102_20_fu_1795_p2 | icmp_ln102_18_fu_1789_p2);

assign or_ln102_fu_1373_p2 = (phi_ln102_1_fu_1339_p2 | and_ln102_3_fu_1367_p2);

assign or_ln_fu_1089_p3 = {{1'd0}, {or_ln102_4_fu_1083_p2}};

assign output_array_inference_4_fu_2159_p4 = ((and_ln102_1_fu_2117_p2[0:0] == 1'b1) ? 16'd512 : 16'd0);

assign output_array_inference_4_fu_2159_p6 = ((and_ln105_fu_2129_p2[0:0] == 1'b1) ? 16'd0 : output_array_inference_3_fu_224);

assign output_array_inference_4_fu_2159_p7 = 'bx;

assign output_array_inference_4_fu_2159_p8 = {{icmp_ln102_reg_2734}, {and_ln102_2_fu_2146_p2}};

assign output_array_inference_4_out = output_array_inference_4_reg_3036;

assign output_array_inference_5_fu_2221_p4 = ((and_ln102_4_fu_2179_p2[0:0] == 1'b1) ? 16'd512 : 16'd0);

assign output_array_inference_5_fu_2221_p6 = ((and_ln105_1_fu_2191_p2[0:0] == 1'b1) ? 16'd0 : output_array_inference_2_fu_220);

assign output_array_inference_5_fu_2221_p7 = 'bx;

assign output_array_inference_5_fu_2221_p8 = {{icmp_ln102_5_reg_2833}, {and_ln102_5_fu_2208_p2}};

assign output_array_inference_5_out = output_array_inference_5_reg_3041;

assign output_array_inference_6_fu_2283_p4 = ((and_ln102_7_fu_2241_p2[0:0] == 1'b1) ? 16'd512 : 16'd0);

assign output_array_inference_6_fu_2283_p6 = ((and_ln105_2_fu_2253_p2[0:0] == 1'b1) ? 16'd0 : output_array_inference_1_fu_216);

assign output_array_inference_6_fu_2283_p7 = 'bx;

assign output_array_inference_6_fu_2283_p8 = {{icmp_ln102_10_reg_2901}, {and_ln102_8_fu_2270_p2}};

assign output_array_inference_6_out = output_array_inference_6_reg_3046;

assign output_array_inference_7_fu_2345_p4 = ((and_ln102_10_fu_2303_p2[0:0] == 1'b1) ? 16'd512 : 16'd0);

assign output_array_inference_7_fu_2345_p6 = ((and_ln105_3_fu_2315_p2[0:0] == 1'b1) ? 16'd0 : output_array_inference_fu_212);

assign output_array_inference_7_fu_2345_p7 = 'bx;

assign output_array_inference_7_fu_2345_p8 = {{icmp_ln102_15_reg_2943}, {and_ln102_11_fu_2332_p2}};

assign output_array_inference_7_out = output_array_inference_7_reg_3051;

assign phi_ln102_1_fu_1339_p2 = (icmp_ln102_8_fu_1301_p2 & icmp_ln102_7_fu_1333_p2);

assign phi_ln102_2_fu_1617_p2 = (icmp_ln102_16_fu_1579_p2 & icmp_ln102_12_fu_1611_p2);

assign phi_ln102_3_fu_1899_p2 = (icmp_ln102_21_fu_1861_p2 & icmp_ln102_17_fu_1893_p2);

assign phi_ln102_fu_1049_p2 = (icmp_ln102_2_fu_1043_p2 & icmp_ln102_1_fu_1011_p2);

assign select_ln102_1_fu_1185_p3 = ((tmp_13_fu_1177_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln102_3_fu_1463_p3 = ((tmp_24_fu_1455_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln102_5_fu_1741_p3 = ((tmp_35_fu_1733_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln102_7_fu_2035_p3 = ((tmp_43_fu_2027_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln114_3_fu_1953_p3 = ((grp_fu_668_p2[0:0] == 1'b1) ? trunc_ln97_1_fu_1811_p1 : 15'd0);

assign select_ln114_fu_1103_p3 = ((grp_fu_668_p2[0:0] == 1'b1) ? trunc_ln97_fu_961_p1 : 15'd0);

assign sext_ln102_1_fu_1263_p1 = $signed(tmp_10_fu_1255_p3);

assign sext_ln102_2_fu_1541_p1 = $signed(tmp_20_fu_1533_p3);

assign sext_ln102_3_fu_1823_p1 = $signed(tmp_30_fu_1815_p3);

assign sext_ln102_fu_973_p1 = $signed(tmp_6_fu_965_p3);

assign shl_ln102_1_fu_1421_p2 = zext_ln102_4_reg_2839 << zext_ln102_6_fu_1417_p1;

assign shl_ln102_2_fu_1699_p2 = zext_ln102_8_reg_2907 << zext_ln102_10_fu_1695_p1;

assign shl_ln102_3_fu_1993_p2 = zext_ln102_12_reg_2980 << zext_ln102_14_fu_1989_p1;

assign shl_ln102_fu_1143_p2 = zext_ln102_reg_2771 << zext_ln102_2_fu_1139_p1;

assign sub_ln102_10_fu_1690_p2 = (32'd54 - sub_ln102_9_reg_2885);

assign sub_ln102_11_fu_1749_p2 = (11'd7 - trunc_ln102_8_reg_2880);

assign sub_ln102_13_fu_1839_p2 = (32'd16 - tmp_31_fu_1827_p3);

assign sub_ln102_14_fu_1984_p2 = (32'd54 - sub_ln102_13_reg_2959);

assign sub_ln102_15_fu_2043_p2 = (11'd7 - trunc_ln102_10_reg_2954);

assign sub_ln102_16_fu_1021_p2 = (4'd6 - trunc_ln102_1_fu_1017_p1);

assign sub_ln102_17_fu_1311_p2 = (4'd6 - trunc_ln102_6_fu_1307_p1);

assign sub_ln102_18_fu_1589_p2 = (4'd6 - trunc_ln102_9_fu_1585_p1);

assign sub_ln102_19_fu_1871_p2 = (4'd6 - trunc_ln102_11_fu_1867_p1);

assign sub_ln102_1_fu_989_p2 = (32'd16 - tmp_7_fu_977_p3);

assign sub_ln102_2_fu_1134_p2 = (32'd54 - sub_ln102_1_reg_2750);

assign sub_ln102_3_fu_1193_p2 = (11'd7 - trunc_ln102_reg_2745);

assign sub_ln102_5_fu_1279_p2 = (32'd16 - tmp_11_fu_1267_p3);

assign sub_ln102_6_fu_1412_p2 = (32'd54 - sub_ln102_5_reg_2817);

assign sub_ln102_7_fu_1471_p2 = (11'd7 - trunc_ln102_4_reg_2812);

assign sub_ln102_9_fu_1557_p2 = (32'd16 - tmp_21_fu_1545_p3);

assign tmp_10_fu_1255_p3 = {{1'd1}, {grp_fu_658_p4}};


always @ (sext_ln102_1_fu_1263_p1) begin
    if (sext_ln102_1_fu_1263_p1[0] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd0;
    end else if (sext_ln102_1_fu_1263_p1[1] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd1;
    end else if (sext_ln102_1_fu_1263_p1[2] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd2;
    end else if (sext_ln102_1_fu_1263_p1[3] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd3;
    end else if (sext_ln102_1_fu_1263_p1[4] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd4;
    end else if (sext_ln102_1_fu_1263_p1[5] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd5;
    end else if (sext_ln102_1_fu_1263_p1[6] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd6;
    end else if (sext_ln102_1_fu_1263_p1[7] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd7;
    end else if (sext_ln102_1_fu_1263_p1[8] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd8;
    end else if (sext_ln102_1_fu_1263_p1[9] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd9;
    end else if (sext_ln102_1_fu_1263_p1[10] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd10;
    end else if (sext_ln102_1_fu_1263_p1[11] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd11;
    end else if (sext_ln102_1_fu_1263_p1[12] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd12;
    end else if (sext_ln102_1_fu_1263_p1[13] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd13;
    end else if (sext_ln102_1_fu_1263_p1[14] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd14;
    end else if (sext_ln102_1_fu_1263_p1[15] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd15;
    end else if (sext_ln102_1_fu_1263_p1[16] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd16;
    end else if (sext_ln102_1_fu_1263_p1[17] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd17;
    end else if (sext_ln102_1_fu_1263_p1[18] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd18;
    end else if (sext_ln102_1_fu_1263_p1[19] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd19;
    end else if (sext_ln102_1_fu_1263_p1[20] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd20;
    end else if (sext_ln102_1_fu_1263_p1[21] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd21;
    end else if (sext_ln102_1_fu_1263_p1[22] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd22;
    end else if (sext_ln102_1_fu_1263_p1[23] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd23;
    end else if (sext_ln102_1_fu_1263_p1[24] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd24;
    end else if (sext_ln102_1_fu_1263_p1[25] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd25;
    end else if (sext_ln102_1_fu_1263_p1[26] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd26;
    end else if (sext_ln102_1_fu_1263_p1[27] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd27;
    end else if (sext_ln102_1_fu_1263_p1[28] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd28;
    end else if (sext_ln102_1_fu_1263_p1[29] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd29;
    end else if (sext_ln102_1_fu_1263_p1[30] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd30;
    end else if (sext_ln102_1_fu_1263_p1[31] == 1'b1) begin
        tmp_11_fu_1267_p3 = 32'd31;
    end else begin
        tmp_11_fu_1267_p3 = 32'd32;
    end
end

assign tmp_12_fu_1482_p3 = {{tmp_14_reg_2807}, {add_ln102_7_fu_1476_p2}};

assign tmp_13_fu_1177_p3 = add_ln102_2_fu_1157_p2[32'd54];

assign tmp_15_fu_1291_p4 = {{add_ln102_4_fu_1285_p2[31:1]}};

assign tmp_19_fu_1345_p3 = add_ln102_4_fu_1285_p2[32'd31];

assign tmp_1_fu_1204_p3 = {{tmp_3_reg_2740}, {add_ln102_3_fu_1198_p2}};

assign tmp_20_fu_1533_p3 = {{1'd1}, {grp_fu_658_p4}};


always @ (sext_ln102_2_fu_1541_p1) begin
    if (sext_ln102_2_fu_1541_p1[0] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd0;
    end else if (sext_ln102_2_fu_1541_p1[1] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd1;
    end else if (sext_ln102_2_fu_1541_p1[2] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd2;
    end else if (sext_ln102_2_fu_1541_p1[3] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd3;
    end else if (sext_ln102_2_fu_1541_p1[4] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd4;
    end else if (sext_ln102_2_fu_1541_p1[5] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd5;
    end else if (sext_ln102_2_fu_1541_p1[6] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd6;
    end else if (sext_ln102_2_fu_1541_p1[7] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd7;
    end else if (sext_ln102_2_fu_1541_p1[8] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd8;
    end else if (sext_ln102_2_fu_1541_p1[9] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd9;
    end else if (sext_ln102_2_fu_1541_p1[10] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd10;
    end else if (sext_ln102_2_fu_1541_p1[11] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd11;
    end else if (sext_ln102_2_fu_1541_p1[12] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd12;
    end else if (sext_ln102_2_fu_1541_p1[13] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd13;
    end else if (sext_ln102_2_fu_1541_p1[14] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd14;
    end else if (sext_ln102_2_fu_1541_p1[15] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd15;
    end else if (sext_ln102_2_fu_1541_p1[16] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd16;
    end else if (sext_ln102_2_fu_1541_p1[17] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd17;
    end else if (sext_ln102_2_fu_1541_p1[18] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd18;
    end else if (sext_ln102_2_fu_1541_p1[19] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd19;
    end else if (sext_ln102_2_fu_1541_p1[20] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd20;
    end else if (sext_ln102_2_fu_1541_p1[21] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd21;
    end else if (sext_ln102_2_fu_1541_p1[22] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd22;
    end else if (sext_ln102_2_fu_1541_p1[23] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd23;
    end else if (sext_ln102_2_fu_1541_p1[24] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd24;
    end else if (sext_ln102_2_fu_1541_p1[25] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd25;
    end else if (sext_ln102_2_fu_1541_p1[26] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd26;
    end else if (sext_ln102_2_fu_1541_p1[27] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd27;
    end else if (sext_ln102_2_fu_1541_p1[28] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd28;
    end else if (sext_ln102_2_fu_1541_p1[29] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd29;
    end else if (sext_ln102_2_fu_1541_p1[30] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd30;
    end else if (sext_ln102_2_fu_1541_p1[31] == 1'b1) begin
        tmp_21_fu_1545_p3 = 32'd31;
    end else begin
        tmp_21_fu_1545_p3 = 32'd32;
    end
end

assign tmp_22_fu_1760_p3 = {{tmp_25_reg_2875}, {add_ln102_11_fu_1754_p2}};

assign tmp_23_fu_1359_p3 = grp_fu_650_p3[add_ln102_4_fu_1285_p2];

assign tmp_24_fu_1455_p3 = add_ln102_6_fu_1435_p2[32'd54];

assign tmp_29_fu_1569_p4 = {{add_ln102_8_fu_1563_p2[31:1]}};

assign tmp_30_fu_1815_p3 = {{1'd1}, {grp_fu_658_p4}};


always @ (sext_ln102_3_fu_1823_p1) begin
    if (sext_ln102_3_fu_1823_p1[0] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd0;
    end else if (sext_ln102_3_fu_1823_p1[1] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd1;
    end else if (sext_ln102_3_fu_1823_p1[2] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd2;
    end else if (sext_ln102_3_fu_1823_p1[3] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd3;
    end else if (sext_ln102_3_fu_1823_p1[4] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd4;
    end else if (sext_ln102_3_fu_1823_p1[5] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd5;
    end else if (sext_ln102_3_fu_1823_p1[6] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd6;
    end else if (sext_ln102_3_fu_1823_p1[7] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd7;
    end else if (sext_ln102_3_fu_1823_p1[8] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd8;
    end else if (sext_ln102_3_fu_1823_p1[9] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd9;
    end else if (sext_ln102_3_fu_1823_p1[10] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd10;
    end else if (sext_ln102_3_fu_1823_p1[11] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd11;
    end else if (sext_ln102_3_fu_1823_p1[12] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd12;
    end else if (sext_ln102_3_fu_1823_p1[13] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd13;
    end else if (sext_ln102_3_fu_1823_p1[14] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd14;
    end else if (sext_ln102_3_fu_1823_p1[15] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd15;
    end else if (sext_ln102_3_fu_1823_p1[16] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd16;
    end else if (sext_ln102_3_fu_1823_p1[17] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd17;
    end else if (sext_ln102_3_fu_1823_p1[18] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd18;
    end else if (sext_ln102_3_fu_1823_p1[19] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd19;
    end else if (sext_ln102_3_fu_1823_p1[20] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd20;
    end else if (sext_ln102_3_fu_1823_p1[21] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd21;
    end else if (sext_ln102_3_fu_1823_p1[22] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd22;
    end else if (sext_ln102_3_fu_1823_p1[23] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd23;
    end else if (sext_ln102_3_fu_1823_p1[24] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd24;
    end else if (sext_ln102_3_fu_1823_p1[25] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd25;
    end else if (sext_ln102_3_fu_1823_p1[26] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd26;
    end else if (sext_ln102_3_fu_1823_p1[27] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd27;
    end else if (sext_ln102_3_fu_1823_p1[28] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd28;
    end else if (sext_ln102_3_fu_1823_p1[29] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd29;
    end else if (sext_ln102_3_fu_1823_p1[30] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd30;
    end else if (sext_ln102_3_fu_1823_p1[31] == 1'b1) begin
        tmp_31_fu_1827_p3 = 32'd31;
    end else begin
        tmp_31_fu_1827_p3 = 32'd32;
    end
end

assign tmp_32_fu_2054_p3 = {{tmp_39_reg_2949}, {add_ln102_15_fu_2048_p2}};

assign tmp_33_fu_1623_p3 = add_ln102_8_fu_1563_p2[32'd31];

assign tmp_34_fu_1637_p3 = grp_fu_650_p3[add_ln102_8_fu_1563_p2];

assign tmp_35_fu_1733_p3 = add_ln102_10_fu_1713_p2[32'd54];

assign tmp_40_fu_1851_p4 = {{add_ln102_12_fu_1845_p2[31:1]}};

assign tmp_41_fu_1905_p3 = add_ln102_12_fu_1845_p2[32'd31];

assign tmp_42_fu_1919_p3 = grp_fu_650_p3[add_ln102_12_fu_1845_p2];

assign tmp_43_fu_2027_p3 = add_ln102_14_fu_2007_p2[32'd54];

assign tmp_4_fu_1001_p4 = {{add_ln102_fu_995_p2[31:1]}};

assign tmp_6_fu_965_p3 = {{1'd1}, {grp_fu_658_p4}};


always @ (sext_ln102_fu_973_p1) begin
    if (sext_ln102_fu_973_p1[0] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd0;
    end else if (sext_ln102_fu_973_p1[1] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd1;
    end else if (sext_ln102_fu_973_p1[2] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd2;
    end else if (sext_ln102_fu_973_p1[3] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd3;
    end else if (sext_ln102_fu_973_p1[4] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd4;
    end else if (sext_ln102_fu_973_p1[5] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd5;
    end else if (sext_ln102_fu_973_p1[6] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd6;
    end else if (sext_ln102_fu_973_p1[7] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd7;
    end else if (sext_ln102_fu_973_p1[8] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd8;
    end else if (sext_ln102_fu_973_p1[9] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd9;
    end else if (sext_ln102_fu_973_p1[10] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd10;
    end else if (sext_ln102_fu_973_p1[11] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd11;
    end else if (sext_ln102_fu_973_p1[12] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd12;
    end else if (sext_ln102_fu_973_p1[13] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd13;
    end else if (sext_ln102_fu_973_p1[14] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd14;
    end else if (sext_ln102_fu_973_p1[15] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd15;
    end else if (sext_ln102_fu_973_p1[16] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd16;
    end else if (sext_ln102_fu_973_p1[17] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd17;
    end else if (sext_ln102_fu_973_p1[18] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd18;
    end else if (sext_ln102_fu_973_p1[19] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd19;
    end else if (sext_ln102_fu_973_p1[20] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd20;
    end else if (sext_ln102_fu_973_p1[21] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd21;
    end else if (sext_ln102_fu_973_p1[22] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd22;
    end else if (sext_ln102_fu_973_p1[23] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd23;
    end else if (sext_ln102_fu_973_p1[24] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd24;
    end else if (sext_ln102_fu_973_p1[25] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd25;
    end else if (sext_ln102_fu_973_p1[26] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd26;
    end else if (sext_ln102_fu_973_p1[27] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd27;
    end else if (sext_ln102_fu_973_p1[28] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd28;
    end else if (sext_ln102_fu_973_p1[29] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd29;
    end else if (sext_ln102_fu_973_p1[30] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd30;
    end else if (sext_ln102_fu_973_p1[31] == 1'b1) begin
        tmp_7_fu_977_p3 = 32'd31;
    end else begin
        tmp_7_fu_977_p3 = 32'd32;
    end
end

assign tmp_8_fu_1055_p3 = add_ln102_fu_995_p2[32'd31];

assign tmp_9_fu_1069_p3 = grp_fu_650_p3[add_ln102_fu_995_p2];

assign trunc_ln102_10_fu_1835_p1 = tmp_31_fu_1827_p3[10:0];

assign trunc_ln102_11_fu_1867_p1 = sub_ln102_13_fu_1839_p2[3:0];

assign trunc_ln102_1_fu_1017_p1 = sub_ln102_1_fu_989_p2[3:0];

assign trunc_ln102_2_fu_1223_p4 = {{add_ln102_2_fu_1157_p2[52:1]}};

assign trunc_ln102_3_fu_1501_p4 = {{add_ln102_6_fu_1435_p2[52:1]}};

assign trunc_ln102_4_fu_1275_p1 = tmp_11_fu_1267_p3[10:0];

assign trunc_ln102_5_fu_1779_p4 = {{add_ln102_10_fu_1713_p2[52:1]}};

assign trunc_ln102_6_fu_1307_p1 = sub_ln102_5_fu_1279_p2[3:0];

assign trunc_ln102_7_fu_2073_p4 = {{add_ln102_14_fu_2007_p2[52:1]}};

assign trunc_ln102_8_fu_1553_p1 = tmp_21_fu_1545_p3[10:0];

assign trunc_ln102_9_fu_1585_p1 = sub_ln102_9_fu_1557_p2[3:0];

assign trunc_ln102_fu_985_p1 = tmp_7_fu_977_p3[10:0];

assign trunc_ln97_1_fu_1811_p1 = grp_model_array_fu_596_ap_return_0[14:0];

assign trunc_ln97_fu_961_p1 = grp_model_array_fu_596_ap_return_0[14:0];

assign xor_ln102_1_fu_2203_p2 = (icmp_ln102_5_reg_2833 ^ 1'd1);

assign xor_ln102_2_fu_2265_p2 = (icmp_ln102_10_reg_2901 ^ 1'd1);

assign xor_ln102_3_fu_2327_p2 = (icmp_ln102_15_reg_2943 ^ 1'd1);

assign xor_ln102_4_fu_1063_p2 = (tmp_8_fu_1055_p3 ^ 1'd1);

assign xor_ln102_5_fu_1353_p2 = (tmp_19_fu_1345_p3 ^ 1'd1);

assign xor_ln102_6_fu_1631_p2 = (tmp_33_fu_1623_p3 ^ 1'd1);

assign xor_ln102_7_fu_1913_p2 = (tmp_41_fu_1905_p3 ^ 1'd1);

assign xor_ln102_fu_2141_p2 = (icmp_ln102_reg_2734 ^ 1'd1);

assign zext_ln102_10_fu_1695_p1 = sub_ln102_10_fu_1690_p2;

assign zext_ln102_11_fu_1710_p1 = or_ln102_2_reg_2891;

assign zext_ln102_12_fu_1961_p1 = reg_716;

assign zext_ln102_13_fu_1970_p1 = add_ln102_13_fu_1965_p2;

assign zext_ln102_14_fu_1989_p1 = sub_ln102_14_fu_1984_p2;

assign zext_ln102_15_fu_2004_p1 = or_ln102_3_reg_2965;

assign zext_ln102_16_fu_1173_p1 = lshr_ln102_1_fu_1163_p4;

assign zext_ln102_17_fu_1451_p1 = lshr_ln102_3_fu_1441_p4;

assign zext_ln102_18_fu_1729_p1 = lshr_ln102_5_fu_1719_p4;

assign zext_ln102_19_fu_2023_p1 = lshr_ln102_7_fu_2013_p4;

assign zext_ln102_1_fu_1120_p1 = add_ln102_1_fu_1115_p2;

assign zext_ln102_20_fu_1027_p1 = sub_ln102_16_fu_1021_p2;

assign zext_ln102_21_fu_1317_p1 = sub_ln102_17_fu_1311_p2;

assign zext_ln102_22_fu_1595_p1 = sub_ln102_18_fu_1589_p2;

assign zext_ln102_23_fu_1877_p1 = sub_ln102_19_fu_1871_p2;

assign zext_ln102_2_fu_1139_p1 = sub_ln102_2_fu_1134_p2;

assign zext_ln102_3_fu_1154_p1 = or_ln_reg_2756;

assign zext_ln102_4_fu_1393_p1 = reg_716;

assign zext_ln102_5_fu_1402_p1 = add_ln102_5_fu_1397_p2;

assign zext_ln102_6_fu_1417_p1 = sub_ln102_6_fu_1412_p2;

assign zext_ln102_7_fu_1432_p1 = or_ln102_1_reg_2823;

assign zext_ln102_8_fu_1671_p1 = reg_716;

assign zext_ln102_9_fu_1680_p1 = add_ln102_9_fu_1675_p2;

assign zext_ln102_fu_1111_p1 = reg_716;

assign zext_ln132_1_fu_1980_p1 = select_ln114_3_reg_2975;

assign zext_ln132_fu_1130_p1 = select_ln114_reg_2766;

always @ (posedge ap_clk) begin
    or_ln_reg_2756[1] <= 1'b0;
    zext_ln102_reg_2771[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    or_ln102_1_reg_2823[1] <= 1'b0;
    zext_ln102_4_reg_2839[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    or_ln102_2_reg_2891[1] <= 1'b0;
    zext_ln102_8_reg_2907[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    or_ln102_3_reg_2965[1] <= 1'b0;
    zext_ln102_12_reg_2980[63:16] <= 48'b000000000000000000000000000000000000000000000000;
end

endmodule //accelerator_accelerator_Pipeline_VITIS_LOOP_73_3
