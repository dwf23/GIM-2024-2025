

================================================================
== Vitis HLS Report for 'accelerator_Pipeline_VITIS_LOOP_69_4'
================================================================
* Date:           Wed Feb 28 12:04:56 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        XOR
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: kintex7
* Target device:  xc7k70t-fbv676-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.817 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       26|      127|  0.260 us|  1.270 us|   26|  127|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- VITIS_LOOP_69_4  |       24|      124|        26|         25|          1|  0 ~ 4|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 25, depth = 26


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 29
* Pipeline : 1
  Pipeline-0 : II = 25, D = 26, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 28 29 27 
27 --> 2 
28 --> 
29 --> 28 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.02>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 30 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%output_array_inference_0_1 = alloca i32 1"   --->   Operation 31 'alloca' 'output_array_inference_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%output_array_inference_1_1 = alloca i32 1"   --->   Operation 32 'alloca' 'output_array_inference_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%output_array_inference_2_1 = alloca i32 1"   --->   Operation 33 'alloca' 'output_array_inference_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%output_array_inference_3_1 = alloca i32 1"   --->   Operation 34 'alloca' 'output_array_inference_3_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%w1_local_0_0 = alloca i32 1"   --->   Operation 35 'alloca' 'w1_local_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%w1_local_0_1 = alloca i32 1"   --->   Operation 36 'alloca' 'w1_local_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%w1_local_1_0 = alloca i32 1"   --->   Operation 37 'alloca' 'w1_local_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%w1_local_1_1 = alloca i32 1"   --->   Operation 38 'alloca' 'w1_local_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%w2_local_0_0 = alloca i32 1"   --->   Operation 39 'alloca' 'w2_local_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%w2_local_0_1 = alloca i32 1"   --->   Operation 40 'alloca' 'w2_local_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%w2_local_1_0 = alloca i32 1"   --->   Operation 41 'alloca' 'w2_local_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%w2_local_1_1 = alloca i32 1"   --->   Operation 42 'alloca' 'w2_local_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%bias_1_local_0 = alloca i32 1"   --->   Operation 43 'alloca' 'bias_1_local_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%bias_1_local_1 = alloca i32 1"   --->   Operation 44 'alloca' 'bias_1_local_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%bias_2_local_0 = alloca i32 1"   --->   Operation 45 'alloca' 'bias_2_local_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%bias_2_local_1 = alloca i32 1"   --->   Operation 46 'alloca' 'bias_2_local_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%cmp_i_i116_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %cmp_i_i116"   --->   Operation 47 'read' 'cmp_i_i116_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%training_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %training"   --->   Operation 48 'read' 'training_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%output_array_inference_0_0_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %output_array_inference_0_0"   --->   Operation 49 'read' 'output_array_inference_0_0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%output_array_inference_1_0_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %output_array_inference_1_0"   --->   Operation 50 'read' 'output_array_inference_1_0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%output_array_inference_2_0_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %output_array_inference_2_0"   --->   Operation 51 'read' 'output_array_inference_2_0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%output_array_inference_3_0_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %output_array_inference_3_0"   --->   Operation 52 'read' 'output_array_inference_3_0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%w1_local_0_0_2_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %w1_local_0_0_2"   --->   Operation 53 'read' 'w1_local_0_0_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%w1_local_0_1_2_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %w1_local_0_1_2"   --->   Operation 54 'read' 'w1_local_0_1_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%w1_local_1_0_2_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %w1_local_1_0_2"   --->   Operation 55 'read' 'w1_local_1_0_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%w1_local_1_1_2_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %w1_local_1_1_2"   --->   Operation 56 'read' 'w1_local_1_1_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%w2_local_0_0_2_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %w2_local_0_0_2"   --->   Operation 57 'read' 'w2_local_0_0_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%w2_local_0_1_2_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %w2_local_0_1_2"   --->   Operation 58 'read' 'w2_local_0_1_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%w2_local_1_0_2_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %w2_local_1_0_2"   --->   Operation 59 'read' 'w2_local_1_0_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%w2_local_1_1_2_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %w2_local_1_1_2"   --->   Operation 60 'read' 'w2_local_1_1_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%bias_1_local_0_2_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %bias_1_local_0_2"   --->   Operation 61 'read' 'bias_1_local_0_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%bias_1_local_1_2_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %bias_1_local_1_2"   --->   Operation 62 'read' 'bias_1_local_1_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%bias_2_local_0_2_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %bias_2_local_0_2"   --->   Operation 63 'read' 'bias_2_local_0_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%bias_2_local_1_2_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %bias_2_local_1_2"   --->   Operation 64 'read' 'bias_2_local_1_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %bias_2_local_1_2_read, i16 %bias_2_local_1"   --->   Operation 65 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 66 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %bias_2_local_0_2_read, i16 %bias_2_local_0"   --->   Operation 66 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 67 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %bias_1_local_1_2_read, i16 %bias_1_local_1"   --->   Operation 67 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 68 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %bias_1_local_0_2_read, i16 %bias_1_local_0"   --->   Operation 68 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 69 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %w2_local_1_1_2_read, i16 %w2_local_1_1"   --->   Operation 69 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 70 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %w2_local_1_0_2_read, i16 %w2_local_1_0"   --->   Operation 70 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 71 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %w2_local_0_1_2_read, i16 %w2_local_0_1"   --->   Operation 71 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 72 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %w2_local_0_0_2_read, i16 %w2_local_0_0"   --->   Operation 72 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 73 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %w1_local_1_1_2_read, i16 %w1_local_1_1"   --->   Operation 73 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 74 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %w1_local_1_0_2_read, i16 %w1_local_1_0"   --->   Operation 74 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 75 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %w1_local_0_1_2_read, i16 %w1_local_0_1"   --->   Operation 75 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 76 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %w1_local_0_0_2_read, i16 %w1_local_0_0"   --->   Operation 76 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 77 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %output_array_inference_3_0_read, i16 %output_array_inference_3_1"   --->   Operation 77 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 78 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %output_array_inference_2_0_read, i16 %output_array_inference_2_1"   --->   Operation 78 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 79 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %output_array_inference_1_0_read, i16 %output_array_inference_1_1"   --->   Operation 79 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 80 [1/1] (1.02ns)   --->   "%store_ln0 = store i16 %output_array_inference_0_0_read, i16 %output_array_inference_0_1"   --->   Operation 80 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 81 [1/1] (1.02ns)   --->   "%store_ln0 = store i3 0, i3 %j"   --->   Operation 81 'store' 'store_ln0' <Predicate = true> <Delay = 1.02>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body118"   --->   Operation 82 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.61>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%j_1 = load i3 %j" [accelerator.cpp:72]   --->   Operation 83 'load' 'j_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (1.16ns)   --->   "%icmp_ln69 = icmp_eq  i3 %j_1, i3 4" [accelerator.cpp:69]   --->   Operation 84 'icmp' 'icmp_ln69' <Predicate = true> <Delay = 1.16> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (1.16ns)   --->   "%add_ln69 = add i3 %j_1, i3 1" [accelerator.cpp:69]   --->   Operation 85 'add' 'add_ln69' <Predicate = true> <Delay = 1.16> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%br_ln69 = br i1 %icmp_ln69, void %for.body118.split_ifconv, void %for.body118.for.end312_crit_edge.exitStub" [accelerator.cpp:69]   --->   Operation 86 'br' 'br_ln69' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%w1_local_0_0_load_1 = load i16 %w1_local_0_0" [accelerator.cpp:134]   --->   Operation 87 'load' 'w1_local_0_0_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%w1_local_0_1_load_1 = load i16 %w1_local_0_1" [accelerator.cpp:134]   --->   Operation 88 'load' 'w1_local_0_1_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (0.00ns)   --->   "%w1_local_1_0_load_1 = load i16 %w1_local_1_0" [accelerator.cpp:134]   --->   Operation 89 'load' 'w1_local_1_0_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%w1_local_1_1_load_1 = load i16 %w1_local_1_1" [accelerator.cpp:134]   --->   Operation 90 'load' 'w1_local_1_1_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.00ns)   --->   "%bias_1_local_0_load_1 = load i16 %bias_1_local_0" [accelerator.cpp:134]   --->   Operation 91 'load' 'bias_1_local_0_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "%bias_1_local_1_load_1 = load i16 %bias_1_local_1" [accelerator.cpp:134]   --->   Operation 92 'load' 'bias_1_local_1_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "%trunc_ln72 = trunc i3 %j_1" [accelerator.cpp:72]   --->   Operation 93 'trunc' 'trunc_ln72' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_2 : Operation 94 [1/1] (1.06ns)   --->   "%output_0 = mux i13 @_ssdm_op_Mux.ap_auto.4i13.i2, i13 0, i13 0, i13 4096, i13 4096, i2 %trunc_ln72" [accelerator.cpp:33]   --->   Operation 94 'mux' 'output_0' <Predicate = (!icmp_ln69)> <Delay = 1.06> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln33 = zext i13 %output_0" [accelerator.cpp:33]   --->   Operation 95 'zext' 'zext_ln33' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_2 : Operation 96 [1/1] (1.06ns)   --->   "%output_0_1 = mux i13 @_ssdm_op_Mux.ap_auto.4i13.i2, i13 0, i13 4096, i13 0, i13 4096, i2 %trunc_ln72" [accelerator.cpp:33]   --->   Operation 96 'mux' 'output_0_1' <Predicate = (!icmp_ln69)> <Delay = 1.06> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln33_1 = zext i13 %output_0_1" [accelerator.cpp:33]   --->   Operation 97 'zext' 'zext_ln33_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_2 : Operation 98 [6/6] (4.45ns)   --->   "%call_ret1 = call i160 @model_array, i16 %w1_local_0_0_load_1, i16 %w1_local_0_1_load_1, i16 %w1_local_1_0_load_1, i16 %w1_local_1_1_load_1, i16 %bias_1_local_0_load_1, i16 %bias_1_local_1_load_1, i16 %zext_ln33, i16 %zext_ln33_1, i16 0, i16 0, i16 %training_read" [accelerator.cpp:83]   --->   Operation 98 'call' 'call_ret1' <Predicate = (!icmp_ln69)> <Delay = 4.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 99 [1/1] (1.16ns)   --->   "%icmp_ln144 = icmp_eq  i3 %j_1, i3 3" [accelerator.cpp:144]   --->   Operation 99 'icmp' 'icmp_ln144' <Predicate = (!icmp_ln69)> <Delay = 1.16> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 100 [1/1] (0.61ns)   --->   "%and_ln144 = and i1 %cmp_i_i116_read, i1 %icmp_ln144" [accelerator.cpp:144]   --->   Operation 100 'and' 'and_ln144' <Predicate = (!icmp_ln69)> <Delay = 0.61> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 101 [1/1] (0.00ns)   --->   "%br_ln144 = br i1 %and_ln144, void %for.inc310, void %for.body118.split_ifconv.for.end312_crit_edge.exitStub" [accelerator.cpp:144]   --->   Operation 101 'br' 'br_ln144' <Predicate = (!icmp_ln69)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.77>
ST_3 : Operation 102 [5/6] (6.77ns)   --->   "%call_ret1 = call i160 @model_array, i16 %w1_local_0_0_load_1, i16 %w1_local_0_1_load_1, i16 %w1_local_1_0_load_1, i16 %w1_local_1_1_load_1, i16 %bias_1_local_0_load_1, i16 %bias_1_local_1_load_1, i16 %zext_ln33, i16 %zext_ln33_1, i16 0, i16 0, i16 %training_read" [accelerator.cpp:83]   --->   Operation 102 'call' 'call_ret1' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 6.77>
ST_4 : Operation 103 [4/6] (6.77ns)   --->   "%call_ret1 = call i160 @model_array, i16 %w1_local_0_0_load_1, i16 %w1_local_0_1_load_1, i16 %w1_local_1_0_load_1, i16 %w1_local_1_1_load_1, i16 %bias_1_local_0_load_1, i16 %bias_1_local_1_load_1, i16 %zext_ln33, i16 %zext_ln33_1, i16 0, i16 0, i16 %training_read" [accelerator.cpp:83]   --->   Operation 103 'call' 'call_ret1' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 6.77>
ST_5 : Operation 104 [3/6] (6.77ns)   --->   "%call_ret1 = call i160 @model_array, i16 %w1_local_0_0_load_1, i16 %w1_local_0_1_load_1, i16 %w1_local_1_0_load_1, i16 %w1_local_1_1_load_1, i16 %bias_1_local_0_load_1, i16 %bias_1_local_1_load_1, i16 %zext_ln33, i16 %zext_ln33_1, i16 0, i16 0, i16 %training_read" [accelerator.cpp:83]   --->   Operation 104 'call' 'call_ret1' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 6.77>
ST_6 : Operation 105 [2/6] (6.77ns)   --->   "%call_ret1 = call i160 @model_array, i16 %w1_local_0_0_load_1, i16 %w1_local_0_1_load_1, i16 %w1_local_1_0_load_1, i16 %w1_local_1_1_load_1, i16 %bias_1_local_0_load_1, i16 %bias_1_local_1_load_1, i16 %zext_ln33, i16 %zext_ln33_1, i16 0, i16 0, i16 %training_read" [accelerator.cpp:83]   --->   Operation 105 'call' 'call_ret1' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 6.77>
ST_7 : Operation 106 [1/6] (6.77ns)   --->   "%call_ret1 = call i160 @model_array, i16 %w1_local_0_0_load_1, i16 %w1_local_0_1_load_1, i16 %w1_local_1_0_load_1, i16 %w1_local_1_1_load_1, i16 %bias_1_local_0_load_1, i16 %bias_1_local_1_load_1, i16 %zext_ln33, i16 %zext_ln33_1, i16 0, i16 0, i16 %training_read" [accelerator.cpp:83]   --->   Operation 106 'call' 'call_ret1' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 107 [1/1] (0.00ns)   --->   "%array_out1_output_k_0 = extractvalue i160 %call_ret1" [accelerator.cpp:83]   --->   Operation 107 'extractvalue' 'array_out1_output_k_0' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_7 : Operation 108 [1/1] (0.00ns)   --->   "%array_out1_output_k_1 = extractvalue i160 %call_ret1" [accelerator.cpp:83]   --->   Operation 108 'extractvalue' 'array_out1_output_k_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 4.45>
ST_8 : Operation 109 [1/1] (0.00ns)   --->   "%w2_local_0_0_load_1 = load i16 %w2_local_0_0" [accelerator.cpp:123]   --->   Operation 109 'load' 'w2_local_0_0_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_8 : Operation 110 [1/1] (0.00ns)   --->   "%w2_local_0_1_load_1 = load i16 %w2_local_0_1" [accelerator.cpp:123]   --->   Operation 110 'load' 'w2_local_0_1_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_8 : Operation 111 [1/1] (0.00ns)   --->   "%w2_local_1_0_load_1 = load i16 %w2_local_1_0" [accelerator.cpp:123]   --->   Operation 111 'load' 'w2_local_1_0_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_8 : Operation 112 [1/1] (0.00ns)   --->   "%w2_local_1_1_load_1 = load i16 %w2_local_1_1" [accelerator.cpp:123]   --->   Operation 112 'load' 'w2_local_1_1_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_8 : Operation 113 [1/1] (0.00ns)   --->   "%bias_2_local_0_load_1 = load i16 %bias_2_local_0" [accelerator.cpp:123]   --->   Operation 113 'load' 'bias_2_local_0_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "%bias_2_local_1_load_1 = load i16 %bias_2_local_1" [accelerator.cpp:123]   --->   Operation 114 'load' 'bias_2_local_1_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_8 : Operation 115 [6/6] (4.45ns)   --->   "%call_ret = call i160 @model_array, i16 %w2_local_0_0_load_1, i16 %w2_local_0_1_load_1, i16 %w2_local_1_0_load_1, i16 %w2_local_1_1_load_1, i16 %bias_2_local_0_load_1, i16 %bias_2_local_1_load_1, i16 %array_out1_output_k_0, i16 %array_out1_output_k_1, i16 0, i16 0, i16 %training_read" [accelerator.cpp:88]   --->   Operation 115 'call' 'call_ret' <Predicate = (!icmp_ln69)> <Delay = 4.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 6.77>
ST_9 : Operation 116 [5/6] (6.77ns)   --->   "%call_ret = call i160 @model_array, i16 %w2_local_0_0_load_1, i16 %w2_local_0_1_load_1, i16 %w2_local_1_0_load_1, i16 %w2_local_1_1_load_1, i16 %bias_2_local_0_load_1, i16 %bias_2_local_1_load_1, i16 %array_out1_output_k_0, i16 %array_out1_output_k_1, i16 0, i16 0, i16 %training_read" [accelerator.cpp:88]   --->   Operation 116 'call' 'call_ret' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 6.77>
ST_10 : Operation 117 [4/6] (6.77ns)   --->   "%call_ret = call i160 @model_array, i16 %w2_local_0_0_load_1, i16 %w2_local_0_1_load_1, i16 %w2_local_1_0_load_1, i16 %w2_local_1_1_load_1, i16 %bias_2_local_0_load_1, i16 %bias_2_local_1_load_1, i16 %array_out1_output_k_0, i16 %array_out1_output_k_1, i16 0, i16 0, i16 %training_read" [accelerator.cpp:88]   --->   Operation 117 'call' 'call_ret' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 6.77>
ST_11 : Operation 118 [3/6] (6.77ns)   --->   "%call_ret = call i160 @model_array, i16 %w2_local_0_0_load_1, i16 %w2_local_0_1_load_1, i16 %w2_local_1_0_load_1, i16 %w2_local_1_1_load_1, i16 %bias_2_local_0_load_1, i16 %bias_2_local_1_load_1, i16 %array_out1_output_k_0, i16 %array_out1_output_k_1, i16 0, i16 0, i16 %training_read" [accelerator.cpp:88]   --->   Operation 118 'call' 'call_ret' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 6.77>
ST_12 : Operation 119 [2/6] (6.77ns)   --->   "%call_ret = call i160 @model_array, i16 %w2_local_0_0_load_1, i16 %w2_local_0_1_load_1, i16 %w2_local_1_0_load_1, i16 %w2_local_1_1_load_1, i16 %bias_2_local_0_load_1, i16 %bias_2_local_1_load_1, i16 %array_out1_output_k_0, i16 %array_out1_output_k_1, i16 0, i16 0, i16 %training_read" [accelerator.cpp:88]   --->   Operation 119 'call' 'call_ret' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 6.77>
ST_13 : Operation 120 [1/6] (6.77ns)   --->   "%call_ret = call i160 @model_array, i16 %w2_local_0_0_load_1, i16 %w2_local_0_1_load_1, i16 %w2_local_1_0_load_1, i16 %w2_local_1_1_load_1, i16 %bias_2_local_0_load_1, i16 %bias_2_local_1_load_1, i16 %array_out1_output_k_0, i16 %array_out1_output_k_1, i16 0, i16 0, i16 %training_read" [accelerator.cpp:88]   --->   Operation 120 'call' 'call_ret' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 121 [1/1] (0.00ns)   --->   "%output_2 = extractvalue i160 %call_ret" [accelerator.cpp:88]   --->   Operation 121 'extractvalue' 'output_2' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_13 : Operation 122 [1/1] (0.00ns)   --->   "%tmp_6 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %output_2, i32 15" [accelerator.cpp:93]   --->   Operation 122 'bitselect' 'tmp_6' <Predicate = (!icmp_ln69)> <Delay = 0.00>

State 14 <SV = 13> <Delay = 6.81>
ST_14 : Operation 123 [1/1] (1.48ns)   --->   "%icmp_ln93 = icmp_eq  i16 %output_2, i16 0" [accelerator.cpp:93]   --->   Operation 123 'icmp' 'icmp_ln93' <Predicate = (!icmp_ln69)> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 124 [1/1] (1.48ns)   --->   "%sub_ln93 = sub i16 0, i16 %output_2" [accelerator.cpp:93]   --->   Operation 124 'sub' 'sub_ln93' <Predicate = (!icmp_ln69 & tmp_6)> <Delay = 1.48> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 125 [1/1] (0.54ns)   --->   "%select_ln93 = select i1 %tmp_6, i16 %sub_ln93, i16 %output_2" [accelerator.cpp:93]   --->   Operation 125 'select' 'select_ln93' <Predicate = (!icmp_ln69)> <Delay = 0.54> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 126 [1/1] (0.00ns)   --->   "%tmp = partselect i16 @llvm.part.select.i16, i16 %select_ln93, i32 15, i32 0" [accelerator.cpp:93]   --->   Operation 126 'partselect' 'tmp' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i1.i16, i1 1, i16 %tmp" [accelerator.cpp:93]   --->   Operation 127 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 128 [1/1] (0.00ns)   --->   "%sext_ln93 = sext i17 %tmp_1" [accelerator.cpp:93]   --->   Operation 128 'sext' 'sext_ln93' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_2 = cttz i32 @llvm.cttz.i32, i32 %sext_ln93, i1 1" [accelerator.cpp:93]   --->   Operation 129 'cttz' 'tmp_2' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 130 [1/1] (1.78ns)   --->   "%sub_ln93_1 = sub i32 16, i32 %tmp_2" [accelerator.cpp:93]   --->   Operation 130 'sub' 'sub_ln93_1' <Predicate = (!icmp_ln69)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 131 [1/1] (0.00ns)   --->   "%trunc_ln93 = trunc i32 %sub_ln93_1" [accelerator.cpp:93]   --->   Operation 131 'trunc' 'trunc_ln93' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 132 [1/1] (0.00ns)   --->   "%trunc_ln93_1 = trunc i32 %sub_ln93_1" [accelerator.cpp:93]   --->   Operation 132 'trunc' 'trunc_ln93_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 133 [1/1] (1.32ns)   --->   "%sub_ln93_4 = sub i4 6, i4 %trunc_ln93_1" [accelerator.cpp:93]   --->   Operation 133 'sub' 'sub_ln93_4' <Predicate = (!icmp_ln69)> <Delay = 1.32> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 134 [1/1] (0.00ns)   --->   "%zext_ln93_5 = zext i4 %sub_ln93_4" [accelerator.cpp:93]   --->   Operation 134 'zext' 'zext_ln93_5' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 135 [1/1] (1.67ns)   --->   "%lshr_ln93_2 = lshr i16 65535, i16 %zext_ln93_5" [accelerator.cpp:93]   --->   Operation 135 'lshr' 'lshr_ln93_2' <Predicate = (!icmp_ln69)> <Delay = 1.67> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 136 [1/1] (1.48ns)   --->   "%add_ln93_1 = add i16 %trunc_ln93, i16 65483" [accelerator.cpp:93]   --->   Operation 136 'add' 'add_ln93_1' <Predicate = (!icmp_ln69)> <Delay = 1.48> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 137 [1/1] (0.00ns)   --->   "%bit_select30_i_i1 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %select_ln93, i16 %add_ln93_1" [accelerator.cpp:93]   --->   Operation 137 'bitselect' 'bit_select30_i_i1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 138 [1/1] (0.00ns)   --->   "%trunc_ln93_2 = trunc i32 %tmp_2" [accelerator.cpp:93]   --->   Operation 138 'trunc' 'trunc_ln93_2' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 139 [1/1] (1.48ns)   --->   "%icmp_ln111 = icmp_sgt  i16 %output_2, i16 0" [accelerator.cpp:111]   --->   Operation 139 'icmp' 'icmp_ln111' <Predicate = (!icmp_ln69)> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node sub_ln112)   --->   "%sext_ln112 = sext i16 %output_2" [accelerator.cpp:112]   --->   Operation 140 'sext' 'sext_ln112' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node sub_ln112)   --->   "%zext_ln112_cast = mux i13 @_ssdm_op_Mux.ap_auto.4i13.i2, i13 0, i13 4096, i13 4096, i13 0, i2 %trunc_ln72" [accelerator.cpp:112]   --->   Operation 141 'mux' 'zext_ln112_cast' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node sub_ln112)   --->   "%zext_ln112 = zext i13 %zext_ln112_cast" [accelerator.cpp:112]   --->   Operation 142 'zext' 'zext_ln112' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 143 [1/1] (1.48ns) (out node of the LUT)   --->   "%sub_ln112 = sub i17 %sext_ln112, i17 %zext_ln112" [accelerator.cpp:112]   --->   Operation 143 'sub' 'sub_ln112' <Predicate = (!icmp_ln69)> <Delay = 1.48> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 144 [1/1] (0.00ns)   --->   "%delta_2 = trunc i17 %sub_ln112" [accelerator.cpp:112]   --->   Operation 144 'trunc' 'delta_2' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 145 [1/1] (0.00ns)   --->   "%sext_ln114 = sext i17 %sub_ln112" [accelerator.cpp:114]   --->   Operation 145 'sext' 'sext_ln114' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 146 [1/1] (4.46ns)   --->   "%mul_ln114 = mul i27 %sext_ln114, i27 409" [accelerator.cpp:114]   --->   Operation 146 'mul' 'mul_ln114' <Predicate = (!icmp_ln69)> <Delay = 4.46> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.46> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 147 [1/1] (0.00ns)   --->   "%delta_2_1 = partselect i15 @_ssdm_op_PartSelect.i15.i27.i32.i32, i27 %mul_ln114, i32 12, i32 26" [accelerator.cpp:114]   --->   Operation 147 'partselect' 'delta_2_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 148 [1/1] (0.00ns)   --->   "%sext_ln114_1 = sext i15 %delta_2_1" [accelerator.cpp:114]   --->   Operation 148 'sext' 'sext_ln114_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_14 : Operation 149 [1/1] (0.54ns)   --->   "%delta_2_2 = select i1 %icmp_ln111, i16 %delta_2, i16 %sext_ln114_1" [accelerator.cpp:111]   --->   Operation 149 'select' 'delta_2_2' <Predicate = (!icmp_ln69)> <Delay = 0.54> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 15 <SV = 14> <Delay = 4.45>
ST_15 : Operation 150 [1/1] (1.78ns)   --->   "%add_ln93 = add i32 %sub_ln93_1, i32 4294967243" [accelerator.cpp:93]   --->   Operation 150 'add' 'add_ln93' <Predicate = (!icmp_ln69)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 151 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %add_ln93, i32 1, i32 31" [accelerator.cpp:93]   --->   Operation 151 'partselect' 'tmp_7' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_15 : Operation 152 [1/1] (1.76ns)   --->   "%icmp_ln93_1 = icmp_sgt  i31 %tmp_7, i31 0" [accelerator.cpp:93]   --->   Operation 152 'icmp' 'icmp_ln93_1' <Predicate = (!icmp_ln69)> <Delay = 1.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln93_2)   --->   "%and_ln93_4 = and i16 %select_ln93, i16 %lshr_ln93_2" [accelerator.cpp:93]   --->   Operation 153 'and' 'and_ln93_4' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 154 [1/1] (1.48ns) (out node of the LUT)   --->   "%icmp_ln93_2 = icmp_ne  i16 %and_ln93_4, i16 0" [accelerator.cpp:93]   --->   Operation 154 'icmp' 'icmp_ln93_2' <Predicate = (!icmp_ln69)> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%and_ln93 = and i1 %icmp_ln93_1, i1 %icmp_ln93_2" [accelerator.cpp:93]   --->   Operation 155 'and' 'and_ln93' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%tmp_9 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln93, i32 31" [accelerator.cpp:93]   --->   Operation 156 'bitselect' 'tmp_9' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_15 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%xor_ln93_1 = xor i1 %tmp_9, i1 1" [accelerator.cpp:93]   --->   Operation 157 'xor' 'xor_ln93_1' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%and_ln93_1 = and i1 %bit_select30_i_i1, i1 %xor_ln93_1" [accelerator.cpp:93]   --->   Operation 158 'and' 'and_ln93_1' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%or_ln93 = or i1 %and_ln93_1, i1 %and_ln93" [accelerator.cpp:93]   --->   Operation 159 'or' 'or_ln93' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 160 [1/1] (0.61ns) (out node of the LUT)   --->   "%or_ln = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 0, i1 %or_ln93" [accelerator.cpp:93]   --->   Operation 160 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln69)> <Delay = 0.61>
ST_15 : Operation 161 [1/1] (0.00ns)   --->   "%zext_ln93 = zext i16 %select_ln93" [accelerator.cpp:93]   --->   Operation 161 'zext' 'zext_ln93' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_15 : Operation 162 [1/1] (1.78ns)   --->   "%icmp_ln93_3 = icmp_sgt  i32 %add_ln93, i32 0" [accelerator.cpp:93]   --->   Operation 162 'icmp' 'icmp_ln93_3' <Predicate = (!icmp_ln69)> <Delay = 1.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 163 [1/1] (1.78ns)   --->   "%add_ln93_2 = add i32 %sub_ln93_1, i32 4294967242" [accelerator.cpp:93]   --->   Operation 163 'add' 'add_ln93_2' <Predicate = (!icmp_ln69)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 164 [1/1] (0.00ns)   --->   "%zext_ln93_1 = zext i32 %add_ln93_2" [accelerator.cpp:93]   --->   Operation 164 'zext' 'zext_ln93_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_15 : Operation 165 [1/1] (2.36ns)   --->   "%lshr_ln93 = lshr i64 %zext_ln93, i64 %zext_ln93_1" [accelerator.cpp:93]   --->   Operation 165 'lshr' 'lshr_ln93' <Predicate = (!icmp_ln69)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 166 [1/1] (1.78ns)   --->   "%sub_ln93_2 = sub i32 54, i32 %sub_ln93_1" [accelerator.cpp:93]   --->   Operation 166 'sub' 'sub_ln93_2' <Predicate = (!icmp_ln69)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 167 [6/6] (4.45ns)   --->   "%call_ret2 = call i160 @model_array, i16 %w2_local_0_0_load_1, i16 %w2_local_0_1_load_1, i16 %w2_local_1_0_load_1, i16 %w2_local_1_1_load_1, i16 %bias_2_local_0_load_1, i16 %bias_2_local_1_load_1, i16 %array_out1_output_k_0, i16 %array_out1_output_k_1, i16 %delta_2_2, i16 0, i16 %training_read" [accelerator.cpp:123]   --->   Operation 167 'call' 'call_ret2' <Predicate = (!icmp_ln69)> <Delay = 4.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 15> <Delay = 6.77>
ST_16 : Operation 168 [1/1] (0.00ns)   --->   "%zext_ln93_2 = zext i32 %sub_ln93_2" [accelerator.cpp:93]   --->   Operation 168 'zext' 'zext_ln93_2' <Predicate = (!icmp_ln69 & !icmp_ln93_3)> <Delay = 0.00>
ST_16 : Operation 169 [1/1] (2.36ns)   --->   "%shl_ln93 = shl i64 %zext_ln93, i64 %zext_ln93_2" [accelerator.cpp:93]   --->   Operation 169 'shl' 'shl_ln93' <Predicate = (!icmp_ln69 & !icmp_ln93_3)> <Delay = 2.36> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.36> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node add_ln93_3)   --->   "%select_ln93_1 = select i1 %icmp_ln93_3, i64 %lshr_ln93, i64 %shl_ln93" [accelerator.cpp:93]   --->   Operation 170 'select' 'select_ln93_1' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_16 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node add_ln93_3)   --->   "%zext_ln93_3 = zext i2 %or_ln" [accelerator.cpp:93]   --->   Operation 171 'zext' 'zext_ln93_3' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_16 : Operation 172 [1/1] (1.98ns) (out node of the LUT)   --->   "%add_ln93_3 = add i64 %select_ln93_1, i64 %zext_ln93_3" [accelerator.cpp:93]   --->   Operation 172 'add' 'add_ln93_3' <Predicate = (!icmp_ln69)> <Delay = 1.98> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.98> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 173 [1/1] (0.00ns)   --->   "%lshr_ln93_1 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln93_3, i32 1, i32 63" [accelerator.cpp:93]   --->   Operation 173 'partselect' 'lshr_ln93_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_16 : Operation 174 [1/1] (0.00ns)   --->   "%tmp_10 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %add_ln93_3, i32 54" [accelerator.cpp:93]   --->   Operation 174 'bitselect' 'tmp_10' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_16 : Operation 175 [1/1] (0.00ns)   --->   "%trunc_ln93_3 = partselect i52 @_ssdm_op_PartSelect.i52.i64.i32.i32, i64 %add_ln93_3, i32 1, i32 52" [accelerator.cpp:93]   --->   Operation 175 'partselect' 'trunc_ln93_3' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_16 : Operation 176 [1/1] (1.83ns)   --->   "%icmp_ln93_5 = icmp_eq  i52 %trunc_ln93_3, i52 0" [accelerator.cpp:93]   --->   Operation 176 'icmp' 'icmp_ln93_5' <Predicate = (!icmp_ln69)> <Delay = 1.83> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.83> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 177 [5/6] (6.77ns)   --->   "%call_ret2 = call i160 @model_array, i16 %w2_local_0_0_load_1, i16 %w2_local_0_1_load_1, i16 %w2_local_1_0_load_1, i16 %w2_local_1_1_load_1, i16 %bias_2_local_0_load_1, i16 %bias_2_local_1_load_1, i16 %array_out1_output_k_0, i16 %array_out1_output_k_1, i16 %delta_2_2, i16 0, i16 %training_read" [accelerator.cpp:123]   --->   Operation 177 'call' 'call_ret2' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 16> <Delay = 6.77>
ST_17 : Operation 178 [1/1] (0.00ns)   --->   "%zext_ln93_4 = zext i63 %lshr_ln93_1" [accelerator.cpp:93]   --->   Operation 178 'zext' 'zext_ln93_4' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_17 : Operation 179 [1/1] (0.63ns)   --->   "%select_ln93_2 = select i1 %tmp_10, i11 1023, i11 1022" [accelerator.cpp:93]   --->   Operation 179 'select' 'select_ln93_2' <Predicate = (!icmp_ln69)> <Delay = 0.63> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_17 : Operation 180 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln93_3 = sub i11 4, i11 %trunc_ln93_2" [accelerator.cpp:93]   --->   Operation 180 'sub' 'sub_ln93_3' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.23> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 181 [1/1] (2.47ns) (root node of TernaryAdder)   --->   "%add_ln93_4 = add i11 %select_ln93_2, i11 %sub_ln93_3" [accelerator.cpp:93]   --->   Operation 181 'add' 'add_ln93_4' <Predicate = (!icmp_ln69)> <Delay = 2.47> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.23> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 182 [1/1] (0.00ns)   --->   "%tmp_8 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i1.i11, i1 %tmp_6, i11 %add_ln93_4" [accelerator.cpp:93]   --->   Operation 182 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_17 : Operation 183 [1/1] (0.00ns)   --->   "%LD = partset i64 @_ssdm_op_PartSet.i64.i64.i12.i32.i32, i64 %zext_ln93_4, i12 %tmp_8, i32 52, i32 63" [accelerator.cpp:93]   --->   Operation 183 'partset' 'LD' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_17 : Operation 184 [1/1] (0.00ns)   --->   "%bitcast_ln756 = bitcast i64 %LD" [accelerator.cpp:93]   --->   Operation 184 'bitcast' 'bitcast_ln756' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_17 : Operation 185 [1/1] (1.42ns)   --->   "%icmp_ln93_4 = icmp_ne  i11 %add_ln93_4, i11 2047" [accelerator.cpp:93]   --->   Operation 185 'icmp' 'icmp_ln93_4' <Predicate = (!icmp_ln69)> <Delay = 1.42> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : [1/1] (1.02ns)   --->   Input mux for Operation 186 '%tmp_4 = fcmp_ogt  i64 %bitcast_ln756, i64 0.5'
ST_17 : Operation 186 [2/2] (2.58ns)   --->   "%tmp_4 = fcmp_ogt  i64 %bitcast_ln756, i64 0.5" [accelerator.cpp:93]   --->   Operation 186 'dcmp' 'tmp_4' <Predicate = (!icmp_ln69)> <Delay = 2.58> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 1> <II = 1> <Delay = 3.61> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 187 [4/6] (6.77ns)   --->   "%call_ret2 = call i160 @model_array, i16 %w2_local_0_0_load_1, i16 %w2_local_0_1_load_1, i16 %w2_local_1_0_load_1, i16 %w2_local_1_1_load_1, i16 %bias_2_local_0_load_1, i16 %bias_2_local_1_load_1, i16 %array_out1_output_k_0, i16 %array_out1_output_k_1, i16 %delta_2_2, i16 0, i16 %training_read" [accelerator.cpp:123]   --->   Operation 187 'call' 'call_ret2' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 17> <Delay = 6.77>
ST_18 : Operation 188 [1/2] (3.61ns)   --->   "%tmp_4 = fcmp_ogt  i64 %bitcast_ln756, i64 0.5" [accelerator.cpp:93]   --->   Operation 188 'dcmp' 'tmp_4' <Predicate = (!icmp_ln69)> <Delay = 3.61> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 1> <II = 1> <Delay = 3.61> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : [1/1] (1.02ns)   --->   Input mux for Operation 189 '%tmp_5 = fcmp_ole  i64 %bitcast_ln756, i64 0.5'
ST_18 : Operation 189 [2/2] (2.58ns)   --->   "%tmp_5 = fcmp_ole  i64 %bitcast_ln756, i64 0.5" [accelerator.cpp:96]   --->   Operation 189 'dcmp' 'tmp_5' <Predicate = (!icmp_ln69)> <Delay = 2.58> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 1> <II = 1> <Delay = 3.61> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 190 [3/6] (6.77ns)   --->   "%call_ret2 = call i160 @model_array, i16 %w2_local_0_0_load_1, i16 %w2_local_0_1_load_1, i16 %w2_local_1_0_load_1, i16 %w2_local_1_1_load_1, i16 %bias_2_local_0_load_1, i16 %bias_2_local_1_load_1, i16 %array_out1_output_k_0, i16 %array_out1_output_k_1, i16 %delta_2_2, i16 0, i16 %training_read" [accelerator.cpp:123]   --->   Operation 190 'call' 'call_ret2' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 18> <Delay = 6.77>
ST_19 : Operation 191 [1/2] (3.61ns)   --->   "%tmp_5 = fcmp_ole  i64 %bitcast_ln756, i64 0.5" [accelerator.cpp:96]   --->   Operation 191 'dcmp' 'tmp_5' <Predicate = (!icmp_ln69)> <Delay = 3.61> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 1> <II = 1> <Delay = 3.61> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 192 [2/6] (6.77ns)   --->   "%call_ret2 = call i160 @model_array, i16 %w2_local_0_0_load_1, i16 %w2_local_0_1_load_1, i16 %w2_local_1_0_load_1, i16 %w2_local_1_1_load_1, i16 %bias_2_local_0_load_1, i16 %bias_2_local_1_load_1, i16 %array_out1_output_k_0, i16 %array_out1_output_k_1, i16 %delta_2_2, i16 0, i16 %training_read" [accelerator.cpp:123]   --->   Operation 192 'call' 'call_ret2' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 19> <Delay = 6.77>
ST_20 : Operation 193 [1/6] (6.77ns)   --->   "%call_ret2 = call i160 @model_array, i16 %w2_local_0_0_load_1, i16 %w2_local_0_1_load_1, i16 %w2_local_1_0_load_1, i16 %w2_local_1_1_load_1, i16 %bias_2_local_0_load_1, i16 %bias_2_local_1_load_1, i16 %array_out1_output_k_0, i16 %array_out1_output_k_1, i16 %delta_2_2, i16 0, i16 %training_read" [accelerator.cpp:123]   --->   Operation 193 'call' 'call_ret2' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_20 : Operation 194 [1/1] (0.00ns)   --->   "%array_back2_delta_kmin1_0 = extractvalue i160 %call_ret2" [accelerator.cpp:123]   --->   Operation 194 'extractvalue' 'array_back2_delta_kmin1_0' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_20 : Operation 195 [1/1] (0.00ns)   --->   "%array_back2_delta_kmin1_1 = extractvalue i160 %call_ret2" [accelerator.cpp:123]   --->   Operation 195 'extractvalue' 'array_back2_delta_kmin1_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_20 : Operation 196 [1/1] (0.00ns)   --->   "%array_back2_weight_changes_0_0 = extractvalue i160 %call_ret2" [accelerator.cpp:123]   --->   Operation 196 'extractvalue' 'array_back2_weight_changes_0_0' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_20 : Operation 197 [1/1] (0.00ns)   --->   "%array_back2_weight_changes_0_1 = extractvalue i160 %call_ret2" [accelerator.cpp:123]   --->   Operation 197 'extractvalue' 'array_back2_weight_changes_0_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_20 : Operation 198 [1/1] (0.00ns)   --->   "%array_back2_weight_changes_1_0 = extractvalue i160 %call_ret2" [accelerator.cpp:123]   --->   Operation 198 'extractvalue' 'array_back2_weight_changes_1_0' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_20 : Operation 199 [1/1] (0.00ns)   --->   "%array_back2_weight_changes_1_1 = extractvalue i160 %call_ret2" [accelerator.cpp:123]   --->   Operation 199 'extractvalue' 'array_back2_weight_changes_1_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_20 : Operation 200 [1/1] (0.00ns)   --->   "%array_back2_bias_change_0 = extractvalue i160 %call_ret2" [accelerator.cpp:123]   --->   Operation 200 'extractvalue' 'array_back2_bias_change_0' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_20 : Operation 201 [1/1] (0.00ns)   --->   "%array_back2_bias_change_1 = extractvalue i160 %call_ret2" [accelerator.cpp:123]   --->   Operation 201 'extractvalue' 'array_back2_bias_change_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>

State 21 <SV = 20> <Delay = 4.45>
ST_21 : Operation 202 [6/6] (4.45ns)   --->   "%call_ret3 = call i160 @model_array, i16 %w1_local_0_0_load_1, i16 %w1_local_0_1_load_1, i16 %w1_local_1_0_load_1, i16 %w1_local_1_1_load_1, i16 %bias_1_local_0_load_1, i16 %bias_1_local_1_load_1, i16 %zext_ln33, i16 %zext_ln33_1, i16 %array_back2_delta_kmin1_0, i16 %array_back2_delta_kmin1_1, i16 %training_read" [accelerator.cpp:134]   --->   Operation 202 'call' 'call_ret3' <Predicate = (!icmp_ln69)> <Delay = 4.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 6.77>
ST_22 : Operation 203 [5/6] (6.77ns)   --->   "%call_ret3 = call i160 @model_array, i16 %w1_local_0_0_load_1, i16 %w1_local_0_1_load_1, i16 %w1_local_1_0_load_1, i16 %w1_local_1_1_load_1, i16 %bias_1_local_0_load_1, i16 %bias_1_local_1_load_1, i16 %zext_ln33, i16 %zext_ln33_1, i16 %array_back2_delta_kmin1_0, i16 %array_back2_delta_kmin1_1, i16 %training_read" [accelerator.cpp:134]   --->   Operation 203 'call' 'call_ret3' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 22> <Delay = 6.77>
ST_23 : Operation 204 [4/6] (6.77ns)   --->   "%call_ret3 = call i160 @model_array, i16 %w1_local_0_0_load_1, i16 %w1_local_0_1_load_1, i16 %w1_local_1_0_load_1, i16 %w1_local_1_1_load_1, i16 %bias_1_local_0_load_1, i16 %bias_1_local_1_load_1, i16 %zext_ln33, i16 %zext_ln33_1, i16 %array_back2_delta_kmin1_0, i16 %array_back2_delta_kmin1_1, i16 %training_read" [accelerator.cpp:134]   --->   Operation 204 'call' 'call_ret3' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 23> <Delay = 6.77>
ST_24 : Operation 205 [3/6] (6.77ns)   --->   "%call_ret3 = call i160 @model_array, i16 %w1_local_0_0_load_1, i16 %w1_local_0_1_load_1, i16 %w1_local_1_0_load_1, i16 %w1_local_1_1_load_1, i16 %bias_1_local_0_load_1, i16 %bias_1_local_1_load_1, i16 %zext_ln33, i16 %zext_ln33_1, i16 %array_back2_delta_kmin1_0, i16 %array_back2_delta_kmin1_1, i16 %training_read" [accelerator.cpp:134]   --->   Operation 205 'call' 'call_ret3' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 25 <SV = 24> <Delay = 6.77>
ST_25 : Operation 206 [2/6] (6.77ns)   --->   "%call_ret3 = call i160 @model_array, i16 %w1_local_0_0_load_1, i16 %w1_local_0_1_load_1, i16 %w1_local_1_0_load_1, i16 %w1_local_1_1_load_1, i16 %bias_1_local_0_load_1, i16 %bias_1_local_1_load_1, i16 %zext_ln33, i16 %zext_ln33_1, i16 %array_back2_delta_kmin1_0, i16 %array_back2_delta_kmin1_1, i16 %training_read" [accelerator.cpp:134]   --->   Operation 206 'call' 'call_ret3' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 26 <SV = 25> <Delay = 6.77>
ST_26 : Operation 207 [1/1] (0.00ns)   --->   "%output_array_inference_0_1_load_1 = load i16 %output_array_inference_0_1" [accelerator.cpp:96]   --->   Operation 207 'load' 'output_array_inference_0_1_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_26 : Operation 208 [1/1] (0.00ns)   --->   "%output_array_inference_1_1_load_1 = load i16 %output_array_inference_1_1" [accelerator.cpp:96]   --->   Operation 208 'load' 'output_array_inference_1_1_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_26 : Operation 209 [1/1] (0.00ns)   --->   "%output_array_inference_2_1_load_1 = load i16 %output_array_inference_2_1" [accelerator.cpp:96]   --->   Operation 209 'load' 'output_array_inference_2_1_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_26 : Operation 210 [1/1] (0.00ns)   --->   "%output_array_inference_3_1_load_1 = load i16 %output_array_inference_3_1" [accelerator.cpp:96]   --->   Operation 210 'load' 'output_array_inference_3_1_load_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_26 : Operation 211 [1/1] (0.00ns)   --->   "%specpipeline_ln70 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [accelerator.cpp:70]   --->   Operation 211 'specpipeline' 'specpipeline_ln70' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_26 : Operation 212 [1/1] (0.00ns)   --->   "%speclooptripcount_ln68 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 0, i64 4, i64 2" [accelerator.cpp:68]   --->   Operation 212 'speclooptripcount' 'speclooptripcount_ln68' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_26 : Operation 213 [1/1] (0.00ns)   --->   "%specloopname_ln69 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [accelerator.cpp:69]   --->   Operation 213 'specloopname' 'specloopname_ln69' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_26 : Operation 214 [1/1] (0.61ns)   --->   "%or_ln93_1 = or i1 %icmp_ln93_5, i1 %icmp_ln93_4" [accelerator.cpp:93]   --->   Operation 214 'or' 'or_ln93_1' <Predicate = (!icmp_ln69)> <Delay = 0.61> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 215 [1/1] (0.61ns)   --->   "%and_ln93_2 = and i1 %or_ln93_1, i1 %tmp_4" [accelerator.cpp:93]   --->   Operation 215 'and' 'and_ln93_2' <Predicate = (!icmp_ln69)> <Delay = 0.61> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 216 [1/1] (0.00ns) (grouped into LUT with out node or_ln96)   --->   "%and_ln96 = and i1 %or_ln93_1, i1 %tmp_5" [accelerator.cpp:96]   --->   Operation 216 'and' 'and_ln96' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 217 [1/1] (0.00ns) (grouped into LUT with out node and_ln93_3)   --->   "%xor_ln93 = xor i1 %icmp_ln93, i1 1" [accelerator.cpp:93]   --->   Operation 217 'xor' 'xor_ln93' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 218 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln93_3 = and i1 %and_ln93_2, i1 %xor_ln93" [accelerator.cpp:93]   --->   Operation 218 'and' 'and_ln93_3' <Predicate = (!icmp_ln69)> <Delay = 0.61> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 219 [1/1] (1.00ns)   --->   "%icmp_ln94 = icmp_ne  i2 %trunc_ln72, i2 0" [accelerator.cpp:94]   --->   Operation 219 'icmp' 'icmp_ln94' <Predicate = (!icmp_ln69)> <Delay = 1.00> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 220 [1/1] (1.00ns)   --->   "%icmp_ln94_1 = icmp_ne  i2 %trunc_ln72, i2 1" [accelerator.cpp:94]   --->   Operation 220 'icmp' 'icmp_ln94_1' <Predicate = (!icmp_ln69)> <Delay = 1.00> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 221 [1/1] (1.00ns)   --->   "%icmp_ln94_2 = icmp_ne  i2 %trunc_ln72, i2 2" [accelerator.cpp:94]   --->   Operation 221 'icmp' 'icmp_ln94_2' <Predicate = (!icmp_ln69)> <Delay = 1.00> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 222 [1/1] (0.00ns) (grouped into LUT with out node or_ln96_1)   --->   "%and_ln94 = and i1 %and_ln93_3, i1 %icmp_ln94" [accelerator.cpp:94]   --->   Operation 222 'and' 'and_ln94' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 223 [1/1] (0.00ns) (grouped into LUT with out node or_ln96_1)   --->   "%and_ln94_1 = and i1 %icmp_ln94_1, i1 %icmp_ln94_2" [accelerator.cpp:94]   --->   Operation 223 'and' 'and_ln94_1' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 224 [1/1] (0.00ns) (grouped into LUT with out node or_ln96_1)   --->   "%and_ln94_2 = and i1 %and_ln94_1, i1 %and_ln94" [accelerator.cpp:94]   --->   Operation 224 'and' 'and_ln94_2' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node or_ln96)   --->   "%xor_ln96 = xor i1 %and_ln93_2, i1 1" [accelerator.cpp:96]   --->   Operation 225 'xor' 'xor_ln96' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node or_ln96)   --->   "%and_ln96_1 = and i1 %and_ln96, i1 %xor_ln96" [accelerator.cpp:96]   --->   Operation 226 'and' 'and_ln96_1' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 227 [1/1] (0.61ns) (out node of the LUT)   --->   "%or_ln96 = or i1 %icmp_ln93, i1 %and_ln96_1" [accelerator.cpp:96]   --->   Operation 227 'or' 'or_ln96' <Predicate = (!icmp_ln69)> <Delay = 0.61> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 228 [1/1] (0.00ns) (grouped into LUT with out node and_ln96_4)   --->   "%and_ln96_2 = and i1 %icmp_ln94, i1 %icmp_ln94_1" [accelerator.cpp:96]   --->   Operation 228 'and' 'and_ln96_2' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 229 [1/1] (0.00ns) (grouped into LUT with out node and_ln96_4)   --->   "%and_ln96_3 = and i1 %icmp_ln94_2, i1 %or_ln96" [accelerator.cpp:96]   --->   Operation 229 'and' 'and_ln96_3' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 230 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln96_4 = and i1 %and_ln96_3, i1 %and_ln96_2" [accelerator.cpp:96]   --->   Operation 230 'and' 'and_ln96_4' <Predicate = (!icmp_ln69)> <Delay = 0.61> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 231 [1/1] (0.00ns) (grouped into LUT with out node select_ln96_1)   --->   "%select_ln96 = select i1 %and_ln96_4, i16 0, i16 4096" [accelerator.cpp:96]   --->   Operation 231 'select' 'select_ln96' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 232 [1/1] (0.61ns) (out node of the LUT)   --->   "%or_ln96_1 = or i1 %and_ln96_4, i1 %and_ln94_2" [accelerator.cpp:96]   --->   Operation 232 'or' 'or_ln96_1' <Predicate = (!icmp_ln69)> <Delay = 0.61> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 233 [1/1] (0.88ns) (out node of the LUT)   --->   "%select_ln96_1 = select i1 %or_ln96_1, i16 %select_ln96, i16 %output_array_inference_3_1_load_1" [accelerator.cpp:96]   --->   Operation 233 'select' 'select_ln96_1' <Predicate = (!icmp_ln69)> <Delay = 0.88> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 234 [1/1] (1.00ns)   --->   "%icmp_ln94_3 = icmp_eq  i2 %trunc_ln72, i2 2" [accelerator.cpp:94]   --->   Operation 234 'icmp' 'icmp_ln94_3' <Predicate = (!icmp_ln69)> <Delay = 1.00> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 235 [1/1] (0.00ns) (grouped into LUT with out node select_ln96_3)   --->   "%and_ln94_3 = and i1 %and_ln93_3, i1 %icmp_ln94_3" [accelerator.cpp:94]   --->   Operation 235 'and' 'and_ln94_3' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 236 [1/1] (0.61ns)   --->   "%and_ln96_5 = and i1 %icmp_ln94_3, i1 %or_ln96" [accelerator.cpp:96]   --->   Operation 236 'and' 'and_ln96_5' <Predicate = (!icmp_ln69)> <Delay = 0.61> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 237 [1/1] (0.00ns) (grouped into LUT with out node select_ln96_3)   --->   "%select_ln96_2 = select i1 %and_ln96_5, i16 0, i16 4096" [accelerator.cpp:96]   --->   Operation 237 'select' 'select_ln96_2' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 238 [1/1] (0.00ns) (grouped into LUT with out node select_ln96_3)   --->   "%or_ln96_2 = or i1 %and_ln96_5, i1 %and_ln94_3" [accelerator.cpp:96]   --->   Operation 238 'or' 'or_ln96_2' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 239 [1/1] (0.88ns) (out node of the LUT)   --->   "%select_ln96_3 = select i1 %or_ln96_2, i16 %select_ln96_2, i16 %output_array_inference_2_1_load_1" [accelerator.cpp:96]   --->   Operation 239 'select' 'select_ln96_3' <Predicate = (!icmp_ln69)> <Delay = 0.88> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 240 [1/1] (1.00ns)   --->   "%icmp_ln94_4 = icmp_eq  i2 %trunc_ln72, i2 1" [accelerator.cpp:94]   --->   Operation 240 'icmp' 'icmp_ln94_4' <Predicate = (!icmp_ln69)> <Delay = 1.00> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 241 [1/1] (0.00ns) (grouped into LUT with out node select_ln96_5)   --->   "%and_ln94_4 = and i1 %and_ln93_3, i1 %icmp_ln94_4" [accelerator.cpp:94]   --->   Operation 241 'and' 'and_ln94_4' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 242 [1/1] (0.61ns)   --->   "%and_ln96_6 = and i1 %icmp_ln94_4, i1 %or_ln96" [accelerator.cpp:96]   --->   Operation 242 'and' 'and_ln96_6' <Predicate = (!icmp_ln69)> <Delay = 0.61> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 243 [1/1] (0.00ns) (grouped into LUT with out node select_ln96_5)   --->   "%select_ln96_4 = select i1 %and_ln96_6, i16 0, i16 4096" [accelerator.cpp:96]   --->   Operation 243 'select' 'select_ln96_4' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 244 [1/1] (0.00ns) (grouped into LUT with out node select_ln96_5)   --->   "%or_ln96_3 = or i1 %and_ln96_6, i1 %and_ln94_4" [accelerator.cpp:96]   --->   Operation 244 'or' 'or_ln96_3' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 245 [1/1] (0.88ns) (out node of the LUT)   --->   "%select_ln96_5 = select i1 %or_ln96_3, i16 %select_ln96_4, i16 %output_array_inference_1_1_load_1" [accelerator.cpp:96]   --->   Operation 245 'select' 'select_ln96_5' <Predicate = (!icmp_ln69)> <Delay = 0.88> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 246 [1/1] (1.00ns)   --->   "%icmp_ln94_5 = icmp_eq  i2 %trunc_ln72, i2 0" [accelerator.cpp:94]   --->   Operation 246 'icmp' 'icmp_ln94_5' <Predicate = (!icmp_ln69)> <Delay = 1.00> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 247 [1/1] (0.00ns) (grouped into LUT with out node select_ln96_7)   --->   "%and_ln94_5 = and i1 %and_ln93_3, i1 %icmp_ln94_5" [accelerator.cpp:94]   --->   Operation 247 'and' 'and_ln94_5' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 248 [1/1] (0.61ns)   --->   "%and_ln96_7 = and i1 %icmp_ln94_5, i1 %or_ln96" [accelerator.cpp:96]   --->   Operation 248 'and' 'and_ln96_7' <Predicate = (!icmp_ln69)> <Delay = 0.61> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 249 [1/1] (0.00ns) (grouped into LUT with out node select_ln96_7)   --->   "%select_ln96_6 = select i1 %and_ln96_7, i16 0, i16 4096" [accelerator.cpp:96]   --->   Operation 249 'select' 'select_ln96_6' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 250 [1/1] (0.00ns) (grouped into LUT with out node select_ln96_7)   --->   "%or_ln96_4 = or i1 %and_ln96_7, i1 %and_ln94_5" [accelerator.cpp:96]   --->   Operation 250 'or' 'or_ln96_4' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 251 [1/1] (0.88ns) (out node of the LUT)   --->   "%select_ln96_7 = select i1 %or_ln96_4, i16 %select_ln96_6, i16 %output_array_inference_0_1_load_1" [accelerator.cpp:96]   --->   Operation 251 'select' 'select_ln96_7' <Predicate = (!icmp_ln69)> <Delay = 0.88> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 252 [1/6] (6.77ns)   --->   "%call_ret3 = call i160 @model_array, i16 %w1_local_0_0_load_1, i16 %w1_local_0_1_load_1, i16 %w1_local_1_0_load_1, i16 %w1_local_1_1_load_1, i16 %bias_1_local_0_load_1, i16 %bias_1_local_1_load_1, i16 %zext_ln33, i16 %zext_ln33_1, i16 %array_back2_delta_kmin1_0, i16 %array_back2_delta_kmin1_1, i16 %training_read" [accelerator.cpp:134]   --->   Operation 252 'call' 'call_ret3' <Predicate = (!icmp_ln69)> <Delay = 6.77> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_26 : Operation 253 [1/1] (0.00ns)   --->   "%array_back1_weight_changes_0_0 = extractvalue i160 %call_ret3" [accelerator.cpp:134]   --->   Operation 253 'extractvalue' 'array_back1_weight_changes_0_0' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_26 : Operation 254 [1/1] (0.00ns)   --->   "%array_back1_weight_changes_0_1 = extractvalue i160 %call_ret3" [accelerator.cpp:134]   --->   Operation 254 'extractvalue' 'array_back1_weight_changes_0_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_26 : Operation 255 [1/1] (0.00ns)   --->   "%array_back1_weight_changes_1_0 = extractvalue i160 %call_ret3" [accelerator.cpp:134]   --->   Operation 255 'extractvalue' 'array_back1_weight_changes_1_0' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_26 : Operation 256 [1/1] (0.00ns)   --->   "%array_back1_weight_changes_1_1 = extractvalue i160 %call_ret3" [accelerator.cpp:134]   --->   Operation 256 'extractvalue' 'array_back1_weight_changes_1_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_26 : Operation 257 [1/1] (0.00ns)   --->   "%array_back1_bias_change_0 = extractvalue i160 %call_ret3" [accelerator.cpp:134]   --->   Operation 257 'extractvalue' 'array_back1_bias_change_0' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_26 : Operation 258 [1/1] (0.00ns)   --->   "%array_back1_bias_change_1 = extractvalue i160 %call_ret3" [accelerator.cpp:134]   --->   Operation 258 'extractvalue' 'array_back1_bias_change_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_26 : Operation 259 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %array_back2_bias_change_1, i16 %bias_2_local_1" [accelerator.cpp:69]   --->   Operation 259 'store' 'store_ln69' <Predicate = (!icmp_ln69 & !and_ln144)> <Delay = 1.02>
ST_26 : Operation 260 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %array_back2_bias_change_0, i16 %bias_2_local_0" [accelerator.cpp:69]   --->   Operation 260 'store' 'store_ln69' <Predicate = (!icmp_ln69 & !and_ln144)> <Delay = 1.02>
ST_26 : Operation 261 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %array_back2_weight_changes_1_1, i16 %w2_local_1_1" [accelerator.cpp:69]   --->   Operation 261 'store' 'store_ln69' <Predicate = (!icmp_ln69 & !and_ln144)> <Delay = 1.02>
ST_26 : Operation 262 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %array_back2_weight_changes_0_1, i16 %w2_local_1_0" [accelerator.cpp:69]   --->   Operation 262 'store' 'store_ln69' <Predicate = (!icmp_ln69 & !and_ln144)> <Delay = 1.02>
ST_26 : Operation 263 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %array_back2_weight_changes_1_0, i16 %w2_local_0_1" [accelerator.cpp:69]   --->   Operation 263 'store' 'store_ln69' <Predicate = (!icmp_ln69 & !and_ln144)> <Delay = 1.02>
ST_26 : Operation 264 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %array_back2_weight_changes_0_0, i16 %w2_local_0_0" [accelerator.cpp:69]   --->   Operation 264 'store' 'store_ln69' <Predicate = (!icmp_ln69 & !and_ln144)> <Delay = 1.02>
ST_26 : Operation 265 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %select_ln96_1, i16 %output_array_inference_3_1" [accelerator.cpp:69]   --->   Operation 265 'store' 'store_ln69' <Predicate = (!icmp_ln69 & !and_ln144)> <Delay = 1.02>
ST_26 : Operation 266 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %select_ln96_3, i16 %output_array_inference_2_1" [accelerator.cpp:69]   --->   Operation 266 'store' 'store_ln69' <Predicate = (!icmp_ln69 & !and_ln144)> <Delay = 1.02>
ST_26 : Operation 267 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %select_ln96_5, i16 %output_array_inference_1_1" [accelerator.cpp:69]   --->   Operation 267 'store' 'store_ln69' <Predicate = (!icmp_ln69 & !and_ln144)> <Delay = 1.02>
ST_26 : Operation 268 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %select_ln96_7, i16 %output_array_inference_0_1" [accelerator.cpp:69]   --->   Operation 268 'store' 'store_ln69' <Predicate = (!icmp_ln69 & !and_ln144)> <Delay = 1.02>
ST_26 : Operation 269 [1/1] (1.02ns)   --->   "%store_ln69 = store i3 %add_ln69, i3 %j" [accelerator.cpp:69]   --->   Operation 269 'store' 'store_ln69' <Predicate = (!icmp_ln69 & !and_ln144)> <Delay = 1.02>

State 27 <SV = 26> <Delay = 1.02>
ST_27 : Operation 270 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %array_back1_bias_change_1, i16 %bias_1_local_1" [accelerator.cpp:69]   --->   Operation 270 'store' 'store_ln69' <Predicate = true> <Delay = 1.02>
ST_27 : Operation 271 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %array_back1_bias_change_0, i16 %bias_1_local_0" [accelerator.cpp:69]   --->   Operation 271 'store' 'store_ln69' <Predicate = true> <Delay = 1.02>
ST_27 : Operation 272 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %array_back1_weight_changes_1_1, i16 %w1_local_1_1" [accelerator.cpp:69]   --->   Operation 272 'store' 'store_ln69' <Predicate = true> <Delay = 1.02>
ST_27 : Operation 273 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %array_back1_weight_changes_0_1, i16 %w1_local_1_0" [accelerator.cpp:69]   --->   Operation 273 'store' 'store_ln69' <Predicate = true> <Delay = 1.02>
ST_27 : Operation 274 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %array_back1_weight_changes_1_0, i16 %w1_local_0_1" [accelerator.cpp:69]   --->   Operation 274 'store' 'store_ln69' <Predicate = true> <Delay = 1.02>
ST_27 : Operation 275 [1/1] (1.02ns)   --->   "%store_ln69 = store i16 %array_back1_weight_changes_0_0, i16 %w1_local_0_0" [accelerator.cpp:69]   --->   Operation 275 'store' 'store_ln69' <Predicate = true> <Delay = 1.02>
ST_27 : Operation 276 [1/1] (0.00ns)   --->   "%br_ln69 = br void %for.body118" [accelerator.cpp:69]   --->   Operation 276 'br' 'br_ln69' <Predicate = true> <Delay = 0.00>

State 28 <SV = 26> <Delay = 1.02>
ST_28 : Operation 277 [1/1] (0.00ns)   --->   "%write_ln123 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %bias_2_local_1_3_out, i16 %bias_2_local_1_load_1" [accelerator.cpp:123]   --->   Operation 277 'write' 'write_ln123' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 278 [1/1] (0.00ns)   --->   "%write_ln123 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %bias_2_local_0_3_out, i16 %bias_2_local_0_load_1" [accelerator.cpp:123]   --->   Operation 278 'write' 'write_ln123' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 279 [1/1] (0.00ns)   --->   "%write_ln134 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %bias_1_local_1_3_out, i16 %bias_1_local_1_load_1" [accelerator.cpp:134]   --->   Operation 279 'write' 'write_ln134' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 280 [1/1] (0.00ns)   --->   "%write_ln134 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %bias_1_local_0_3_out, i16 %bias_1_local_0_load_1" [accelerator.cpp:134]   --->   Operation 280 'write' 'write_ln134' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 281 [1/1] (0.00ns)   --->   "%write_ln123 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w2_local_1_1_3_out, i16 %w2_local_1_1_load_1" [accelerator.cpp:123]   --->   Operation 281 'write' 'write_ln123' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 282 [1/1] (0.00ns)   --->   "%write_ln123 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w2_local_1_0_3_out, i16 %w2_local_1_0_load_1" [accelerator.cpp:123]   --->   Operation 282 'write' 'write_ln123' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 283 [1/1] (0.00ns)   --->   "%write_ln123 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w2_local_0_1_3_out, i16 %w2_local_0_1_load_1" [accelerator.cpp:123]   --->   Operation 283 'write' 'write_ln123' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 284 [1/1] (0.00ns)   --->   "%write_ln123 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w2_local_0_0_3_out, i16 %w2_local_0_0_load_1" [accelerator.cpp:123]   --->   Operation 284 'write' 'write_ln123' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 285 [1/1] (0.00ns)   --->   "%write_ln134 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w1_local_1_1_3_out, i16 %w1_local_1_1_load_1" [accelerator.cpp:134]   --->   Operation 285 'write' 'write_ln134' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 286 [1/1] (0.00ns)   --->   "%write_ln134 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w1_local_1_0_3_out, i16 %w1_local_1_0_load_1" [accelerator.cpp:134]   --->   Operation 286 'write' 'write_ln134' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 287 [1/1] (0.00ns)   --->   "%write_ln134 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w1_local_0_1_3_out, i16 %w1_local_0_1_load_1" [accelerator.cpp:134]   --->   Operation 287 'write' 'write_ln134' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 288 [1/1] (0.00ns)   --->   "%write_ln134 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w1_local_0_0_3_out, i16 %w1_local_0_0_load_1" [accelerator.cpp:134]   --->   Operation 288 'write' 'write_ln134' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 289 [1/1] (0.00ns)   --->   "%write_ln96 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %output_array_inference_3_1_out, i16 %output_array_inference_3_1_load_1" [accelerator.cpp:96]   --->   Operation 289 'write' 'write_ln96' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 290 [1/1] (0.00ns)   --->   "%write_ln96 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %output_array_inference_2_1_out, i16 %output_array_inference_2_1_load_1" [accelerator.cpp:96]   --->   Operation 290 'write' 'write_ln96' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 291 [1/1] (0.00ns)   --->   "%write_ln96 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %output_array_inference_1_1_out, i16 %output_array_inference_1_1_load_1" [accelerator.cpp:96]   --->   Operation 291 'write' 'write_ln96' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 292 [1/1] (0.00ns)   --->   "%write_ln96 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %output_array_inference_0_1_out, i16 %output_array_inference_0_1_load_1" [accelerator.cpp:96]   --->   Operation 292 'write' 'write_ln96' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 293 [1/1] (0.00ns)   --->   "%write_ln96 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %select_ln96_1_out, i16 %select_ln96_1" [accelerator.cpp:96]   --->   Operation 293 'write' 'write_ln96' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 294 [1/1] (0.00ns)   --->   "%write_ln96 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %select_ln96_3_out, i16 %select_ln96_3" [accelerator.cpp:96]   --->   Operation 294 'write' 'write_ln96' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 295 [1/1] (0.00ns)   --->   "%write_ln96 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %select_ln96_5_out, i16 %select_ln96_5" [accelerator.cpp:96]   --->   Operation 295 'write' 'write_ln96' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 296 [1/1] (0.00ns)   --->   "%write_ln96 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %select_ln96_7_out, i16 %select_ln96_7" [accelerator.cpp:96]   --->   Operation 296 'write' 'write_ln96' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 297 [1/1] (0.00ns)   --->   "%write_ln123 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %array_back2_weight_changes_0_0_out, i16 %array_back2_weight_changes_0_0" [accelerator.cpp:123]   --->   Operation 297 'write' 'write_ln123' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 298 [1/1] (0.00ns)   --->   "%write_ln123 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %array_back2_weight_changes_0_1_out, i16 %array_back2_weight_changes_0_1" [accelerator.cpp:123]   --->   Operation 298 'write' 'write_ln123' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 299 [1/1] (0.00ns)   --->   "%write_ln123 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %array_back2_weight_changes_1_0_out, i16 %array_back2_weight_changes_1_0" [accelerator.cpp:123]   --->   Operation 299 'write' 'write_ln123' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 300 [1/1] (0.00ns)   --->   "%write_ln123 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %array_back2_weight_changes_1_1_out, i16 %array_back2_weight_changes_1_1" [accelerator.cpp:123]   --->   Operation 300 'write' 'write_ln123' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 301 [1/1] (0.00ns)   --->   "%write_ln123 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %array_back2_bias_change_0_out, i16 %array_back2_bias_change_0" [accelerator.cpp:123]   --->   Operation 301 'write' 'write_ln123' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 302 [1/1] (0.00ns)   --->   "%write_ln123 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %array_back2_bias_change_1_out, i16 %array_back2_bias_change_1" [accelerator.cpp:123]   --->   Operation 302 'write' 'write_ln123' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 303 [1/1] (0.00ns)   --->   "%write_ln134 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %array_back1_weight_changes_0_0_out, i16 %array_back1_weight_changes_0_0" [accelerator.cpp:134]   --->   Operation 303 'write' 'write_ln134' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 304 [1/1] (0.00ns)   --->   "%write_ln134 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %array_back1_weight_changes_0_1_out, i16 %array_back1_weight_changes_0_1" [accelerator.cpp:134]   --->   Operation 304 'write' 'write_ln134' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 305 [1/1] (0.00ns)   --->   "%write_ln134 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %array_back1_weight_changes_1_0_out, i16 %array_back1_weight_changes_1_0" [accelerator.cpp:134]   --->   Operation 305 'write' 'write_ln134' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 306 [1/1] (0.00ns)   --->   "%write_ln134 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %array_back1_weight_changes_1_1_out, i16 %array_back1_weight_changes_1_1" [accelerator.cpp:134]   --->   Operation 306 'write' 'write_ln134' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 307 [1/1] (0.00ns)   --->   "%write_ln134 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %array_back1_bias_change_0_out, i16 %array_back1_bias_change_0" [accelerator.cpp:134]   --->   Operation 307 'write' 'write_ln134' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 308 [1/1] (0.00ns)   --->   "%write_ln134 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %array_back1_bias_change_1_out, i16 %array_back1_bias_change_1" [accelerator.cpp:134]   --->   Operation 308 'write' 'write_ln134' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_28 : Operation 309 [1/1] (1.02ns)   --->   "%br_ln0 = br void %UnifiedReturnBlock"   --->   Operation 309 'br' 'br_ln0' <Predicate = (!icmp_ln69)> <Delay = 1.02>
ST_28 : Operation 310 [1/1] (0.00ns)   --->   "%UnifiedRetVal = phi i1 1, void %for.body118.for.end312_crit_edge.exitStub, i1 0, void %for.body118.split_ifconv.for.end312_crit_edge.exitStub"   --->   Operation 310 'phi' 'UnifiedRetVal' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 311 [1/1] (0.00ns)   --->   "%ret_ln0 = ret i1 %UnifiedRetVal"   --->   Operation 311 'ret' 'ret_ln0' <Predicate = true> <Delay = 0.00>

State 29 <SV = 2> <Delay = 1.02>
ST_29 : Operation 312 [1/1] (0.00ns)   --->   "%output_array_inference_0_1_load = load i16 %output_array_inference_0_1"   --->   Operation 312 'load' 'output_array_inference_0_1_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 313 [1/1] (0.00ns)   --->   "%output_array_inference_1_1_load = load i16 %output_array_inference_1_1"   --->   Operation 313 'load' 'output_array_inference_1_1_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 314 [1/1] (0.00ns)   --->   "%output_array_inference_2_1_load = load i16 %output_array_inference_2_1"   --->   Operation 314 'load' 'output_array_inference_2_1_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 315 [1/1] (0.00ns)   --->   "%output_array_inference_3_1_load = load i16 %output_array_inference_3_1"   --->   Operation 315 'load' 'output_array_inference_3_1_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 316 [1/1] (0.00ns)   --->   "%w1_local_0_0_load = load i16 %w1_local_0_0"   --->   Operation 316 'load' 'w1_local_0_0_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 317 [1/1] (0.00ns)   --->   "%w1_local_0_1_load = load i16 %w1_local_0_1"   --->   Operation 317 'load' 'w1_local_0_1_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 318 [1/1] (0.00ns)   --->   "%w1_local_1_0_load = load i16 %w1_local_1_0"   --->   Operation 318 'load' 'w1_local_1_0_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 319 [1/1] (0.00ns)   --->   "%w1_local_1_1_load = load i16 %w1_local_1_1"   --->   Operation 319 'load' 'w1_local_1_1_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 320 [1/1] (0.00ns)   --->   "%w2_local_0_0_load = load i16 %w2_local_0_0"   --->   Operation 320 'load' 'w2_local_0_0_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 321 [1/1] (0.00ns)   --->   "%w2_local_0_1_load = load i16 %w2_local_0_1"   --->   Operation 321 'load' 'w2_local_0_1_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 322 [1/1] (0.00ns)   --->   "%w2_local_1_0_load = load i16 %w2_local_1_0"   --->   Operation 322 'load' 'w2_local_1_0_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 323 [1/1] (0.00ns)   --->   "%w2_local_1_1_load = load i16 %w2_local_1_1"   --->   Operation 323 'load' 'w2_local_1_1_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 324 [1/1] (0.00ns)   --->   "%bias_1_local_0_load = load i16 %bias_1_local_0"   --->   Operation 324 'load' 'bias_1_local_0_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 325 [1/1] (0.00ns)   --->   "%bias_1_local_1_load = load i16 %bias_1_local_1"   --->   Operation 325 'load' 'bias_1_local_1_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 326 [1/1] (0.00ns)   --->   "%bias_2_local_0_load = load i16 %bias_2_local_0"   --->   Operation 326 'load' 'bias_2_local_0_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 327 [1/1] (0.00ns)   --->   "%bias_2_local_1_load = load i16 %bias_2_local_1"   --->   Operation 327 'load' 'bias_2_local_1_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 328 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %bias_2_local_1_3_out, i16 %bias_2_local_1_load"   --->   Operation 328 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 329 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %bias_2_local_0_3_out, i16 %bias_2_local_0_load"   --->   Operation 329 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 330 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %bias_1_local_1_3_out, i16 %bias_1_local_1_load"   --->   Operation 330 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 331 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %bias_1_local_0_3_out, i16 %bias_1_local_0_load"   --->   Operation 331 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 332 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w2_local_1_1_3_out, i16 %w2_local_1_1_load"   --->   Operation 332 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 333 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w2_local_1_0_3_out, i16 %w2_local_1_0_load"   --->   Operation 333 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 334 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w2_local_0_1_3_out, i16 %w2_local_0_1_load"   --->   Operation 334 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 335 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w2_local_0_0_3_out, i16 %w2_local_0_0_load"   --->   Operation 335 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 336 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w1_local_1_1_3_out, i16 %w1_local_1_1_load"   --->   Operation 336 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 337 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w1_local_1_0_3_out, i16 %w1_local_1_0_load"   --->   Operation 337 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 338 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w1_local_0_1_3_out, i16 %w1_local_0_1_load"   --->   Operation 338 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 339 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %w1_local_0_0_3_out, i16 %w1_local_0_0_load"   --->   Operation 339 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 340 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %output_array_inference_3_1_out, i16 %output_array_inference_3_1_load"   --->   Operation 340 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 341 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %output_array_inference_2_1_out, i16 %output_array_inference_2_1_load"   --->   Operation 341 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 342 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %output_array_inference_1_1_out, i16 %output_array_inference_1_1_load"   --->   Operation 342 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 343 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %output_array_inference_0_1_out, i16 %output_array_inference_0_1_load"   --->   Operation 343 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 344 [1/1] (1.02ns)   --->   "%br_ln0 = br void %UnifiedReturnBlock"   --->   Operation 344 'br' 'br_ln0' <Predicate = true> <Delay = 1.02>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.029ns
The critical path consists of the following:
	'alloca' operation ('bias_2_local[1]') [67]  (0.000 ns)
	'store' operation ('store_ln0') of variable 'bias_2_local_1_2_read' on local variable 'bias_2_local[1]' [86]  (1.029 ns)

 <State 2>: 5.613ns
The critical path consists of the following:
	'load' operation ('j', accelerator.cpp:72) on local variable 'j' [105]  (0.000 ns)
	'mux' operation ('output_0', accelerator.cpp:33) [130]  (1.066 ns)
	'call' operation ('call_ret1', accelerator.cpp:83) to 'model_array' [134]  (4.450 ns)
	blocking operation 0.0967857 ns on control path)

 <State 3>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret1', accelerator.cpp:83) to 'model_array' [134]  (6.779 ns)

 <State 4>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret1', accelerator.cpp:83) to 'model_array' [134]  (6.779 ns)

 <State 5>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret1', accelerator.cpp:83) to 'model_array' [134]  (6.779 ns)

 <State 6>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret1', accelerator.cpp:83) to 'model_array' [134]  (6.779 ns)

 <State 7>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret1', accelerator.cpp:83) to 'model_array' [134]  (6.779 ns)

 <State 8>: 4.450ns
The critical path consists of the following:
	'load' operation ('w2_local_0_0_load_1', accelerator.cpp:123) on local variable 'w2_local[0][0]' [118]  (0.000 ns)
	'call' operation ('call_ret', accelerator.cpp:88) to 'model_array' [137]  (4.450 ns)

 <State 9>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret', accelerator.cpp:88) to 'model_array' [137]  (6.779 ns)

 <State 10>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret', accelerator.cpp:88) to 'model_array' [137]  (6.779 ns)

 <State 11>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret', accelerator.cpp:88) to 'model_array' [137]  (6.779 ns)

 <State 12>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret', accelerator.cpp:88) to 'model_array' [137]  (6.779 ns)

 <State 13>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret', accelerator.cpp:88) to 'model_array' [137]  (6.779 ns)

 <State 14>: 6.817ns
The critical path consists of the following:
	'sub' operation ('sub_ln93', accelerator.cpp:93) [141]  (1.488 ns)
	'select' operation ('select_ln93', accelerator.cpp:93) [142]  (0.549 ns)
	'cttz' operation ('tmp_2', accelerator.cpp:93) [146]  (0.000 ns)
	'sub' operation ('sub_ln93_1', accelerator.cpp:93) [147]  (1.785 ns)
	'sub' operation ('sub_ln93_4', accelerator.cpp:93) [153]  (1.320 ns)
	'lshr' operation ('lshr_ln93_2', accelerator.cpp:93) [155]  (1.675 ns)

 <State 15>: 4.450ns
The critical path consists of the following:
	'call' operation ('call_ret2', accelerator.cpp:123) to 'model_array' [241]  (4.450 ns)

 <State 16>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret2', accelerator.cpp:123) to 'model_array' [241]  (6.779 ns)

 <State 17>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret2', accelerator.cpp:123) to 'model_array' [241]  (6.779 ns)

 <State 18>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret2', accelerator.cpp:123) to 'model_array' [241]  (6.779 ns)

 <State 19>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret2', accelerator.cpp:123) to 'model_array' [241]  (6.779 ns)

 <State 20>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret2', accelerator.cpp:123) to 'model_array' [241]  (6.779 ns)

 <State 21>: 4.450ns
The critical path consists of the following:
	'call' operation ('call_ret3', accelerator.cpp:134) to 'model_array' [250]  (4.450 ns)

 <State 22>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret3', accelerator.cpp:134) to 'model_array' [250]  (6.779 ns)

 <State 23>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret3', accelerator.cpp:134) to 'model_array' [250]  (6.779 ns)

 <State 24>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret3', accelerator.cpp:134) to 'model_array' [250]  (6.779 ns)

 <State 25>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret3', accelerator.cpp:134) to 'model_array' [250]  (6.779 ns)

 <State 26>: 6.779ns
The critical path consists of the following:
	'call' operation ('call_ret3', accelerator.cpp:134) to 'model_array' [250]  (6.779 ns)

 <State 27>: 1.029ns
The critical path consists of the following:
	'store' operation ('store_ln69', accelerator.cpp:69) of variable 'array_back1.bias_change[1]', accelerator.cpp:134 on local variable 'bias_1_local[1]' [263]  (1.029 ns)

 <State 28>: 1.029ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('UnifiedRetVal') [348]  (1.029 ns)
	'phi' operation ('UnifiedRetVal') [348]  (0.000 ns)

 <State 29>: 1.029ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('UnifiedRetVal') [348]  (1.029 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
