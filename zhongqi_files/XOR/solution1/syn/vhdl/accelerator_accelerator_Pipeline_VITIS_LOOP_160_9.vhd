-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity accelerator_accelerator_Pipeline_VITIS_LOOP_160_9 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bias_1_local_1_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_1_local_0_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_1_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_2_local_0_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_0_1_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_0_0_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_0_1_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_0_0_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_1_1_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    w1_local_1_0_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_1_1_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    w2_local_1_0_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_array_new_b2_1_0459_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_new_b2_1_0459_out_ap_vld : OUT STD_LOGIC;
    output_array_new_b2_0_0458_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_new_b2_0_0458_out_ap_vld : OUT STD_LOGIC;
    output_array_new_b1_1_0457_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_new_b1_1_0457_out_ap_vld : OUT STD_LOGIC;
    output_array_new_b1_0_0456_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_new_b1_0_0456_out_ap_vld : OUT STD_LOGIC;
    output_array_new_w2_1_1_0455_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_new_w2_1_1_0455_out_ap_vld : OUT STD_LOGIC;
    output_array_new_w2_1_0_0454_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_new_w2_1_0_0454_out_ap_vld : OUT STD_LOGIC;
    output_array_new_w2_0_1_0453_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_new_w2_0_1_0453_out_ap_vld : OUT STD_LOGIC;
    output_array_new_w2_0_0_0452_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_new_w2_0_0_0452_out_ap_vld : OUT STD_LOGIC;
    output_array_new_w1_1_1_0451_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_new_w1_1_1_0451_out_ap_vld : OUT STD_LOGIC;
    output_array_new_w1_1_0_0450_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_new_w1_1_0_0450_out_ap_vld : OUT STD_LOGIC;
    output_array_new_w1_0_1_0449_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_new_w1_0_1_0449_out_ap_vld : OUT STD_LOGIC;
    output_array_new_w1_0_0_0448_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_array_new_w1_0_0_0448_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of accelerator_accelerator_Pipeline_VITIS_LOOP_160_9 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln160_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal n_1_fu_76 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln160_fu_298_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_n : STD_LOGIC_VECTOR (1 downto 0);
    signal output_array_new_w1_0_1_2_fu_80 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w1_0_1_4_fu_384_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w1_0_1_3_fu_84 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w1_0_1_fu_376_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w1_1_1_2_fu_88 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w1_1_1_4_fu_416_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w1_1_1_3_fu_92 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w1_1_1_fu_408_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w2_0_1_2_fu_96 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w2_0_1_4_fu_400_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w2_0_1_3_fu_100 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w2_0_1_fu_392_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w2_1_1_2_fu_104 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w2_1_1_4_fu_432_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w2_1_1_3_fu_108 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_w2_1_1_fu_424_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_b1_1_2_fu_112 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_b1_1_4_fu_352_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_b1_1_3_fu_116 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_b1_1_fu_344_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_b2_1_2_fu_120 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_b2_1_4_fu_368_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_b2_1_3_fu_124 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_array_new_b2_1_fu_360_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln161_fu_340_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component accelerator_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component accelerator_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    n_1_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if ((icmp_ln160_fu_292_p2 = ap_const_lv1_0)) then 
                    n_1_fu_76 <= add_ln160_fu_298_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n_1_fu_76 <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (icmp_ln160_fu_292_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                output_array_new_b1_1_2_fu_112 <= output_array_new_b1_1_4_fu_352_p3;
                output_array_new_b1_1_3_fu_116 <= output_array_new_b1_1_fu_344_p3;
                output_array_new_b2_1_2_fu_120 <= output_array_new_b2_1_4_fu_368_p3;
                output_array_new_b2_1_3_fu_124 <= output_array_new_b2_1_fu_360_p3;
                output_array_new_w1_0_1_2_fu_80 <= output_array_new_w1_0_1_4_fu_384_p3;
                output_array_new_w1_0_1_3_fu_84 <= output_array_new_w1_0_1_fu_376_p3;
                output_array_new_w1_1_1_2_fu_88 <= output_array_new_w1_1_1_4_fu_416_p3;
                output_array_new_w1_1_1_3_fu_92 <= output_array_new_w1_1_1_fu_408_p3;
                output_array_new_w2_0_1_2_fu_96 <= output_array_new_w2_0_1_4_fu_400_p3;
                output_array_new_w2_0_1_3_fu_100 <= output_array_new_w2_0_1_fu_392_p3;
                output_array_new_w2_1_1_2_fu_104 <= output_array_new_w2_1_1_4_fu_432_p3;
                output_array_new_w2_1_1_3_fu_108 <= output_array_new_w2_1_1_fu_424_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln160_fu_298_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_n) + unsigned(ap_const_lv2_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, icmp_ln160_fu_292_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln160_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_loop_exit_ready, ap_done_reg, ap_start_int)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_n_assign_proc : process(ap_CS_fsm_state1, n_1_fu_76, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_n <= ap_const_lv2_0;
        else 
            ap_sig_allocacmp_n <= n_1_fu_76;
        end if; 
    end process;

    icmp_ln160_fu_292_p2 <= "1" when (ap_sig_allocacmp_n = ap_const_lv2_2) else "0";
    output_array_new_b1_0_0456_out <= output_array_new_b1_1_2_fu_112;

    output_array_new_b1_0_0456_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln160_fu_292_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln160_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_array_new_b1_0_0456_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_new_b1_0_0456_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_new_b1_1_0457_out <= output_array_new_b1_1_3_fu_116;

    output_array_new_b1_1_0457_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln160_fu_292_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln160_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_array_new_b1_1_0457_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_new_b1_1_0457_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_new_b1_1_4_fu_352_p3 <= 
        output_array_new_b1_1_2_fu_112 when (trunc_ln161_fu_340_p1(0) = '1') else 
        bias_1_local_0_5;
    output_array_new_b1_1_fu_344_p3 <= 
        bias_1_local_1_5 when (trunc_ln161_fu_340_p1(0) = '1') else 
        output_array_new_b1_1_3_fu_116;
    output_array_new_b2_0_0458_out <= output_array_new_b2_1_2_fu_120;

    output_array_new_b2_0_0458_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln160_fu_292_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln160_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_array_new_b2_0_0458_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_new_b2_0_0458_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_new_b2_1_0459_out <= output_array_new_b2_1_3_fu_124;

    output_array_new_b2_1_0459_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln160_fu_292_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln160_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_array_new_b2_1_0459_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_new_b2_1_0459_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_new_b2_1_4_fu_368_p3 <= 
        output_array_new_b2_1_2_fu_120 when (trunc_ln161_fu_340_p1(0) = '1') else 
        bias_2_local_0_5;
    output_array_new_b2_1_fu_360_p3 <= 
        bias_2_local_1_5 when (trunc_ln161_fu_340_p1(0) = '1') else 
        output_array_new_b2_1_3_fu_124;
    output_array_new_w1_0_0_0448_out <= output_array_new_w1_0_1_2_fu_80;

    output_array_new_w1_0_0_0448_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln160_fu_292_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln160_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_array_new_w1_0_0_0448_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_new_w1_0_0_0448_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_new_w1_0_1_0449_out <= output_array_new_w1_0_1_3_fu_84;

    output_array_new_w1_0_1_0449_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln160_fu_292_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln160_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_array_new_w1_0_1_0449_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_new_w1_0_1_0449_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_new_w1_0_1_4_fu_384_p3 <= 
        output_array_new_w1_0_1_2_fu_80 when (trunc_ln161_fu_340_p1(0) = '1') else 
        w1_local_0_0_5;
    output_array_new_w1_0_1_fu_376_p3 <= 
        w1_local_0_1_5 when (trunc_ln161_fu_340_p1(0) = '1') else 
        output_array_new_w1_0_1_3_fu_84;
    output_array_new_w1_1_0_0450_out <= output_array_new_w1_1_1_2_fu_88;

    output_array_new_w1_1_0_0450_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln160_fu_292_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln160_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_array_new_w1_1_0_0450_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_new_w1_1_0_0450_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_new_w1_1_1_0451_out <= output_array_new_w1_1_1_3_fu_92;

    output_array_new_w1_1_1_0451_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln160_fu_292_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln160_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_array_new_w1_1_1_0451_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_new_w1_1_1_0451_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_new_w1_1_1_4_fu_416_p3 <= 
        output_array_new_w1_1_1_2_fu_88 when (trunc_ln161_fu_340_p1(0) = '1') else 
        w1_local_1_0_5;
    output_array_new_w1_1_1_fu_408_p3 <= 
        w1_local_1_1_5 when (trunc_ln161_fu_340_p1(0) = '1') else 
        output_array_new_w1_1_1_3_fu_92;
    output_array_new_w2_0_0_0452_out <= output_array_new_w2_0_1_2_fu_96;

    output_array_new_w2_0_0_0452_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln160_fu_292_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln160_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_array_new_w2_0_0_0452_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_new_w2_0_0_0452_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_new_w2_0_1_0453_out <= output_array_new_w2_0_1_3_fu_100;

    output_array_new_w2_0_1_0453_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln160_fu_292_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln160_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_array_new_w2_0_1_0453_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_new_w2_0_1_0453_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_new_w2_0_1_4_fu_400_p3 <= 
        output_array_new_w2_0_1_2_fu_96 when (trunc_ln161_fu_340_p1(0) = '1') else 
        w2_local_0_0_5;
    output_array_new_w2_0_1_fu_392_p3 <= 
        w2_local_0_1_5 when (trunc_ln161_fu_340_p1(0) = '1') else 
        output_array_new_w2_0_1_3_fu_100;
    output_array_new_w2_1_0_0454_out <= output_array_new_w2_1_1_2_fu_104;

    output_array_new_w2_1_0_0454_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln160_fu_292_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln160_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_array_new_w2_1_0_0454_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_new_w2_1_0_0454_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_new_w2_1_1_0455_out <= output_array_new_w2_1_1_3_fu_108;

    output_array_new_w2_1_1_0455_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln160_fu_292_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln160_fu_292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_array_new_w2_1_1_0455_out_ap_vld <= ap_const_logic_1;
        else 
            output_array_new_w2_1_1_0455_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_array_new_w2_1_1_4_fu_432_p3 <= 
        output_array_new_w2_1_1_2_fu_104 when (trunc_ln161_fu_340_p1(0) = '1') else 
        w2_local_1_0_5;
    output_array_new_w2_1_1_fu_424_p3 <= 
        w2_local_1_1_5 when (trunc_ln161_fu_340_p1(0) = '1') else 
        output_array_new_w2_1_1_3_fu_108;
    trunc_ln161_fu_340_p1 <= ap_sig_allocacmp_n(1 - 1 downto 0);
end behav;
