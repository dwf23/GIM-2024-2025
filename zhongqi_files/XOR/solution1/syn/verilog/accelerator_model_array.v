// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module accelerator_model_array (
        ap_clk,
        ap_rst,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        biases_0_0_val,
        biases_0_1_val,
        output_kmin1_0_0_val,
        output_kmin1_0_1_val,
        delta_k_0_0_val,
        delta_k_0_1_val,
        training_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] p_read10;
input  [15:0] p_read11;
input  [15:0] p_read12;
input  [15:0] p_read13;
input  [15:0] biases_0_0_val;
input  [15:0] biases_0_1_val;
input  [15:0] output_kmin1_0_0_val;
input  [15:0] output_kmin1_0_1_val;
input  [15:0] delta_k_0_0_val;
input  [15:0] delta_k_0_1_val;
input  [15:0] training_val;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;
input   ap_ce;

reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;
reg[15:0] ap_return_3;
reg[15:0] ap_return_4;
reg[15:0] ap_return_5;
reg[15:0] ap_return_6;
reg[15:0] ap_return_7;
reg[15:0] ap_return_8;
reg[15:0] ap_return_9;

reg  signed [15:0] delta_k_0_1_val_read_reg_768;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg  signed [15:0] delta_k_0_0_val_read_reg_774;
reg  signed [15:0] output_kmin1_0_0_val_read_reg_780;
reg   [15:0] biases_0_1_val_read_reg_786;
reg   [15:0] biases_0_1_val_read_reg_786_pp0_iter1_reg;
reg   [15:0] biases_0_1_val_read_reg_786_pp0_iter2_reg;
reg   [15:0] biases_0_0_val_read_reg_792;
reg   [15:0] biases_0_0_val_read_reg_792_pp0_iter1_reg;
reg   [15:0] biases_0_0_val_read_reg_792_pp0_iter2_reg;
reg  signed [15:0] p_read_reg_798;
reg  signed [15:0] p_read_reg_798_pp0_iter1_reg;
reg  signed [15:0] p_read_1_reg_803;
reg  signed [15:0] p_read_1_reg_803_pp0_iter1_reg;
reg  signed [15:0] p_read_2_reg_808;
reg  signed [15:0] p_read_2_reg_808_pp0_iter1_reg;
reg  signed [15:0] p_read101_reg_814;
reg  signed [15:0] p_read101_reg_814_pp0_iter1_reg;
wire   [31:0] mul_ln14_fu_154_p2;
reg  signed [31:0] mul_ln14_reg_820;
wire  signed [27:0] sext_ln12_5_fu_160_p1;
reg  signed [27:0] sext_ln12_5_reg_825;
wire  signed [27:0] sext_ln13_3_fu_168_p1;
wire   [31:0] mul_ln14_2_fu_172_p2;
reg  signed [31:0] mul_ln14_2_reg_837;
wire   [31:0] mul_ln14_4_fu_182_p2;
reg  signed [31:0] mul_ln14_4_reg_842;
wire  signed [27:0] sext_ln12_9_fu_188_p1;
reg  signed [27:0] sext_ln12_9_reg_847;
wire   [31:0] mul_ln14_6_fu_192_p2;
reg  signed [31:0] mul_ln14_6_reg_853;
wire   [0:0] cmp_i_i_fu_198_p2;
reg   [0:0] cmp_i_i_reg_858;
reg   [0:0] cmp_i_i_reg_858_pp0_iter1_reg;
reg   [0:0] cmp_i_i_reg_858_pp0_iter2_reg;
reg   [0:0] cmp_i_i_reg_858_pp0_iter3_reg;
wire   [0:0] icmp_ln19_1_fu_204_p2;
reg   [0:0] icmp_ln19_1_reg_864;
reg   [0:0] icmp_ln19_1_reg_864_pp0_iter1_reg;
reg   [0:0] icmp_ln19_1_reg_864_pp0_iter2_reg;
reg   [0:0] icmp_ln19_1_reg_864_pp0_iter3_reg;
wire   [39:0] mul_ln14_1_fu_126_p2;
reg   [39:0] mul_ln14_1_reg_874;
reg   [15:0] tmp_reg_879;
wire   [39:0] mul_ln14_3_fu_131_p2;
reg   [39:0] mul_ln14_3_reg_884;
wire  signed [27:0] sext_ln12_7_fu_260_p1;
wire  signed [27:0] sext_ln12_8_fu_263_p1;
reg   [15:0] tmp_1_reg_905;
reg   [15:0] tmp_1_reg_905_pp0_iter2_reg;
wire   [39:0] mul_ln14_5_fu_136_p2;
reg   [39:0] mul_ln14_5_reg_910;
reg   [15:0] tmp_2_reg_915;
reg   [15:0] tmp_2_reg_915_pp0_iter2_reg;
reg   [15:0] tmp_3_reg_920;
wire   [39:0] mul_ln14_7_fu_141_p2;
reg   [39:0] mul_ln14_7_reg_925;
wire   [0:0] icmp_ln19_fu_310_p2;
reg   [0:0] icmp_ln19_reg_930;
reg   [0:0] icmp_ln19_reg_930_pp0_iter2_reg;
reg   [0:0] icmp_ln19_reg_930_pp0_iter3_reg;
reg   [15:0] weight_out_weight_change_reg_935;
reg   [15:0] weight_out_weight_change_reg_935_pp0_iter3_reg;
reg   [15:0] weight_out_weight_change_1_reg_945;
reg   [15:0] weight_out_weight_change_1_reg_945_pp0_iter3_reg;
reg   [15:0] weight_out_weight_change_2_reg_950;
reg   [15:0] weight_out_weight_change_2_reg_950_pp0_iter3_reg;
reg   [15:0] weight_out_weight_change_3_reg_960;
reg   [15:0] weight_out_weight_change_3_reg_960_pp0_iter3_reg;
wire  signed [15:0] bias_out_net_sum_fu_426_p2;
reg  signed [15:0] bias_out_net_sum_reg_965;
reg   [0:0] tmp_4_reg_976;
wire  signed [15:0] bias_out_net_sum_1_fu_469_p2;
reg  signed [15:0] bias_out_net_sum_1_reg_991;
reg   [0:0] tmp_5_reg_1002;
wire  signed [9:0] mul_ln14_1_fu_126_p1;
wire    ap_block_pp0_stage0;
wire  signed [9:0] mul_ln14_3_fu_131_p1;
wire  signed [9:0] mul_ln14_5_fu_136_p1;
wire  signed [9:0] mul_ln14_7_fu_141_p1;
wire  signed [15:0] sext_ln12_fu_146_p0;
wire  signed [15:0] sext_ln13_fu_150_p0;
wire  signed [15:0] mul_ln14_fu_154_p0;
wire  signed [31:0] sext_ln12_fu_146_p1;
wire  signed [15:0] mul_ln14_fu_154_p1;
wire  signed [31:0] sext_ln13_fu_150_p1;
wire  signed [15:0] sext_ln12_5_fu_160_p0;
wire  signed [15:0] sext_ln13_1_fu_164_p0;
wire  signed [15:0] sext_ln13_3_fu_168_p0;
wire  signed [15:0] mul_ln14_2_fu_172_p0;
wire  signed [15:0] mul_ln14_2_fu_172_p1;
wire  signed [31:0] sext_ln13_1_fu_164_p1;
wire  signed [15:0] sext_ln12_3_fu_178_p0;
wire  signed [15:0] mul_ln14_4_fu_182_p0;
wire  signed [31:0] sext_ln12_3_fu_178_p1;
wire  signed [15:0] mul_ln14_4_fu_182_p1;
wire  signed [15:0] sext_ln12_9_fu_188_p0;
wire  signed [15:0] mul_ln14_6_fu_192_p0;
wire  signed [15:0] mul_ln14_6_fu_192_p1;
wire  signed [15:0] icmp_ln19_1_fu_204_p0;
wire  signed [15:0] mul_ln12_fu_219_p0;
wire  signed [27:0] sext_ln12_2_fu_213_p1;
wire  signed [15:0] mul_ln12_fu_219_p1;
wire  signed [27:0] sext_ln12_4_fu_216_p1;
wire  signed [15:0] mul_ln13_fu_228_p0;
wire  signed [15:0] mul_ln13_fu_228_p1;
wire  signed [27:0] sext_ln13_2_fu_225_p1;
wire  signed [15:0] mul_ln12_1_fu_238_p0;
wire  signed [15:0] mul_ln12_1_fu_238_p1;
wire   [27:0] mul_ln13_fu_228_p2;
wire   [27:0] mul_ln12_fu_219_p2;
wire  signed [15:0] mul_ln13_2_fu_276_p0;
wire  signed [15:0] mul_ln13_2_fu_276_p1;
wire   [27:0] mul_ln12_1_fu_238_p2;
wire   [27:0] mul_ln13_2_fu_276_p2;
wire   [39:0] shl_ln_fu_315_p3;
wire   [39:0] add_ln14_fu_322_p2;
wire   [39:0] shl_ln14_1_fu_344_p3;
wire   [39:0] add_ln14_1_fu_351_p2;
wire   [39:0] shl_ln14_2_fu_366_p3;
wire   [39:0] add_ln14_3_fu_373_p2;
wire   [39:0] shl_ln14_3_fu_395_p3;
wire   [39:0] add_ln14_4_fu_402_p2;
wire  signed [27:0] weight_out_sum_output_out_fu_417_p1;
wire   [27:0] grp_fu_715_p3;
wire   [15:0] weight_out_sum_output_out_fu_417_p4;
wire  signed [27:0] weight_out_sum_output_out_1_fu_460_p1;
wire   [27:0] grp_fu_724_p3;
wire   [15:0] weight_out_sum_output_out_1_fu_460_p4;
wire  signed [27:0] grp_fu_733_p3;
wire   [9:0] mul_ln22_fu_501_p1;
wire   [25:0] mul_ln22_fu_501_p2;
wire   [13:0] output_fu_507_p4;
wire  signed [15:0] sext_ln22_1_fu_517_p1;
wire  signed [27:0] weight_out_sum_delta_out_fu_527_p1;
wire   [27:0] grp_fu_742_p3;
wire  signed [27:0] weight_out_sum_delta_out_1_fu_536_p1;
wire   [27:0] grp_fu_751_p3;
wire  signed [27:0] grp_fu_759_p3;
wire   [9:0] mul_ln22_1_fu_557_p1;
wire   [25:0] mul_ln22_1_fu_557_p2;
wire   [13:0] output_2_fu_563_p4;
wire  signed [15:0] sext_ln22_3_fu_573_p1;
wire  signed [15:0] weight_out_sum_delta_out_fu_527_p4;
wire   [9:0] mul_ln23_fu_587_p1;
wire   [25:0] mul_ln23_fu_587_p2;
wire   [13:0] error_fu_593_p4;
wire  signed [15:0] sext_ln23_1_fu_603_p1;
wire  signed [15:0] weight_out_sum_delta_out_1_fu_536_p4;
wire   [9:0] mul_ln23_1_fu_618_p1;
wire   [25:0] mul_ln23_1_fu_618_p2;
wire   [13:0] error_2_fu_624_p4;
wire  signed [15:0] sext_ln23_3_fu_634_p1;
wire   [15:0] error_1_fu_607_p3;
wire   [15:0] error_3_fu_638_p3;
wire   [15:0] output_1_fu_521_p3;
wire   [15:0] output_3_fu_577_p3;
wire   [15:0] agg_result_delta_kmin1_0_0_fu_645_p3;
wire   [15:0] agg_result_delta_kmin1_1_0_fu_652_p3;
wire  signed [15:0] grp_fu_715_p1;
wire   [27:0] grp_fu_715_p2;
wire  signed [15:0] grp_fu_724_p1;
wire   [27:0] grp_fu_724_p2;
wire   [8:0] grp_fu_733_p1;
wire  signed [27:0] grp_fu_733_p2;
wire  signed [15:0] grp_fu_742_p0;
wire  signed [15:0] grp_fu_742_p1;
wire   [27:0] grp_fu_742_p2;
wire  signed [15:0] grp_fu_751_p0;
wire  signed [15:0] grp_fu_751_p1;
wire   [27:0] grp_fu_751_p2;
wire   [8:0] grp_fu_759_p1;
wire  signed [27:0] grp_fu_759_p2;
reg    grp_fu_715_ce;
reg    grp_fu_724_ce;
reg    grp_fu_733_ce;
reg    grp_fu_742_ce;
reg    grp_fu_751_ce;
reg    grp_fu_759_ce;
reg    ap_ce_reg;
reg   [15:0] p_read10_int_reg;
reg   [15:0] p_read11_int_reg;
reg  signed [15:0] p_read12_int_reg;
reg  signed [15:0] p_read13_int_reg;
reg   [15:0] biases_0_0_val_int_reg;
reg   [15:0] biases_0_1_val_int_reg;
reg   [15:0] output_kmin1_0_0_val_int_reg;
reg   [15:0] output_kmin1_0_1_val_int_reg;
reg   [15:0] delta_k_0_0_val_int_reg;
reg   [15:0] delta_k_0_1_val_int_reg;
reg   [15:0] training_val_int_reg;
reg   [15:0] ap_return_0_int_reg;
reg   [15:0] ap_return_1_int_reg;
reg   [15:0] ap_return_2_int_reg;
reg   [15:0] ap_return_3_int_reg;
reg   [15:0] ap_return_4_int_reg;
reg   [15:0] ap_return_5_int_reg;
reg   [15:0] ap_return_6_int_reg;
reg   [15:0] ap_return_7_int_reg;
reg   [15:0] ap_return_8_int_reg;
reg   [15:0] ap_return_9_int_reg;

accelerator_mul_32s_10s_40_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 40 ))
mul_32s_10s_40_1_0_U17(
    .din0(mul_ln14_reg_820),
    .din1(mul_ln14_1_fu_126_p1),
    .dout(mul_ln14_1_fu_126_p2)
);

accelerator_mul_32s_10s_40_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 40 ))
mul_32s_10s_40_1_0_U18(
    .din0(mul_ln14_2_reg_837),
    .din1(mul_ln14_3_fu_131_p1),
    .dout(mul_ln14_3_fu_131_p2)
);

accelerator_mul_32s_10s_40_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 40 ))
mul_32s_10s_40_1_0_U19(
    .din0(mul_ln14_4_reg_842),
    .din1(mul_ln14_5_fu_136_p1),
    .dout(mul_ln14_5_fu_136_p2)
);

accelerator_mul_32s_10s_40_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 40 ))
mul_32s_10s_40_1_0_U20(
    .din0(mul_ln14_6_reg_853),
    .din1(mul_ln14_7_fu_141_p1),
    .dout(mul_ln14_7_fu_141_p2)
);

accelerator_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_0_U21(
    .din0(mul_ln14_fu_154_p0),
    .din1(mul_ln14_fu_154_p1),
    .dout(mul_ln14_fu_154_p2)
);

accelerator_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_0_U22(
    .din0(mul_ln14_2_fu_172_p0),
    .din1(mul_ln14_2_fu_172_p1),
    .dout(mul_ln14_2_fu_172_p2)
);

accelerator_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_0_U23(
    .din0(mul_ln14_4_fu_182_p0),
    .din1(mul_ln14_4_fu_182_p1),
    .dout(mul_ln14_4_fu_182_p2)
);

accelerator_mul_16s_16s_32_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16s_16s_32_1_0_U24(
    .din0(mul_ln14_6_fu_192_p0),
    .din1(mul_ln14_6_fu_192_p1),
    .dout(mul_ln14_6_fu_192_p2)
);

accelerator_mul_16s_16s_28_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
mul_16s_16s_28_1_0_U25(
    .din0(mul_ln12_fu_219_p0),
    .din1(mul_ln12_fu_219_p1),
    .dout(mul_ln12_fu_219_p2)
);

accelerator_mul_16s_16s_28_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
mul_16s_16s_28_1_0_U26(
    .din0(mul_ln13_fu_228_p0),
    .din1(mul_ln13_fu_228_p1),
    .dout(mul_ln13_fu_228_p2)
);

accelerator_mul_16s_16s_28_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
mul_16s_16s_28_1_0_U27(
    .din0(mul_ln12_1_fu_238_p0),
    .din1(mul_ln12_1_fu_238_p1),
    .dout(mul_ln12_1_fu_238_p2)
);

accelerator_mul_16s_16s_28_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
mul_16s_16s_28_1_0_U28(
    .din0(mul_ln13_2_fu_276_p0),
    .din1(mul_ln13_2_fu_276_p1),
    .dout(mul_ln13_2_fu_276_p2)
);

accelerator_mul_16s_10ns_26_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
mul_16s_10ns_26_1_0_U29(
    .din0(bias_out_net_sum_reg_965),
    .din1(mul_ln22_fu_501_p1),
    .dout(mul_ln22_fu_501_p2)
);

accelerator_mul_16s_10ns_26_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
mul_16s_10ns_26_1_0_U30(
    .din0(bias_out_net_sum_1_reg_991),
    .din1(mul_ln22_1_fu_557_p1),
    .dout(mul_ln22_1_fu_557_p2)
);

accelerator_mul_16s_10ns_26_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
mul_16s_10ns_26_1_0_U31(
    .din0(weight_out_sum_delta_out_fu_527_p4),
    .din1(mul_ln23_fu_587_p1),
    .dout(mul_ln23_fu_587_p2)
);

accelerator_mul_16s_10ns_26_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
mul_16s_10ns_26_1_0_U32(
    .din0(weight_out_sum_delta_out_1_fu_536_p4),
    .din1(mul_ln23_1_fu_618_p1),
    .dout(mul_ln23_1_fu_618_p2)
);

accelerator_mac_muladd_16s_16s_28ns_28_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
mac_muladd_16s_16s_28ns_28_4_0_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read12_int_reg),
    .din1(grp_fu_715_p1),
    .din2(grp_fu_715_p2),
    .ce(grp_fu_715_ce),
    .dout(grp_fu_715_p3)
);

accelerator_mac_muladd_16s_16s_28ns_28_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
mac_muladd_16s_16s_28ns_28_4_0_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read13_int_reg),
    .din1(grp_fu_724_p1),
    .din2(grp_fu_724_p2),
    .ce(grp_fu_724_ce),
    .dout(grp_fu_724_p3)
);

accelerator_mac_mulsub_16s_9ns_28s_28_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
mac_mulsub_16s_9ns_28s_28_4_0_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(delta_k_0_0_val_read_reg_774),
    .din1(grp_fu_733_p1),
    .din2(grp_fu_733_p2),
    .ce(grp_fu_733_ce),
    .dout(grp_fu_733_p3)
);

accelerator_mac_muladd_16s_16s_28ns_28_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
mac_muladd_16s_16s_28ns_28_4_0_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_742_p0),
    .din1(grp_fu_742_p1),
    .din2(grp_fu_742_p2),
    .ce(grp_fu_742_ce),
    .dout(grp_fu_742_p3)
);

accelerator_mac_muladd_16s_16s_28ns_28_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
mac_muladd_16s_16s_28ns_28_4_0_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_751_p0),
    .din1(grp_fu_751_p1),
    .din2(grp_fu_751_p2),
    .ce(grp_fu_751_ce),
    .dout(grp_fu_751_p3)
);

accelerator_mac_mulsub_16s_9ns_28s_28_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
mac_mulsub_16s_9ns_28s_28_4_0_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(delta_k_0_1_val_read_reg_768),
    .din1(grp_fu_759_p1),
    .din2(grp_fu_759_p2),
    .ce(grp_fu_759_ce),
    .dout(grp_fu_759_p3)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= output_1_fu_521_p3;
        ap_return_1_int_reg <= output_3_fu_577_p3;
        ap_return_2_int_reg <= agg_result_delta_kmin1_0_0_fu_645_p3;
        ap_return_3_int_reg <= agg_result_delta_kmin1_1_0_fu_652_p3;
        ap_return_4_int_reg <= weight_out_weight_change_reg_935_pp0_iter3_reg;
        ap_return_5_int_reg <= weight_out_weight_change_1_reg_945_pp0_iter3_reg;
        ap_return_6_int_reg <= weight_out_weight_change_2_reg_950_pp0_iter3_reg;
        ap_return_7_int_reg <= weight_out_weight_change_3_reg_960_pp0_iter3_reg;
        ap_return_8_int_reg <= {{grp_fu_733_p3[27:12]}};
        ap_return_9_int_reg <= {{grp_fu_759_p3[27:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        bias_out_net_sum_1_reg_991 <= bias_out_net_sum_1_fu_469_p2;
        bias_out_net_sum_reg_965 <= bias_out_net_sum_fu_426_p2;
        biases_0_0_val_read_reg_792 <= biases_0_0_val_int_reg;
        biases_0_0_val_read_reg_792_pp0_iter1_reg <= biases_0_0_val_read_reg_792;
        biases_0_0_val_read_reg_792_pp0_iter2_reg <= biases_0_0_val_read_reg_792_pp0_iter1_reg;
        biases_0_1_val_read_reg_786 <= biases_0_1_val_int_reg;
        biases_0_1_val_read_reg_786_pp0_iter1_reg <= biases_0_1_val_read_reg_786;
        biases_0_1_val_read_reg_786_pp0_iter2_reg <= biases_0_1_val_read_reg_786_pp0_iter1_reg;
        cmp_i_i_reg_858 <= cmp_i_i_fu_198_p2;
        cmp_i_i_reg_858_pp0_iter1_reg <= cmp_i_i_reg_858;
        cmp_i_i_reg_858_pp0_iter2_reg <= cmp_i_i_reg_858_pp0_iter1_reg;
        cmp_i_i_reg_858_pp0_iter3_reg <= cmp_i_i_reg_858_pp0_iter2_reg;
        delta_k_0_0_val_read_reg_774 <= delta_k_0_0_val_int_reg;
        delta_k_0_1_val_read_reg_768 <= delta_k_0_1_val_int_reg;
        icmp_ln19_1_reg_864 <= icmp_ln19_1_fu_204_p2;
        icmp_ln19_1_reg_864_pp0_iter1_reg <= icmp_ln19_1_reg_864;
        icmp_ln19_1_reg_864_pp0_iter2_reg <= icmp_ln19_1_reg_864_pp0_iter1_reg;
        icmp_ln19_1_reg_864_pp0_iter3_reg <= icmp_ln19_1_reg_864_pp0_iter2_reg;
        icmp_ln19_reg_930_pp0_iter2_reg <= icmp_ln19_reg_930;
        icmp_ln19_reg_930_pp0_iter3_reg <= icmp_ln19_reg_930_pp0_iter2_reg;
        mul_ln14_1_reg_874 <= mul_ln14_1_fu_126_p2;
        mul_ln14_2_reg_837 <= mul_ln14_2_fu_172_p2;
        mul_ln14_3_reg_884 <= mul_ln14_3_fu_131_p2;
        mul_ln14_4_reg_842 <= mul_ln14_4_fu_182_p2;
        mul_ln14_5_reg_910 <= mul_ln14_5_fu_136_p2;
        mul_ln14_6_reg_853 <= mul_ln14_6_fu_192_p2;
        mul_ln14_7_reg_925 <= mul_ln14_7_fu_141_p2;
        mul_ln14_reg_820 <= mul_ln14_fu_154_p2;
        output_kmin1_0_0_val_read_reg_780 <= output_kmin1_0_0_val_int_reg;
        p_read101_reg_814 <= p_read10_int_reg;
        p_read101_reg_814_pp0_iter1_reg <= p_read101_reg_814;
        p_read_1_reg_803 <= p_read12_int_reg;
        p_read_1_reg_803_pp0_iter1_reg <= p_read_1_reg_803;
        p_read_2_reg_808 <= p_read11_int_reg;
        p_read_2_reg_808_pp0_iter1_reg <= p_read_2_reg_808;
        p_read_reg_798 <= p_read13_int_reg;
        p_read_reg_798_pp0_iter1_reg <= p_read_reg_798;
        sext_ln12_5_reg_825 <= sext_ln12_5_fu_160_p1;
        sext_ln12_9_reg_847 <= sext_ln12_9_fu_188_p1;
        tmp_1_reg_905_pp0_iter2_reg <= tmp_1_reg_905;
        tmp_2_reg_915_pp0_iter2_reg <= tmp_2_reg_915;
        tmp_3_reg_920 <= {{mul_ln13_2_fu_276_p2[27:12]}};
        tmp_4_reg_976 <= bias_out_net_sum_fu_426_p2[32'd15];
        tmp_5_reg_1002 <= bias_out_net_sum_1_fu_469_p2[32'd15];
        tmp_reg_879 <= {{mul_ln13_fu_228_p2[27:12]}};
        weight_out_weight_change_1_reg_945 <= {{add_ln14_1_fu_351_p2[39:24]}};
        weight_out_weight_change_1_reg_945_pp0_iter3_reg <= weight_out_weight_change_1_reg_945;
        weight_out_weight_change_2_reg_950 <= {{add_ln14_3_fu_373_p2[39:24]}};
        weight_out_weight_change_2_reg_950_pp0_iter3_reg <= weight_out_weight_change_2_reg_950;
        weight_out_weight_change_3_reg_960 <= {{add_ln14_4_fu_402_p2[39:24]}};
        weight_out_weight_change_3_reg_960_pp0_iter3_reg <= weight_out_weight_change_3_reg_960;
        weight_out_weight_change_reg_935 <= {{add_ln14_fu_322_p2[39:24]}};
        weight_out_weight_change_reg_935_pp0_iter3_reg <= weight_out_weight_change_reg_935;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        biases_0_0_val_int_reg <= biases_0_0_val;
        biases_0_1_val_int_reg <= biases_0_1_val;
        delta_k_0_0_val_int_reg <= delta_k_0_0_val;
        delta_k_0_1_val_int_reg <= delta_k_0_1_val;
        output_kmin1_0_0_val_int_reg <= output_kmin1_0_0_val;
        output_kmin1_0_1_val_int_reg <= output_kmin1_0_1_val;
        p_read10_int_reg <= p_read10;
        p_read11_int_reg <= p_read11;
        p_read12_int_reg <= p_read12;
        p_read13_int_reg <= p_read13;
        training_val_int_reg <= training_val;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp_i_i_reg_858 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        icmp_ln19_reg_930 <= icmp_ln19_fu_310_p2;
        tmp_1_reg_905 <= {{mul_ln12_fu_219_p2[27:12]}};
        tmp_2_reg_915 <= {{mul_ln12_1_fu_238_p2[27:12]}};
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = output_1_fu_521_p3;
    end else begin
        ap_return_0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = output_3_fu_577_p3;
    end else begin
        ap_return_1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = agg_result_delta_kmin1_0_0_fu_645_p3;
    end else begin
        ap_return_2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_3 = ap_return_3_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_3 = agg_result_delta_kmin1_1_0_fu_652_p3;
    end else begin
        ap_return_3 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_4 = ap_return_4_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_4 = weight_out_weight_change_reg_935_pp0_iter3_reg;
    end else begin
        ap_return_4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_5 = ap_return_5_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_5 = weight_out_weight_change_1_reg_945_pp0_iter3_reg;
    end else begin
        ap_return_5 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_6 = ap_return_6_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_6 = weight_out_weight_change_2_reg_950_pp0_iter3_reg;
    end else begin
        ap_return_6 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_7 = ap_return_7_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_7 = weight_out_weight_change_3_reg_960_pp0_iter3_reg;
    end else begin
        ap_return_7 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_8 = ap_return_8_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_8 = {{grp_fu_733_p3[27:12]}};
    end else begin
        ap_return_8 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_9 = ap_return_9_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_9 = {{grp_fu_759_p3[27:12]}};
    end else begin
        ap_return_9 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_715_ce = 1'b1;
    end else begin
        grp_fu_715_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_724_ce = 1'b1;
    end else begin
        grp_fu_724_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_733_ce = 1'b1;
    end else begin
        grp_fu_733_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_742_ce = 1'b1;
    end else begin
        grp_fu_742_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_751_ce = 1'b1;
    end else begin
        grp_fu_751_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_759_ce = 1'b1;
    end else begin
        grp_fu_759_ce = 1'b0;
    end
end

assign add_ln14_1_fu_351_p2 = (shl_ln14_1_fu_344_p3 + mul_ln14_3_reg_884);

assign add_ln14_3_fu_373_p2 = (shl_ln14_2_fu_366_p3 + mul_ln14_5_reg_910);

assign add_ln14_4_fu_402_p2 = (shl_ln14_3_fu_395_p3 + mul_ln14_7_reg_925);

assign add_ln14_fu_322_p2 = (shl_ln_fu_315_p3 + mul_ln14_1_reg_874);

assign agg_result_delta_kmin1_0_0_fu_645_p3 = ((cmp_i_i_reg_858_pp0_iter3_reg[0:0] == 1'b1) ? 16'd0 : error_1_fu_607_p3);

assign agg_result_delta_kmin1_1_0_fu_652_p3 = ((cmp_i_i_reg_858_pp0_iter3_reg[0:0] == 1'b1) ? 16'd0 : error_3_fu_638_p3);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign bias_out_net_sum_1_fu_469_p2 = (weight_out_sum_output_out_1_fu_460_p4 + biases_0_1_val_read_reg_786_pp0_iter2_reg);

assign bias_out_net_sum_fu_426_p2 = (weight_out_sum_output_out_fu_417_p4 + biases_0_0_val_read_reg_792_pp0_iter2_reg);

assign cmp_i_i_fu_198_p2 = ((training_val_int_reg == 16'd0) ? 1'b1 : 1'b0);

assign error_1_fu_607_p3 = ((icmp_ln19_reg_930_pp0_iter3_reg[0:0] == 1'b1) ? weight_out_sum_delta_out_fu_527_p4 : sext_ln23_1_fu_603_p1);

assign error_2_fu_624_p4 = {{mul_ln23_1_fu_618_p2[25:12]}};

assign error_3_fu_638_p3 = ((icmp_ln19_1_reg_864_pp0_iter3_reg[0:0] == 1'b1) ? weight_out_sum_delta_out_1_fu_536_p4 : sext_ln23_3_fu_634_p1);

assign error_fu_593_p4 = {{mul_ln23_fu_587_p2[25:12]}};

assign grp_fu_715_p1 = sext_ln13_3_fu_168_p1;

assign grp_fu_715_p2 = {{tmp_reg_879}, {12'd0}};

assign grp_fu_724_p1 = sext_ln13_3_fu_168_p1;

assign grp_fu_724_p2 = {{tmp_3_reg_920}, {12'd0}};

assign grp_fu_733_p1 = 26'd409;

assign grp_fu_733_p2 = {{biases_0_0_val_read_reg_792_pp0_iter2_reg}, {12'd0}};

assign grp_fu_742_p0 = sext_ln12_7_fu_260_p1;

assign grp_fu_742_p1 = sext_ln12_8_fu_263_p1;

assign grp_fu_742_p2 = {{tmp_1_reg_905_pp0_iter2_reg}, {12'd0}};

assign grp_fu_751_p0 = sext_ln12_9_reg_847;

assign grp_fu_751_p1 = sext_ln12_8_fu_263_p1;

assign grp_fu_751_p2 = {{tmp_2_reg_915_pp0_iter2_reg}, {12'd0}};

assign grp_fu_759_p1 = 26'd409;

assign grp_fu_759_p2 = {{biases_0_1_val_read_reg_786_pp0_iter2_reg}, {12'd0}};

assign icmp_ln19_1_fu_204_p0 = output_kmin1_0_1_val_int_reg;

assign icmp_ln19_1_fu_204_p2 = (($signed(icmp_ln19_1_fu_204_p0) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_310_p2 = (($signed(output_kmin1_0_0_val_read_reg_780) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign mul_ln12_1_fu_238_p0 = sext_ln12_5_reg_825;

assign mul_ln12_1_fu_238_p1 = sext_ln12_4_fu_216_p1;

assign mul_ln12_fu_219_p0 = sext_ln12_2_fu_213_p1;

assign mul_ln12_fu_219_p1 = sext_ln12_4_fu_216_p1;

assign mul_ln13_2_fu_276_p0 = sext_ln12_7_fu_260_p1;

assign mul_ln13_2_fu_276_p1 = sext_ln13_2_fu_225_p1;

assign mul_ln13_fu_228_p0 = sext_ln12_2_fu_213_p1;

assign mul_ln13_fu_228_p1 = sext_ln13_2_fu_225_p1;

assign mul_ln14_1_fu_126_p1 = 40'd1099511627367;

assign mul_ln14_2_fu_172_p0 = sext_ln12_fu_146_p1;

assign mul_ln14_2_fu_172_p1 = sext_ln13_1_fu_164_p1;

assign mul_ln14_3_fu_131_p1 = 40'd1099511627367;

assign mul_ln14_4_fu_182_p0 = sext_ln12_3_fu_178_p1;

assign mul_ln14_4_fu_182_p1 = sext_ln13_fu_150_p1;

assign mul_ln14_5_fu_136_p1 = 40'd1099511627367;

assign mul_ln14_6_fu_192_p0 = sext_ln12_3_fu_178_p1;

assign mul_ln14_6_fu_192_p1 = sext_ln13_1_fu_164_p1;

assign mul_ln14_7_fu_141_p1 = 40'd1099511627367;

assign mul_ln14_fu_154_p0 = sext_ln12_fu_146_p1;

assign mul_ln14_fu_154_p1 = sext_ln13_fu_150_p1;

assign mul_ln22_1_fu_557_p1 = 26'd409;

assign mul_ln22_fu_501_p1 = 26'd409;

assign mul_ln23_1_fu_618_p1 = 26'd409;

assign mul_ln23_fu_587_p1 = 26'd409;

assign output_1_fu_521_p3 = ((tmp_4_reg_976[0:0] == 1'b1) ? sext_ln22_1_fu_517_p1 : bias_out_net_sum_reg_965);

assign output_2_fu_563_p4 = {{mul_ln22_1_fu_557_p2[25:12]}};

assign output_3_fu_577_p3 = ((tmp_5_reg_1002[0:0] == 1'b1) ? sext_ln22_3_fu_573_p1 : bias_out_net_sum_1_reg_991);

assign output_fu_507_p4 = {{mul_ln22_fu_501_p2[25:12]}};

assign sext_ln12_2_fu_213_p1 = p_read101_reg_814;

assign sext_ln12_3_fu_178_p0 = delta_k_0_1_val_int_reg;

assign sext_ln12_3_fu_178_p1 = sext_ln12_3_fu_178_p0;

assign sext_ln12_4_fu_216_p1 = delta_k_0_0_val_read_reg_774;

assign sext_ln12_5_fu_160_p0 = p_read12_int_reg;

assign sext_ln12_5_fu_160_p1 = sext_ln12_5_fu_160_p0;

assign sext_ln12_7_fu_260_p1 = p_read_2_reg_808;

assign sext_ln12_8_fu_263_p1 = delta_k_0_1_val_read_reg_768;

assign sext_ln12_9_fu_188_p0 = p_read13_int_reg;

assign sext_ln12_9_fu_188_p1 = sext_ln12_9_fu_188_p0;

assign sext_ln12_fu_146_p0 = delta_k_0_0_val_int_reg;

assign sext_ln12_fu_146_p1 = sext_ln12_fu_146_p0;

assign sext_ln13_1_fu_164_p0 = output_kmin1_0_1_val_int_reg;

assign sext_ln13_1_fu_164_p1 = sext_ln13_1_fu_164_p0;

assign sext_ln13_2_fu_225_p1 = output_kmin1_0_0_val_read_reg_780;

assign sext_ln13_3_fu_168_p0 = output_kmin1_0_1_val_int_reg;

assign sext_ln13_3_fu_168_p1 = sext_ln13_3_fu_168_p0;

assign sext_ln13_fu_150_p0 = output_kmin1_0_0_val_int_reg;

assign sext_ln13_fu_150_p1 = sext_ln13_fu_150_p0;

assign sext_ln22_1_fu_517_p1 = $signed(output_fu_507_p4);

assign sext_ln22_3_fu_573_p1 = $signed(output_2_fu_563_p4);

assign sext_ln23_1_fu_603_p1 = $signed(error_fu_593_p4);

assign sext_ln23_3_fu_634_p1 = $signed(error_2_fu_624_p4);

assign shl_ln14_1_fu_344_p3 = {{p_read_1_reg_803_pp0_iter1_reg}, {24'd0}};

assign shl_ln14_2_fu_366_p3 = {{p_read_2_reg_808_pp0_iter1_reg}, {24'd0}};

assign shl_ln14_3_fu_395_p3 = {{p_read_reg_798_pp0_iter1_reg}, {24'd0}};

assign shl_ln_fu_315_p3 = {{p_read101_reg_814_pp0_iter1_reg}, {24'd0}};

assign weight_out_sum_delta_out_1_fu_536_p1 = grp_fu_751_p3;

assign weight_out_sum_delta_out_1_fu_536_p4 = {{weight_out_sum_delta_out_1_fu_536_p1[27:12]}};

assign weight_out_sum_delta_out_fu_527_p1 = grp_fu_742_p3;

assign weight_out_sum_delta_out_fu_527_p4 = {{weight_out_sum_delta_out_fu_527_p1[27:12]}};

assign weight_out_sum_output_out_1_fu_460_p1 = grp_fu_724_p3;

assign weight_out_sum_output_out_1_fu_460_p4 = {{weight_out_sum_output_out_1_fu_460_p1[27:12]}};

assign weight_out_sum_output_out_fu_417_p1 = grp_fu_715_p3;

assign weight_out_sum_output_out_fu_417_p4 = {{weight_out_sum_output_out_fu_417_p1[27:12]}};

endmodule //accelerator_model_array
