// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module accelerator_accelerator_Pipeline_VITIS_LOOP_65_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        w2_local_1_reload,
        w2_local_reload,
        w2_local_3_reload,
        w2_local_2_reload,
        w1_local_1_reload,
        w1_local_reload,
        w1_local_3_reload,
        w1_local_2_reload,
        bias_2_local_idx4_promoted151_reload,
        bias_2_local_idx_promoted149_reload,
        bias_1_local_idx1_promoted147_reload,
        bias_1_local_idx_promoted145_reload,
        training,
        cmp_i_i,
        w2_local_3_0_out,
        w2_local_3_0_out_ap_vld,
        w2_local_2_0_out,
        w2_local_2_0_out_ap_vld,
        w2_local_1_0_out,
        w2_local_1_0_out_ap_vld,
        w2_local_0_out,
        w2_local_0_out_ap_vld,
        w1_local_3_0_out,
        w1_local_3_0_out_ap_vld,
        w1_local_2_0_out,
        w1_local_2_0_out_ap_vld,
        w1_local_1_0_out,
        w1_local_1_0_out_ap_vld,
        w1_local_0_out,
        w1_local_0_out_ap_vld,
        bias_2_local_idx4_val110_out,
        bias_2_local_idx4_val110_out_ap_vld,
        bias_2_local_idx_val109_out,
        bias_2_local_idx_val109_out_ap_vld,
        bias_1_local_idx1_val108_out,
        bias_1_local_idx1_val108_out_ap_vld,
        bias_1_local_idx_val107_out,
        bias_1_local_idx_val107_out_ap_vld,
        output_array_inference_3_out,
        output_array_inference_3_out_ap_vld,
        output_array_inference_2_out,
        output_array_inference_2_out_ap_vld,
        output_array_inference_1_out,
        output_array_inference_1_out_ap_vld,
        output_array_inference_out,
        output_array_inference_out_ap_vld,
        output_array_inference_4_out,
        output_array_inference_4_out_ap_vld,
        output_array_inference_5_out,
        output_array_inference_5_out_ap_vld,
        output_array_inference_6_out,
        output_array_inference_6_out_ap_vld,
        output_array_inference_7_out,
        output_array_inference_7_out_ap_vld,
        array_back2_weight_changes_24_out,
        array_back2_weight_changes_24_out_ap_vld,
        array_back2_weight_changes_25_out,
        array_back2_weight_changes_25_out_ap_vld,
        array_back2_weight_changes_26_out,
        array_back2_weight_changes_26_out_ap_vld,
        array_back2_weight_changes_27_out,
        array_back2_weight_changes_27_out_ap_vld,
        array_back2_bias_change_8_out,
        array_back2_bias_change_8_out_ap_vld,
        array_back2_bias_change_9_out,
        array_back2_bias_change_9_out_ap_vld,
        array_back1_weight_changes_24_out,
        array_back1_weight_changes_24_out_ap_vld,
        array_back1_weight_changes_25_out,
        array_back1_weight_changes_25_out_ap_vld,
        array_back1_weight_changes_26_out,
        array_back1_weight_changes_26_out_ap_vld,
        array_back1_weight_changes_27_out,
        array_back1_weight_changes_27_out_ap_vld,
        array_back1_bias_change_8_out,
        array_back1_bias_change_8_out_ap_vld,
        array_back1_bias_change_9_out,
        array_back1_bias_change_9_out_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_state1 = 85'd1;
parameter    ap_ST_fsm_state2 = 85'd2;
parameter    ap_ST_fsm_state3 = 85'd4;
parameter    ap_ST_fsm_state4 = 85'd8;
parameter    ap_ST_fsm_state5 = 85'd16;
parameter    ap_ST_fsm_state6 = 85'd32;
parameter    ap_ST_fsm_state7 = 85'd64;
parameter    ap_ST_fsm_state8 = 85'd128;
parameter    ap_ST_fsm_state9 = 85'd256;
parameter    ap_ST_fsm_state10 = 85'd512;
parameter    ap_ST_fsm_state11 = 85'd1024;
parameter    ap_ST_fsm_state12 = 85'd2048;
parameter    ap_ST_fsm_state13 = 85'd4096;
parameter    ap_ST_fsm_state14 = 85'd8192;
parameter    ap_ST_fsm_state15 = 85'd16384;
parameter    ap_ST_fsm_state16 = 85'd32768;
parameter    ap_ST_fsm_state17 = 85'd65536;
parameter    ap_ST_fsm_state18 = 85'd131072;
parameter    ap_ST_fsm_state19 = 85'd262144;
parameter    ap_ST_fsm_state20 = 85'd524288;
parameter    ap_ST_fsm_state21 = 85'd1048576;
parameter    ap_ST_fsm_state22 = 85'd2097152;
parameter    ap_ST_fsm_state23 = 85'd4194304;
parameter    ap_ST_fsm_state24 = 85'd8388608;
parameter    ap_ST_fsm_state25 = 85'd16777216;
parameter    ap_ST_fsm_state26 = 85'd33554432;
parameter    ap_ST_fsm_state27 = 85'd67108864;
parameter    ap_ST_fsm_state28 = 85'd134217728;
parameter    ap_ST_fsm_state29 = 85'd268435456;
parameter    ap_ST_fsm_state30 = 85'd536870912;
parameter    ap_ST_fsm_state31 = 85'd1073741824;
parameter    ap_ST_fsm_state32 = 85'd2147483648;
parameter    ap_ST_fsm_state33 = 85'd4294967296;
parameter    ap_ST_fsm_state34 = 85'd8589934592;
parameter    ap_ST_fsm_state35 = 85'd17179869184;
parameter    ap_ST_fsm_state36 = 85'd34359738368;
parameter    ap_ST_fsm_state37 = 85'd68719476736;
parameter    ap_ST_fsm_state38 = 85'd137438953472;
parameter    ap_ST_fsm_state39 = 85'd274877906944;
parameter    ap_ST_fsm_state40 = 85'd549755813888;
parameter    ap_ST_fsm_state41 = 85'd1099511627776;
parameter    ap_ST_fsm_state42 = 85'd2199023255552;
parameter    ap_ST_fsm_state43 = 85'd4398046511104;
parameter    ap_ST_fsm_state44 = 85'd8796093022208;
parameter    ap_ST_fsm_state45 = 85'd17592186044416;
parameter    ap_ST_fsm_state46 = 85'd35184372088832;
parameter    ap_ST_fsm_state47 = 85'd70368744177664;
parameter    ap_ST_fsm_state48 = 85'd140737488355328;
parameter    ap_ST_fsm_state49 = 85'd281474976710656;
parameter    ap_ST_fsm_state50 = 85'd562949953421312;
parameter    ap_ST_fsm_state51 = 85'd1125899906842624;
parameter    ap_ST_fsm_state52 = 85'd2251799813685248;
parameter    ap_ST_fsm_state53 = 85'd4503599627370496;
parameter    ap_ST_fsm_state54 = 85'd9007199254740992;
parameter    ap_ST_fsm_state55 = 85'd18014398509481984;
parameter    ap_ST_fsm_state56 = 85'd36028797018963968;
parameter    ap_ST_fsm_state57 = 85'd72057594037927936;
parameter    ap_ST_fsm_state58 = 85'd144115188075855872;
parameter    ap_ST_fsm_state59 = 85'd288230376151711744;
parameter    ap_ST_fsm_state60 = 85'd576460752303423488;
parameter    ap_ST_fsm_state61 = 85'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 85'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 85'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 85'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 85'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 85'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 85'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 85'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 85'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 85'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 85'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 85'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 85'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 85'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 85'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 85'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 85'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 85'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 85'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 85'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 85'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 85'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 85'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 85'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 85'd19342813113834066795298816;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] w2_local_1_reload;
input  [15:0] w2_local_reload;
input  [15:0] w2_local_3_reload;
input  [15:0] w2_local_2_reload;
input  [15:0] w1_local_1_reload;
input  [15:0] w1_local_reload;
input  [15:0] w1_local_3_reload;
input  [15:0] w1_local_2_reload;
input  [15:0] bias_2_local_idx4_promoted151_reload;
input  [15:0] bias_2_local_idx_promoted149_reload;
input  [15:0] bias_1_local_idx1_promoted147_reload;
input  [15:0] bias_1_local_idx_promoted145_reload;
input  [15:0] training;
input  [0:0] cmp_i_i;
output  [15:0] w2_local_3_0_out;
output   w2_local_3_0_out_ap_vld;
output  [15:0] w2_local_2_0_out;
output   w2_local_2_0_out_ap_vld;
output  [15:0] w2_local_1_0_out;
output   w2_local_1_0_out_ap_vld;
output  [15:0] w2_local_0_out;
output   w2_local_0_out_ap_vld;
output  [15:0] w1_local_3_0_out;
output   w1_local_3_0_out_ap_vld;
output  [15:0] w1_local_2_0_out;
output   w1_local_2_0_out_ap_vld;
output  [15:0] w1_local_1_0_out;
output   w1_local_1_0_out_ap_vld;
output  [15:0] w1_local_0_out;
output   w1_local_0_out_ap_vld;
output  [15:0] bias_2_local_idx4_val110_out;
output   bias_2_local_idx4_val110_out_ap_vld;
output  [15:0] bias_2_local_idx_val109_out;
output   bias_2_local_idx_val109_out_ap_vld;
output  [15:0] bias_1_local_idx1_val108_out;
output   bias_1_local_idx1_val108_out_ap_vld;
output  [15:0] bias_1_local_idx_val107_out;
output   bias_1_local_idx_val107_out_ap_vld;
output  [15:0] output_array_inference_3_out;
output   output_array_inference_3_out_ap_vld;
output  [15:0] output_array_inference_2_out;
output   output_array_inference_2_out_ap_vld;
output  [15:0] output_array_inference_1_out;
output   output_array_inference_1_out_ap_vld;
output  [15:0] output_array_inference_out;
output   output_array_inference_out_ap_vld;
output  [15:0] output_array_inference_4_out;
output   output_array_inference_4_out_ap_vld;
output  [15:0] output_array_inference_5_out;
output   output_array_inference_5_out_ap_vld;
output  [15:0] output_array_inference_6_out;
output   output_array_inference_6_out_ap_vld;
output  [15:0] output_array_inference_7_out;
output   output_array_inference_7_out_ap_vld;
output  [15:0] array_back2_weight_changes_24_out;
output   array_back2_weight_changes_24_out_ap_vld;
output  [15:0] array_back2_weight_changes_25_out;
output   array_back2_weight_changes_25_out_ap_vld;
output  [15:0] array_back2_weight_changes_26_out;
output   array_back2_weight_changes_26_out_ap_vld;
output  [15:0] array_back2_weight_changes_27_out;
output   array_back2_weight_changes_27_out_ap_vld;
output  [15:0] array_back2_bias_change_8_out;
output   array_back2_bias_change_8_out_ap_vld;
output  [15:0] array_back2_bias_change_9_out;
output   array_back2_bias_change_9_out_ap_vld;
output  [15:0] array_back1_weight_changes_24_out;
output   array_back1_weight_changes_24_out_ap_vld;
output  [15:0] array_back1_weight_changes_25_out;
output   array_back1_weight_changes_25_out_ap_vld;
output  [15:0] array_back1_weight_changes_26_out;
output   array_back1_weight_changes_26_out_ap_vld;
output  [15:0] array_back1_weight_changes_27_out;
output   array_back1_weight_changes_27_out_ap_vld;
output  [15:0] array_back1_bias_change_8_out;
output   array_back1_bias_change_8_out_ap_vld;
output  [15:0] array_back1_bias_change_9_out;
output   array_back1_bias_change_9_out_ap_vld;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] w2_local_3_0_out;
reg w2_local_3_0_out_ap_vld;
reg[15:0] w2_local_2_0_out;
reg w2_local_2_0_out_ap_vld;
reg[15:0] w2_local_1_0_out;
reg w2_local_1_0_out_ap_vld;
reg[15:0] w2_local_0_out;
reg w2_local_0_out_ap_vld;
reg[15:0] w1_local_3_0_out;
reg w1_local_3_0_out_ap_vld;
reg[15:0] w1_local_2_0_out;
reg w1_local_2_0_out_ap_vld;
reg[15:0] w1_local_1_0_out;
reg w1_local_1_0_out_ap_vld;
reg[15:0] w1_local_0_out;
reg w1_local_0_out_ap_vld;
reg[15:0] bias_2_local_idx4_val110_out;
reg bias_2_local_idx4_val110_out_ap_vld;
reg[15:0] bias_2_local_idx_val109_out;
reg bias_2_local_idx_val109_out_ap_vld;
reg[15:0] bias_1_local_idx1_val108_out;
reg bias_1_local_idx1_val108_out_ap_vld;
reg[15:0] bias_1_local_idx_val107_out;
reg bias_1_local_idx_val107_out_ap_vld;
reg[15:0] output_array_inference_3_out;
reg output_array_inference_3_out_ap_vld;
reg[15:0] output_array_inference_2_out;
reg output_array_inference_2_out_ap_vld;
reg[15:0] output_array_inference_1_out;
reg output_array_inference_1_out_ap_vld;
reg[15:0] output_array_inference_out;
reg output_array_inference_out_ap_vld;
reg output_array_inference_4_out_ap_vld;
reg output_array_inference_5_out_ap_vld;
reg output_array_inference_6_out_ap_vld;
reg output_array_inference_7_out_ap_vld;
reg array_back2_weight_changes_24_out_ap_vld;
reg array_back2_weight_changes_25_out_ap_vld;
reg array_back2_weight_changes_26_out_ap_vld;
reg array_back2_weight_changes_27_out_ap_vld;
reg array_back2_bias_change_8_out_ap_vld;
reg array_back2_bias_change_9_out_ap_vld;
reg array_back1_weight_changes_24_out_ap_vld;
reg array_back1_weight_changes_25_out_ap_vld;
reg array_back1_weight_changes_26_out_ap_vld;
reg array_back1_weight_changes_27_out_ap_vld;
reg array_back1_bias_change_8_out_ap_vld;
reg array_back1_bias_change_9_out_ap_vld;
reg[0:0] ap_return;

(* fsm_encoding = "none" *) reg   [84:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] reg_731;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state68;
reg   [15:0] reg_736;
wire   [15:0] grp_fu_652_p3;
reg   [15:0] reg_741;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state78;
reg   [15:0] reg_750;
reg   [15:0] reg_756;
reg   [15:0] reg_762;
reg   [15:0] reg_768;
reg   [15:0] reg_774;
reg   [15:0] reg_780;
reg   [15:0] reg_786;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state83;
reg   [15:0] reg_792;
reg   [15:0] reg_798;
reg   [15:0] reg_804;
reg   [15:0] reg_810;
reg   [15:0] reg_816;
wire   [0:0] cmp_i_i_read_read_fu_276_p2;
wire   [0:0] icmp_ln65_fu_890_p2;
reg   [0:0] icmp_ln65_reg_2648;
wire    ap_CS_fsm_state2;
wire   [8:0] i_2_fu_896_p2;
reg   [8:0] i_2_reg_2652;
reg   [15:0] bias_1_local_idx_val107_load_1_reg_2657;
wire    ap_CS_fsm_state3;
reg   [15:0] bias_1_local_idx1_val108_load_1_reg_2663;
reg   [15:0] w1_local_0_load_1_reg_2669;
reg   [15:0] w1_local_1_0_load_1_reg_2675;
reg   [15:0] w1_local_2_0_load_1_reg_2681;
reg   [15:0] w1_local_3_0_load_1_reg_2687;
reg   [15:0] bias_2_local_idx_val109_load_1_reg_2693;
reg   [15:0] bias_2_local_idx4_val110_load_1_reg_2699;
reg   [15:0] w2_local_0_load_1_reg_2705;
reg   [15:0] w2_local_1_0_load_1_reg_2711;
reg   [15:0] w2_local_2_0_load_1_reg_2717;
reg   [15:0] w2_local_3_0_load_1_reg_2723;
wire   [0:0] grp_fu_632_p2;
reg   [0:0] icmp_ln94_reg_2729;
wire   [0:0] grp_fu_638_p3;
reg   [0:0] tmp_reg_2735;
wire   [10:0] trunc_ln94_fu_974_p1;
reg   [10:0] trunc_ln94_reg_2740;
wire   [31:0] sub_ln94_1_fu_978_p2;
reg   [31:0] sub_ln94_1_reg_2745;
wire   [1:0] or_ln_fu_1078_p3;
reg   [1:0] or_ln_reg_2751;
wire   [0:0] icmp_ln94_3_fu_1086_p2;
reg   [0:0] icmp_ln94_3_reg_2756;
wire   [63:0] zext_ln94_fu_1105_p1;
reg   [63:0] zext_ln94_reg_2761;
wire    ap_CS_fsm_state14;
wire   [63:0] lshr_ln94_fu_1118_p2;
reg   [63:0] lshr_ln94_reg_2766;
wire   [63:0] bitcast_ln748_fu_1213_p1;
reg   [63:0] bitcast_ln748_reg_2771;
wire    ap_CS_fsm_state15;
wire   [0:0] or_ln94_7_fu_1240_p2;
reg   [0:0] or_ln94_7_reg_2776;
wire   [0:0] grp_fu_617_p2;
reg   [0:0] tmp_7_reg_2782;
reg   [0:0] tmp_8_reg_2787;
wire    ap_CS_fsm_state16;
reg   [0:0] icmp_ln94_5_reg_2792;
reg   [0:0] tmp_13_reg_2798;
wire   [10:0] trunc_ln94_4_fu_1266_p1;
reg   [10:0] trunc_ln94_4_reg_2803;
wire   [31:0] sub_ln94_5_fu_1270_p2;
reg   [31:0] sub_ln94_5_reg_2808;
wire   [1:0] or_ln94_1_fu_1370_p3;
reg   [1:0] or_ln94_1_reg_2814;
wire   [0:0] icmp_ln94_9_fu_1378_p2;
reg   [0:0] icmp_ln94_9_reg_2819;
wire   [63:0] zext_ln94_4_fu_1384_p1;
reg   [63:0] zext_ln94_4_reg_2824;
wire    ap_CS_fsm_state34;
wire   [63:0] lshr_ln94_2_fu_1397_p2;
reg   [63:0] lshr_ln94_2_reg_2829;
wire   [63:0] bitcast_ln748_1_fu_1492_p1;
reg   [63:0] bitcast_ln748_1_reg_2834;
wire    ap_CS_fsm_state35;
wire   [0:0] or_ln94_8_fu_1519_p2;
reg   [0:0] or_ln94_8_reg_2839;
reg   [0:0] tmp_17_reg_2845;
reg   [0:0] tmp_18_reg_2850;
wire    ap_CS_fsm_state36;
reg   [0:0] icmp_ln94_10_reg_2855;
reg   [0:0] tmp_24_reg_2861;
wire   [10:0] trunc_ln94_8_fu_1545_p1;
reg   [10:0] trunc_ln94_8_reg_2866;
wire   [31:0] sub_ln94_9_fu_1549_p2;
reg   [31:0] sub_ln94_9_reg_2871;
wire   [1:0] or_ln94_2_fu_1649_p3;
reg   [1:0] or_ln94_2_reg_2877;
wire   [0:0] icmp_ln94_14_fu_1657_p2;
reg   [0:0] icmp_ln94_14_reg_2882;
wire   [63:0] zext_ln94_8_fu_1663_p1;
reg   [63:0] zext_ln94_8_reg_2887;
wire    ap_CS_fsm_state54;
wire   [63:0] lshr_ln94_4_fu_1676_p2;
reg   [63:0] lshr_ln94_4_reg_2892;
wire   [63:0] bitcast_ln748_2_fu_1771_p1;
reg   [63:0] bitcast_ln748_2_reg_2897;
wire    ap_CS_fsm_state55;
wire   [0:0] or_ln94_9_fu_1798_p2;
reg   [0:0] or_ln94_9_reg_2902;
reg   [0:0] tmp_27_reg_2908;
reg   [0:0] tmp_28_reg_2913;
wire    ap_CS_fsm_state56;
reg   [0:0] icmp_ln94_15_reg_2918;
reg   [0:0] tmp_35_reg_2924;
wire   [10:0] trunc_ln94_10_fu_1828_p1;
reg   [10:0] trunc_ln94_10_reg_2929;
wire   [31:0] sub_ln94_13_fu_1832_p2;
reg   [31:0] sub_ln94_13_reg_2934;
wire   [1:0] or_ln94_3_fu_1932_p3;
reg   [1:0] or_ln94_3_reg_2940;
wire   [0:0] icmp_ln94_19_fu_1940_p2;
reg   [0:0] icmp_ln94_19_reg_2945;
wire   [63:0] zext_ln94_12_fu_1959_p1;
reg   [63:0] zext_ln94_12_reg_2950;
wire    ap_CS_fsm_state74;
wire   [63:0] lshr_ln94_6_fu_1972_p2;
reg   [63:0] lshr_ln94_6_reg_2955;
wire   [63:0] bitcast_ln748_3_fu_2067_p1;
reg   [63:0] bitcast_ln748_3_reg_2960;
wire    ap_CS_fsm_state75;
wire   [0:0] or_ln94_10_fu_2094_p2;
reg   [0:0] or_ln94_10_reg_2965;
reg   [0:0] tmp_37_reg_2971;
reg   [0:0] tmp_38_reg_2976;
wire    ap_CS_fsm_state76;
reg   [15:0] output_array_inference_load_1_reg_2981;
reg   [15:0] output_array_inference_1_load_1_reg_2986;
reg   [15:0] output_array_inference_2_load_1_reg_2991;
reg   [15:0] output_array_inference_3_load_1_reg_2996;
wire   [15:0] output_array_inference_4_fu_2154_p9;
reg   [15:0] output_array_inference_4_reg_3001;
wire   [15:0] output_array_inference_5_fu_2216_p9;
reg   [15:0] output_array_inference_5_reg_3006;
wire   [15:0] output_array_inference_6_fu_2278_p9;
reg   [15:0] output_array_inference_6_reg_3011;
wire   [15:0] output_array_inference_7_fu_2340_p9;
reg   [15:0] output_array_inference_7_reg_3016;
wire    grp_model_array_fu_596_ap_start;
wire    grp_model_array_fu_596_ap_done;
wire    grp_model_array_fu_596_ap_idle;
wire    grp_model_array_fu_596_ap_ready;
reg   [15:0] grp_model_array_fu_596_p_read10;
reg   [15:0] grp_model_array_fu_596_p_read29;
reg   [15:0] grp_model_array_fu_596_p_read30;
reg   [15:0] grp_model_array_fu_596_p_read31;
reg   [15:0] grp_model_array_fu_596_biases_0_0_val;
reg   [15:0] grp_model_array_fu_596_biases_0_1_val;
reg   [15:0] grp_model_array_fu_596_output_kmin1_0_0_val;
reg   [15:0] grp_model_array_fu_596_output_kmin1_0_1_val;
reg   [15:0] grp_model_array_fu_596_delta_k_0_0_val;
reg   [15:0] grp_model_array_fu_596_delta_k_0_1_val;
wire   [15:0] grp_model_array_fu_596_ap_return_0;
wire   [15:0] grp_model_array_fu_596_ap_return_1;
wire   [15:0] grp_model_array_fu_596_ap_return_2;
wire   [15:0] grp_model_array_fu_596_ap_return_3;
wire   [15:0] grp_model_array_fu_596_ap_return_4;
wire   [15:0] grp_model_array_fu_596_ap_return_5;
wire   [15:0] grp_model_array_fu_596_ap_return_6;
wire   [15:0] grp_model_array_fu_596_ap_return_7;
wire   [15:0] grp_model_array_fu_596_ap_return_8;
wire   [15:0] grp_model_array_fu_596_ap_return_9;
reg   [0:0] ap_phi_mux_UnifiedRetVal_phi_fu_588_p4;
reg   [0:0] UnifiedRetVal_reg_584;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state84;
reg    grp_model_array_fu_596_ap_start_reg;
reg   [84:0] ap_NS_fsm;
wire    ap_NS_fsm_state3;
wire    ap_CS_fsm_state7;
wire    ap_NS_fsm_state8;
wire    ap_CS_fsm_state12;
wire    ap_NS_fsm_state13;
wire    ap_CS_fsm_state17;
wire    ap_NS_fsm_state18;
wire    ap_CS_fsm_state22;
wire    ap_NS_fsm_state23;
wire    ap_CS_fsm_state27;
wire    ap_NS_fsm_state28;
wire    ap_CS_fsm_state32;
wire    ap_NS_fsm_state33;
wire    ap_CS_fsm_state37;
wire    ap_NS_fsm_state38;
wire    ap_CS_fsm_state42;
wire    ap_NS_fsm_state43;
wire    ap_CS_fsm_state47;
wire    ap_NS_fsm_state48;
wire    ap_CS_fsm_state52;
wire    ap_NS_fsm_state53;
wire    ap_CS_fsm_state57;
wire    ap_NS_fsm_state58;
wire    ap_CS_fsm_state62;
wire    ap_NS_fsm_state63;
wire    ap_CS_fsm_state67;
wire    ap_NS_fsm_state68;
wire    ap_CS_fsm_state72;
wire    ap_NS_fsm_state73;
wire    ap_CS_fsm_state77;
wire    ap_NS_fsm_state78;
wire   [15:0] zext_ln124_fu_1100_p1;
wire   [15:0] grp_fu_722_p3;
wire   [15:0] zext_ln124_1_fu_1954_p1;
reg   [8:0] i_fu_208;
reg   [15:0] output_array_inference_fu_212;
reg   [15:0] output_array_inference_1_fu_216;
reg   [15:0] output_array_inference_2_fu_220;
reg   [15:0] output_array_inference_3_fu_224;
reg   [15:0] bias_1_local_idx_val107_fu_228;
reg   [15:0] bias_1_local_idx1_val108_fu_232;
reg   [15:0] bias_2_local_idx_val109_fu_236;
reg   [15:0] bias_2_local_idx4_val110_fu_240;
reg   [15:0] w1_local_0_fu_244;
reg   [15:0] w1_local_1_0_fu_248;
reg   [15:0] w1_local_2_0_fu_252;
reg   [15:0] w1_local_3_0_fu_256;
reg   [15:0] w2_local_0_fu_260;
reg   [15:0] w2_local_1_0_fu_264;
reg   [15:0] w2_local_2_0_fu_268;
reg   [15:0] w2_local_3_0_fu_272;
reg   [63:0] grp_fu_617_p0;
wire   [15:0] grp_fu_646_p2;
wire   [0:0] grp_fu_670_p2;
wire   [15:0] grp_fu_716_p2;
reg   [15:0] grp_fu_660_p4;
wire   [16:0] tmp_2_fu_954_p3;
wire  signed [31:0] sext_ln94_fu_962_p1;
reg   [31:0] tmp_3_fu_966_p3;
wire   [31:0] add_ln94_fu_984_p2;
wire   [30:0] tmp_4_fu_990_p4;
wire   [3:0] trunc_ln94_1_fu_1006_p1;
wire   [3:0] sub_ln94_16_fu_1010_p2;
wire   [15:0] zext_ln94_20_fu_1016_p1;
wire   [15:0] lshr_ln94_8_fu_1020_p2;
wire   [15:0] and_ln94_12_fu_1026_p2;
wire   [0:0] icmp_ln94_1_fu_1000_p2;
wire   [0:0] icmp_ln94_2_fu_1032_p2;
wire   [0:0] tmp_5_fu_1044_p3;
wire   [0:0] tmp_6_fu_1058_p3;
wire   [0:0] xor_ln94_4_fu_1052_p2;
wire   [0:0] and_ln94_fu_1066_p2;
wire   [0:0] phi_ln94_fu_1038_p2;
wire   [0:0] or_ln94_4_fu_1072_p2;
wire   [14:0] trunc_ln89_fu_950_p1;
wire   [14:0] select_ln106_fu_1092_p3;
wire   [31:0] add_ln94_1_fu_1109_p2;
wire   [63:0] zext_ln94_1_fu_1114_p1;
wire   [31:0] sub_ln94_2_fu_1124_p2;
wire   [63:0] zext_ln94_2_fu_1129_p1;
wire   [63:0] shl_ln94_fu_1133_p2;
wire   [63:0] cond50_i_i315_fu_1138_p3;
wire   [63:0] zext_ln94_3_fu_1144_p1;
wire   [63:0] add_ln94_2_fu_1147_p2;
wire   [62:0] lshr_ln94_1_fu_1153_p4;
wire   [0:0] tmp_9_fu_1167_p3;
wire   [10:0] select_ln94_1_fu_1175_p3;
wire   [10:0] sub_ln94_3_fu_1183_p2;
wire   [10:0] add_ln94_3_fu_1188_p2;
wire   [63:0] zext_ln94_16_fu_1163_p1;
wire   [11:0] tmp_s_fu_1194_p3;
wire   [63:0] LD_fu_1201_p5;
wire   [51:0] trunc_ln94_2_fu_1218_p4;
wire   [0:0] icmp_ln94_6_fu_1234_p2;
wire   [0:0] icmp_ln94_4_fu_1228_p2;
wire   [16:0] tmp_11_fu_1246_p3;
wire  signed [31:0] sext_ln94_1_fu_1254_p1;
reg   [31:0] tmp_12_fu_1258_p3;
wire   [31:0] add_ln94_4_fu_1276_p2;
wire   [30:0] tmp_14_fu_1282_p4;
wire   [3:0] trunc_ln94_6_fu_1298_p1;
wire   [3:0] sub_ln94_17_fu_1302_p2;
wire   [15:0] zext_ln94_21_fu_1308_p1;
wire   [15:0] lshr_ln94_9_fu_1312_p2;
wire   [15:0] and_ln94_13_fu_1318_p2;
wire   [0:0] icmp_ln94_8_fu_1292_p2;
wire   [0:0] icmp_ln94_7_fu_1324_p2;
wire   [0:0] tmp_15_fu_1336_p3;
wire   [0:0] tmp_19_fu_1350_p3;
wire   [0:0] xor_ln94_5_fu_1344_p2;
wire   [0:0] and_ln94_3_fu_1358_p2;
wire   [0:0] phi_ln94_1_fu_1330_p2;
wire   [0:0] or_ln94_fu_1364_p2;
wire   [31:0] add_ln94_5_fu_1388_p2;
wire   [63:0] zext_ln94_5_fu_1393_p1;
wire   [31:0] sub_ln94_6_fu_1403_p2;
wire   [63:0] zext_ln94_6_fu_1408_p1;
wire   [63:0] shl_ln94_1_fu_1412_p2;
wire   [63:0] cond50_i_i315_1_fu_1417_p3;
wire   [63:0] zext_ln94_7_fu_1423_p1;
wire   [63:0] add_ln94_6_fu_1426_p2;
wire   [62:0] lshr_ln94_3_fu_1432_p4;
wire   [0:0] tmp_23_fu_1446_p3;
wire   [10:0] select_ln94_3_fu_1454_p3;
wire   [10:0] sub_ln94_7_fu_1462_p2;
wire   [10:0] add_ln94_7_fu_1467_p2;
wire   [63:0] zext_ln94_17_fu_1442_p1;
wire   [11:0] tmp_16_fu_1473_p3;
wire   [63:0] LD_1_fu_1480_p5;
wire   [51:0] trunc_ln94_3_fu_1497_p4;
wire   [0:0] icmp_ln94_13_fu_1513_p2;
wire   [0:0] icmp_ln94_11_fu_1507_p2;
wire   [16:0] tmp_21_fu_1525_p3;
wire  signed [31:0] sext_ln94_2_fu_1533_p1;
reg   [31:0] tmp_22_fu_1537_p3;
wire   [31:0] add_ln94_8_fu_1555_p2;
wire   [30:0] tmp_25_fu_1561_p4;
wire   [3:0] trunc_ln94_9_fu_1577_p1;
wire   [3:0] sub_ln94_18_fu_1581_p2;
wire   [15:0] zext_ln94_22_fu_1587_p1;
wire   [15:0] lshr_ln94_10_fu_1591_p2;
wire   [15:0] and_ln94_14_fu_1597_p2;
wire   [0:0] icmp_ln94_16_fu_1571_p2;
wire   [0:0] icmp_ln94_12_fu_1603_p2;
wire   [0:0] tmp_29_fu_1615_p3;
wire   [0:0] tmp_33_fu_1629_p3;
wire   [0:0] xor_ln94_6_fu_1623_p2;
wire   [0:0] and_ln94_6_fu_1637_p2;
wire   [0:0] phi_ln94_2_fu_1609_p2;
wire   [0:0] or_ln94_5_fu_1643_p2;
wire   [31:0] add_ln94_9_fu_1667_p2;
wire   [63:0] zext_ln94_9_fu_1672_p1;
wire   [31:0] sub_ln94_10_fu_1682_p2;
wire   [63:0] zext_ln94_10_fu_1687_p1;
wire   [63:0] shl_ln94_2_fu_1691_p2;
wire   [63:0] cond50_i_i315_2_fu_1696_p3;
wire   [63:0] zext_ln94_11_fu_1702_p1;
wire   [63:0] add_ln94_10_fu_1705_p2;
wire   [62:0] lshr_ln94_5_fu_1711_p4;
wire   [0:0] tmp_34_fu_1725_p3;
wire   [10:0] select_ln94_5_fu_1733_p3;
wire   [10:0] sub_ln94_11_fu_1741_p2;
wire   [10:0] add_ln94_11_fu_1746_p2;
wire   [63:0] zext_ln94_18_fu_1721_p1;
wire   [11:0] tmp_26_fu_1752_p3;
wire   [63:0] LD_2_fu_1759_p5;
wire   [51:0] trunc_ln94_5_fu_1776_p4;
wire   [0:0] icmp_ln94_20_fu_1792_p2;
wire   [0:0] icmp_ln94_18_fu_1786_p2;
wire   [16:0] tmp_31_fu_1808_p3;
wire  signed [31:0] sext_ln94_3_fu_1816_p1;
reg   [31:0] tmp_32_fu_1820_p3;
wire   [31:0] add_ln94_12_fu_1838_p2;
wire   [30:0] tmp_39_fu_1844_p4;
wire   [3:0] trunc_ln94_11_fu_1860_p1;
wire   [3:0] sub_ln94_19_fu_1864_p2;
wire   [15:0] zext_ln94_23_fu_1870_p1;
wire   [15:0] lshr_ln94_11_fu_1874_p2;
wire   [15:0] and_ln94_15_fu_1880_p2;
wire   [0:0] icmp_ln94_21_fu_1854_p2;
wire   [0:0] icmp_ln94_17_fu_1886_p2;
wire   [0:0] tmp_40_fu_1898_p3;
wire   [0:0] tmp_41_fu_1912_p3;
wire   [0:0] xor_ln94_7_fu_1906_p2;
wire   [0:0] and_ln94_9_fu_1920_p2;
wire   [0:0] phi_ln94_3_fu_1892_p2;
wire   [0:0] or_ln94_6_fu_1926_p2;
wire   [14:0] trunc_ln89_1_fu_1804_p1;
wire   [14:0] select_ln106_3_fu_1946_p3;
wire   [31:0] add_ln94_13_fu_1963_p2;
wire   [63:0] zext_ln94_13_fu_1968_p1;
wire   [31:0] sub_ln94_14_fu_1978_p2;
wire   [63:0] zext_ln94_14_fu_1983_p1;
wire   [63:0] shl_ln94_3_fu_1987_p2;
wire   [63:0] cond50_i_i315_3_fu_1992_p3;
wire   [63:0] zext_ln94_15_fu_1998_p1;
wire   [63:0] add_ln94_14_fu_2001_p2;
wire   [62:0] lshr_ln94_7_fu_2007_p4;
wire   [0:0] tmp_42_fu_2021_p3;
wire   [10:0] select_ln94_7_fu_2029_p3;
wire   [10:0] sub_ln94_15_fu_2037_p2;
wire   [10:0] add_ln94_15_fu_2042_p2;
wire   [63:0] zext_ln94_19_fu_2017_p1;
wire   [11:0] tmp_36_fu_2048_p3;
wire   [63:0] LD_3_fu_2055_p5;
wire   [51:0] trunc_ln94_7_fu_2072_p4;
wire   [0:0] icmp_ln94_23_fu_2088_p2;
wire   [0:0] icmp_ln94_22_fu_2082_p2;
wire   [0:0] and_ln94_1_fu_2112_p2;
wire   [0:0] and_ln97_fu_2124_p2;
wire   [0:0] xor_ln94_fu_2136_p2;
wire   [0:0] and_ln94_2_fu_2141_p2;
wire   [15:0] output_array_inference_4_fu_2154_p4;
wire   [15:0] output_array_inference_4_fu_2154_p6;
wire   [15:0] output_array_inference_4_fu_2154_p7;
wire   [1:0] output_array_inference_4_fu_2154_p8;
wire   [0:0] and_ln94_4_fu_2174_p2;
wire   [0:0] and_ln97_1_fu_2186_p2;
wire   [0:0] xor_ln94_1_fu_2198_p2;
wire   [0:0] and_ln94_5_fu_2203_p2;
wire   [15:0] output_array_inference_5_fu_2216_p4;
wire   [15:0] output_array_inference_5_fu_2216_p6;
wire   [15:0] output_array_inference_5_fu_2216_p7;
wire   [1:0] output_array_inference_5_fu_2216_p8;
wire   [0:0] and_ln94_7_fu_2236_p2;
wire   [0:0] and_ln97_2_fu_2248_p2;
wire   [0:0] xor_ln94_2_fu_2260_p2;
wire   [0:0] and_ln94_8_fu_2265_p2;
wire   [15:0] output_array_inference_6_fu_2278_p4;
wire   [15:0] output_array_inference_6_fu_2278_p6;
wire   [15:0] output_array_inference_6_fu_2278_p7;
wire   [1:0] output_array_inference_6_fu_2278_p8;
wire   [0:0] and_ln94_10_fu_2298_p2;
wire   [0:0] and_ln97_3_fu_2310_p2;
wire   [0:0] xor_ln94_3_fu_2322_p2;
wire   [0:0] and_ln94_11_fu_2327_p2;
wire   [15:0] output_array_inference_7_fu_2340_p4;
wire   [15:0] output_array_inference_7_fu_2340_p6;
wire   [15:0] output_array_inference_7_fu_2340_p7;
wire   [1:0] output_array_inference_7_fu_2340_p8;
reg   [4:0] grp_fu_617_opcode;
reg   [0:0] ap_return_preg;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire  signed [1:0] output_array_inference_4_fu_2154_p1;
wire   [1:0] output_array_inference_4_fu_2154_p3;
wire   [1:0] output_array_inference_4_fu_2154_p5;
wire  signed [1:0] output_array_inference_5_fu_2216_p1;
wire   [1:0] output_array_inference_5_fu_2216_p3;
wire   [1:0] output_array_inference_5_fu_2216_p5;
wire  signed [1:0] output_array_inference_6_fu_2278_p1;
wire   [1:0] output_array_inference_6_fu_2278_p3;
wire   [1:0] output_array_inference_6_fu_2278_p5;
wire  signed [1:0] output_array_inference_7_fu_2340_p1;
wire   [1:0] output_array_inference_7_fu_2340_p3;
wire   [1:0] output_array_inference_7_fu_2340_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 85'd1;
#0 grp_model_array_fu_596_ap_start_reg = 1'b0;
#0 i_fu_208 = 9'd0;
#0 output_array_inference_fu_212 = 16'd0;
#0 output_array_inference_1_fu_216 = 16'd0;
#0 output_array_inference_2_fu_220 = 16'd0;
#0 output_array_inference_3_fu_224 = 16'd0;
#0 bias_1_local_idx_val107_fu_228 = 16'd0;
#0 bias_1_local_idx1_val108_fu_232 = 16'd0;
#0 bias_2_local_idx_val109_fu_236 = 16'd0;
#0 bias_2_local_idx4_val110_fu_240 = 16'd0;
#0 w1_local_0_fu_244 = 16'd0;
#0 w1_local_1_0_fu_248 = 16'd0;
#0 w1_local_2_0_fu_252 = 16'd0;
#0 w1_local_3_0_fu_256 = 16'd0;
#0 w2_local_0_fu_260 = 16'd0;
#0 w2_local_1_0_fu_264 = 16'd0;
#0 w2_local_2_0_fu_268 = 16'd0;
#0 w2_local_3_0_fu_272 = 16'd0;
#0 ap_return_preg = 1'd0;
end

accelerator_model_array grp_model_array_fu_596(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_model_array_fu_596_ap_start),
    .ap_done(grp_model_array_fu_596_ap_done),
    .ap_idle(grp_model_array_fu_596_ap_idle),
    .ap_ready(grp_model_array_fu_596_ap_ready),
    .ap_ce(1'b1),
    .p_read10(grp_model_array_fu_596_p_read10),
    .p_read29(grp_model_array_fu_596_p_read29),
    .p_read30(grp_model_array_fu_596_p_read30),
    .p_read31(grp_model_array_fu_596_p_read31),
    .biases_0_0_val(grp_model_array_fu_596_biases_0_0_val),
    .biases_0_1_val(grp_model_array_fu_596_biases_0_1_val),
    .output_kmin1_0_0_val(grp_model_array_fu_596_output_kmin1_0_0_val),
    .output_kmin1_0_1_val(grp_model_array_fu_596_output_kmin1_0_1_val),
    .delta_k_0_0_val(grp_model_array_fu_596_delta_k_0_0_val),
    .delta_k_0_1_val(grp_model_array_fu_596_delta_k_0_1_val),
    .training(training),
    .ap_return_0(grp_model_array_fu_596_ap_return_0),
    .ap_return_1(grp_model_array_fu_596_ap_return_1),
    .ap_return_2(grp_model_array_fu_596_ap_return_2),
    .ap_return_3(grp_model_array_fu_596_ap_return_3),
    .ap_return_4(grp_model_array_fu_596_ap_return_4),
    .ap_return_5(grp_model_array_fu_596_ap_return_5),
    .ap_return_6(grp_model_array_fu_596_ap_return_6),
    .ap_return_7(grp_model_array_fu_596_ap_return_7),
    .ap_return_8(grp_model_array_fu_596_ap_return_8),
    .ap_return_9(grp_model_array_fu_596_ap_return_9)
);

accelerator_dcmp_64ns_64ns_1_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_1_no_dsp_1_U49(
    .din0(grp_fu_617_p0),
    .din1(64'd4602678819172646912),
    .opcode(grp_fu_617_opcode),
    .dout(grp_fu_617_p2)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U50(
    .din0(16'd0),
    .din1(output_array_inference_4_fu_2154_p4),
    .din2(output_array_inference_4_fu_2154_p6),
    .def(output_array_inference_4_fu_2154_p7),
    .sel(output_array_inference_4_fu_2154_p8),
    .dout(output_array_inference_4_fu_2154_p9)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U51(
    .din0(16'd0),
    .din1(output_array_inference_5_fu_2216_p4),
    .din2(output_array_inference_5_fu_2216_p6),
    .def(output_array_inference_5_fu_2216_p7),
    .sel(output_array_inference_5_fu_2216_p8),
    .dout(output_array_inference_5_fu_2216_p9)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U52(
    .din0(16'd0),
    .din1(output_array_inference_6_fu_2278_p4),
    .din2(output_array_inference_6_fu_2278_p6),
    .def(output_array_inference_6_fu_2278_p7),
    .sel(output_array_inference_6_fu_2278_p8),
    .dout(output_array_inference_6_fu_2278_p9)
);

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U53(
    .din0(16'd0),
    .din1(output_array_inference_7_fu_2340_p4),
    .din2(output_array_inference_7_fu_2340_p6),
    .def(output_array_inference_7_fu_2340_p7),
    .sel(output_array_inference_7_fu_2340_p8),
    .dout(output_array_inference_7_fu_2340_p9)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state84)) begin
            ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_588_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_model_array_fu_596_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln65_fu_890_p2 == 1'd0) & (1'b1 == ap_NS_fsm_state3) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_NS_fsm_state78) & (1'b1 == ap_CS_fsm_state77)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_NS_fsm_state73) & (1'b1 == ap_CS_fsm_state72)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_NS_fsm_state68) & (1'b1 == ap_CS_fsm_state67)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_NS_fsm_state63) & (1'b1 == ap_CS_fsm_state62)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_NS_fsm_state58) & (1'b1 == ap_CS_fsm_state57)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_NS_fsm_state53) & (1'b1 == ap_CS_fsm_state52)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_NS_fsm_state48) & (1'b1 == ap_CS_fsm_state47)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_NS_fsm_state43) & (1'b1 == ap_CS_fsm_state42)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_NS_fsm_state38) & (1'b1 == ap_CS_fsm_state37)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_NS_fsm_state33) & (1'b1 == ap_CS_fsm_state32)) | ((icmp_ln65_reg_2648 
    == 1'd0) & (1'b1 == ap_NS_fsm_state28) & (1'b1 == ap_CS_fsm_state27)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_NS_fsm_state23) & (1'b1 == ap_CS_fsm_state22)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_NS_fsm_state18) & (1'b1 == ap_CS_fsm_state17)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_NS_fsm_state13) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_NS_fsm_state8) & (1'b1 == ap_CS_fsm_state7)))) begin
            grp_model_array_fu_596_ap_start_reg <= 1'b1;
        end else if ((grp_model_array_fu_596_ap_ready == 1'b1)) begin
            grp_model_array_fu_596_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        UnifiedRetVal_reg_584 <= 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        UnifiedRetVal_reg_584 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bias_1_local_idx1_val108_fu_232 <= bias_1_local_idx1_promoted147_reload;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        bias_1_local_idx1_val108_fu_232 <= grp_model_array_fu_596_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bias_1_local_idx_val107_fu_228 <= bias_1_local_idx_promoted145_reload;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        bias_1_local_idx_val107_fu_228 <= grp_model_array_fu_596_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bias_2_local_idx4_val110_fu_240 <= bias_2_local_idx4_promoted151_reload;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        bias_2_local_idx4_val110_fu_240 <= reg_780;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bias_2_local_idx_val109_fu_236 <= bias_2_local_idx_promoted149_reload;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        bias_2_local_idx_val109_fu_236 <= reg_774;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_208 <= 9'd0;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        i_fu_208 <= i_2_reg_2652;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w1_local_0_fu_244 <= w1_local_2_reload;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        w1_local_0_fu_244 <= grp_model_array_fu_596_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w1_local_1_0_fu_248 <= w1_local_3_reload;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        w1_local_1_0_fu_248 <= grp_model_array_fu_596_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w1_local_2_0_fu_252 <= w1_local_reload;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        w1_local_2_0_fu_252 <= grp_model_array_fu_596_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w1_local_3_0_fu_256 <= w1_local_1_reload;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        w1_local_3_0_fu_256 <= grp_model_array_fu_596_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w2_local_0_fu_260 <= w2_local_2_reload;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        w2_local_0_fu_260 <= reg_750;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w2_local_1_0_fu_264 <= w2_local_3_reload;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        w2_local_1_0_fu_264 <= reg_756;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w2_local_2_0_fu_268 <= w2_local_reload;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        w2_local_2_0_fu_268 <= reg_762;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w2_local_3_0_fu_272 <= w2_local_1_reload;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        w2_local_3_0_fu_272 <= reg_768;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bias_1_local_idx1_val108_load_1_reg_2663 <= bias_1_local_idx1_val108_fu_232;
        bias_1_local_idx_val107_load_1_reg_2657 <= bias_1_local_idx_val107_fu_228;
        w1_local_0_load_1_reg_2669 <= w1_local_0_fu_244;
        w1_local_1_0_load_1_reg_2675 <= w1_local_1_0_fu_248;
        w1_local_2_0_load_1_reg_2681 <= w1_local_2_0_fu_252;
        w1_local_3_0_load_1_reg_2687 <= w1_local_3_0_fu_256;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        bias_2_local_idx4_val110_load_1_reg_2699 <= bias_2_local_idx4_val110_fu_240;
        bias_2_local_idx_val109_load_1_reg_2693 <= bias_2_local_idx_val109_fu_236;
        w2_local_0_load_1_reg_2705 <= w2_local_0_fu_260;
        w2_local_1_0_load_1_reg_2711 <= w2_local_1_0_fu_264;
        w2_local_2_0_load_1_reg_2717 <= w2_local_2_0_fu_268;
        w2_local_3_0_load_1_reg_2723 <= w2_local_3_0_fu_272;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        bitcast_ln748_1_reg_2834 <= bitcast_ln748_1_fu_1492_p1;
        or_ln94_8_reg_2839 <= or_ln94_8_fu_1519_p2;
        tmp_17_reg_2845 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        bitcast_ln748_2_reg_2897 <= bitcast_ln748_2_fu_1771_p1;
        or_ln94_9_reg_2902 <= or_ln94_9_fu_1798_p2;
        tmp_27_reg_2908 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        bitcast_ln748_3_reg_2960 <= bitcast_ln748_3_fu_2067_p1;
        or_ln94_10_reg_2965 <= or_ln94_10_fu_2094_p2;
        tmp_37_reg_2971 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        bitcast_ln748_reg_2771 <= bitcast_ln748_fu_1213_p1;
        or_ln94_7_reg_2776 <= or_ln94_7_fu_1240_p2;
        tmp_7_reg_2782 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_2652 <= i_2_fu_896_p2;
        icmp_ln65_reg_2648 <= icmp_ln65_fu_890_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        icmp_ln94_10_reg_2855 <= grp_fu_632_p2;
        icmp_ln94_14_reg_2882 <= icmp_ln94_14_fu_1657_p2;
        or_ln94_2_reg_2877[0] <= or_ln94_2_fu_1649_p3[0];
        sub_ln94_9_reg_2871 <= sub_ln94_9_fu_1549_p2;
        tmp_24_reg_2861 <= grp_model_array_fu_596_ap_return_0[32'd15];
        trunc_ln94_8_reg_2866 <= trunc_ln94_8_fu_1545_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        icmp_ln94_15_reg_2918 <= grp_fu_632_p2;
        icmp_ln94_19_reg_2945 <= icmp_ln94_19_fu_1940_p2;
        or_ln94_3_reg_2940[0] <= or_ln94_3_fu_1932_p3[0];
        sub_ln94_13_reg_2934 <= sub_ln94_13_fu_1832_p2;
        tmp_35_reg_2924 <= grp_model_array_fu_596_ap_return_0[32'd15];
        trunc_ln94_10_reg_2929 <= trunc_ln94_10_fu_1828_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        icmp_ln94_3_reg_2756 <= icmp_ln94_3_fu_1086_p2;
        icmp_ln94_reg_2729 <= grp_fu_632_p2;
        or_ln_reg_2751[0] <= or_ln_fu_1078_p3[0];
        sub_ln94_1_reg_2745 <= sub_ln94_1_fu_978_p2;
        tmp_reg_2735 <= grp_model_array_fu_596_ap_return_0[32'd15];
        trunc_ln94_reg_2740 <= trunc_ln94_fu_974_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        icmp_ln94_5_reg_2792 <= grp_fu_632_p2;
        icmp_ln94_9_reg_2819 <= icmp_ln94_9_fu_1378_p2;
        or_ln94_1_reg_2814[0] <= or_ln94_1_fu_1370_p3[0];
        sub_ln94_5_reg_2808 <= sub_ln94_5_fu_1270_p2;
        tmp_13_reg_2798 <= grp_model_array_fu_596_ap_return_0[32'd15];
        trunc_ln94_4_reg_2803 <= trunc_ln94_4_fu_1266_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        lshr_ln94_2_reg_2829 <= lshr_ln94_2_fu_1397_p2;
        zext_ln94_4_reg_2824[15 : 0] <= zext_ln94_4_fu_1384_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        lshr_ln94_4_reg_2892 <= lshr_ln94_4_fu_1676_p2;
        zext_ln94_8_reg_2887[15 : 0] <= zext_ln94_8_fu_1663_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        lshr_ln94_6_reg_2955 <= lshr_ln94_6_fu_1972_p2;
        zext_ln94_12_reg_2950[15 : 0] <= zext_ln94_12_fu_1959_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        lshr_ln94_reg_2766 <= lshr_ln94_fu_1118_p2;
        zext_ln94_reg_2761[15 : 0] <= zext_ln94_fu_1105_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        output_array_inference_1_fu_216 <= output_array_inference_6_fu_2278_p9;
        output_array_inference_2_fu_220 <= output_array_inference_5_fu_2216_p9;
        output_array_inference_3_fu_224 <= output_array_inference_4_fu_2154_p9;
        output_array_inference_fu_212 <= output_array_inference_7_fu_2340_p9;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        output_array_inference_1_load_1_reg_2986 <= output_array_inference_1_fu_216;
        output_array_inference_2_load_1_reg_2991 <= output_array_inference_2_fu_220;
        output_array_inference_3_load_1_reg_2996 <= output_array_inference_3_fu_224;
        output_array_inference_4_reg_3001 <= output_array_inference_4_fu_2154_p9;
        output_array_inference_5_reg_3006 <= output_array_inference_5_fu_2216_p9;
        output_array_inference_6_reg_3011 <= output_array_inference_6_fu_2278_p9;
        output_array_inference_7_reg_3016 <= output_array_inference_7_fu_2340_p9;
        output_array_inference_load_1_reg_2981 <= output_array_inference_fu_212;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_731 <= grp_model_array_fu_596_ap_return_0;
        reg_736 <= grp_model_array_fu_596_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_741 <= grp_fu_652_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state18))) begin
        reg_750 <= grp_model_array_fu_596_ap_return_4;
        reg_756 <= grp_model_array_fu_596_ap_return_5;
        reg_762 <= grp_model_array_fu_596_ap_return_6;
        reg_768 <= grp_model_array_fu_596_ap_return_7;
        reg_774 <= grp_model_array_fu_596_ap_return_8;
        reg_780 <= grp_model_array_fu_596_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_786 <= grp_model_array_fu_596_ap_return_4;
        reg_792 <= grp_model_array_fu_596_ap_return_5;
        reg_798 <= grp_model_array_fu_596_ap_return_6;
        reg_804 <= grp_model_array_fu_596_ap_return_7;
        reg_810 <= grp_model_array_fu_596_ap_return_8;
        reg_816 <= grp_model_array_fu_596_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_18_reg_2850 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        tmp_28_reg_2913 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        tmp_38_reg_2976 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_8_reg_2787 <= grp_fu_617_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_588_p4 = 1'd0;
    end else begin
        ap_phi_mux_UnifiedRetVal_phi_fu_588_p4 = UnifiedRetVal_reg_584;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        ap_return = ap_phi_mux_UnifiedRetVal_phi_fu_588_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        array_back1_bias_change_8_out_ap_vld = 1'b1;
    end else begin
        array_back1_bias_change_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        array_back1_bias_change_9_out_ap_vld = 1'b1;
    end else begin
        array_back1_bias_change_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        array_back1_weight_changes_24_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        array_back1_weight_changes_25_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_25_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        array_back1_weight_changes_26_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_26_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        array_back1_weight_changes_27_out_ap_vld = 1'b1;
    end else begin
        array_back1_weight_changes_27_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        array_back2_bias_change_8_out_ap_vld = 1'b1;
    end else begin
        array_back2_bias_change_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        array_back2_bias_change_9_out_ap_vld = 1'b1;
    end else begin
        array_back2_bias_change_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        array_back2_weight_changes_24_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        array_back2_weight_changes_25_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_25_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        array_back2_weight_changes_26_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_26_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        array_back2_weight_changes_27_out_ap_vld = 1'b1;
    end else begin
        array_back2_weight_changes_27_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        bias_1_local_idx1_val108_out = bias_1_local_idx1_val108_fu_232;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        bias_1_local_idx1_val108_out = bias_1_local_idx1_val108_load_1_reg_2663;
    end else begin
        bias_1_local_idx1_val108_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        bias_1_local_idx1_val108_out_ap_vld = 1'b1;
    end else begin
        bias_1_local_idx1_val108_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        bias_1_local_idx_val107_out = bias_1_local_idx_val107_fu_228;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        bias_1_local_idx_val107_out = bias_1_local_idx_val107_load_1_reg_2657;
    end else begin
        bias_1_local_idx_val107_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        bias_1_local_idx_val107_out_ap_vld = 1'b1;
    end else begin
        bias_1_local_idx_val107_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        bias_2_local_idx4_val110_out = bias_2_local_idx4_val110_fu_240;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        bias_2_local_idx4_val110_out = bias_2_local_idx4_val110_load_1_reg_2699;
    end else begin
        bias_2_local_idx4_val110_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        bias_2_local_idx4_val110_out_ap_vld = 1'b1;
    end else begin
        bias_2_local_idx4_val110_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        bias_2_local_idx_val109_out = bias_2_local_idx_val109_fu_236;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        bias_2_local_idx_val109_out = bias_2_local_idx_val109_load_1_reg_2693;
    end else begin
        bias_2_local_idx_val109_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        bias_2_local_idx_val109_out_ap_vld = 1'b1;
    end else begin
        bias_2_local_idx_val109_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state76)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state56)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state36)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state16)))) begin
        grp_fu_617_opcode = 5'd5;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state55)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state35)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        grp_fu_617_opcode = 5'd2;
    end else begin
        grp_fu_617_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_617_p0 = bitcast_ln748_3_reg_2960;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_617_p0 = bitcast_ln748_3_fu_2067_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_617_p0 = bitcast_ln748_2_reg_2897;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_617_p0 = bitcast_ln748_2_fu_1771_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_617_p0 = bitcast_ln748_1_reg_2834;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_617_p0 = bitcast_ln748_1_fu_1492_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_617_p0 = bitcast_ln748_reg_2771;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_617_p0 = bitcast_ln748_fu_1213_p1;
    end else begin
        grp_fu_617_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state78)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state58)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state38)))) begin
        grp_model_array_fu_596_biases_0_0_val = reg_810;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state73)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state53)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state33)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state68)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state28)))) begin
        grp_model_array_fu_596_biases_0_0_val = reg_774;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state43)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state23)))) begin
        grp_model_array_fu_596_biases_0_0_val = grp_model_array_fu_596_ap_return_8;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        grp_model_array_fu_596_biases_0_0_val = bias_1_local_idx_val107_load_1_reg_2657;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_model_array_fu_596_biases_0_0_val = bias_2_local_idx_val109_load_1_reg_2693;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_model_array_fu_596_biases_0_0_val = bias_2_local_idx_val109_fu_236;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_model_array_fu_596_biases_0_0_val = bias_1_local_idx_val107_fu_228;
    end else begin
        grp_model_array_fu_596_biases_0_0_val = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state78)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state58)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state38)))) begin
        grp_model_array_fu_596_biases_0_1_val = reg_816;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state73)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state53)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state33)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state68)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state28)))) begin
        grp_model_array_fu_596_biases_0_1_val = reg_780;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state43)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state23)))) begin
        grp_model_array_fu_596_biases_0_1_val = grp_model_array_fu_596_ap_return_9;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        grp_model_array_fu_596_biases_0_1_val = bias_1_local_idx1_val108_load_1_reg_2663;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_model_array_fu_596_biases_0_1_val = bias_2_local_idx4_val110_load_1_reg_2699;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_model_array_fu_596_biases_0_1_val = bias_2_local_idx4_val110_fu_240;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_model_array_fu_596_biases_0_1_val = bias_1_local_idx1_val108_fu_232;
    end else begin
        grp_model_array_fu_596_biases_0_1_val = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
        grp_model_array_fu_596_delta_k_0_0_val = zext_ln124_1_fu_1954_p1;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state53)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state33)))) begin
        grp_model_array_fu_596_delta_k_0_0_val = grp_fu_722_p3;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state78)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state58)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state38)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_model_array_fu_596_delta_k_0_0_val = grp_model_array_fu_596_ap_return_2;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_model_array_fu_596_delta_k_0_0_val = zext_ln124_fu_1100_p1;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state43)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state23)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state68)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state28)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        grp_model_array_fu_596_delta_k_0_0_val = 16'd0;
    end else begin
        grp_model_array_fu_596_delta_k_0_0_val = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state78)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state58)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state38)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_model_array_fu_596_delta_k_0_1_val = grp_model_array_fu_596_ap_return_3;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state43)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state23)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state73)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state53)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state33)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state68)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state28)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        grp_model_array_fu_596_delta_k_0_1_val = 16'd0;
    end else begin
        grp_model_array_fu_596_delta_k_0_1_val = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state43)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state78)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state58)))) begin
        grp_model_array_fu_596_output_kmin1_0_0_val = 16'd512;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state73)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state53)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state33)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        grp_model_array_fu_596_output_kmin1_0_0_val = reg_731;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state68)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state28)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        grp_model_array_fu_596_output_kmin1_0_0_val = grp_model_array_fu_596_ap_return_0;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state23)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state38)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_model_array_fu_596_output_kmin1_0_0_val = 16'd0;
    end else begin
        grp_model_array_fu_596_output_kmin1_0_0_val = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state23)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state78)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state38)))) begin
        grp_model_array_fu_596_output_kmin1_0_1_val = 16'd512;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state73)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state53)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state33)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        grp_model_array_fu_596_output_kmin1_0_1_val = reg_736;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state68)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state28)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        grp_model_array_fu_596_output_kmin1_0_1_val = grp_model_array_fu_596_ap_return_1;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state43)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state58)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_model_array_fu_596_output_kmin1_0_1_val = 16'd0;
    end else begin
        grp_model_array_fu_596_output_kmin1_0_1_val = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state78)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state58)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state38)))) begin
        grp_model_array_fu_596_p_read10 = reg_786;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state73)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state53)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state33)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state68)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state28)))) begin
        grp_model_array_fu_596_p_read10 = reg_750;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state43)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state23)))) begin
        grp_model_array_fu_596_p_read10 = grp_model_array_fu_596_ap_return_4;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        grp_model_array_fu_596_p_read10 = w1_local_0_load_1_reg_2669;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_model_array_fu_596_p_read10 = w2_local_0_load_1_reg_2705;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_model_array_fu_596_p_read10 = w2_local_0_fu_260;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_model_array_fu_596_p_read10 = w1_local_0_fu_244;
    end else begin
        grp_model_array_fu_596_p_read10 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state78)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state58)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state38)))) begin
        grp_model_array_fu_596_p_read29 = reg_792;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state73)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state53)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state33)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state68)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state28)))) begin
        grp_model_array_fu_596_p_read29 = reg_756;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state43)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state23)))) begin
        grp_model_array_fu_596_p_read29 = grp_model_array_fu_596_ap_return_5;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        grp_model_array_fu_596_p_read29 = w1_local_1_0_load_1_reg_2675;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_model_array_fu_596_p_read29 = w2_local_1_0_load_1_reg_2711;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_model_array_fu_596_p_read29 = w2_local_1_0_fu_264;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_model_array_fu_596_p_read29 = w1_local_1_0_fu_248;
    end else begin
        grp_model_array_fu_596_p_read29 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state78)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state58)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state38)))) begin
        grp_model_array_fu_596_p_read30 = reg_798;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state73)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state53)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state33)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state68)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state28)))) begin
        grp_model_array_fu_596_p_read30 = reg_762;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state43)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state23)))) begin
        grp_model_array_fu_596_p_read30 = grp_model_array_fu_596_ap_return_6;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        grp_model_array_fu_596_p_read30 = w1_local_2_0_load_1_reg_2681;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_model_array_fu_596_p_read30 = w2_local_2_0_load_1_reg_2717;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_model_array_fu_596_p_read30 = w2_local_2_0_fu_268;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_model_array_fu_596_p_read30 = w1_local_2_0_fu_252;
    end else begin
        grp_model_array_fu_596_p_read30 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state78)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state58)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state38)))) begin
        grp_model_array_fu_596_p_read31 = reg_804;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state73)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state53)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state33)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state68)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state28)))) begin
        grp_model_array_fu_596_p_read31 = reg_768;
    end else if ((((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state43)) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state23)))) begin
        grp_model_array_fu_596_p_read31 = grp_model_array_fu_596_ap_return_7;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        grp_model_array_fu_596_p_read31 = w1_local_3_0_load_1_reg_2687;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_model_array_fu_596_p_read31 = w2_local_3_0_load_1_reg_2723;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_model_array_fu_596_p_read31 = w2_local_3_0_fu_272;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_model_array_fu_596_p_read31 = w1_local_3_0_fu_256;
    end else begin
        grp_model_array_fu_596_p_read31 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        output_array_inference_1_out = output_array_inference_1_fu_216;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        output_array_inference_1_out = output_array_inference_1_load_1_reg_2986;
    end else begin
        output_array_inference_1_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        output_array_inference_1_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        output_array_inference_2_out = output_array_inference_2_fu_220;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        output_array_inference_2_out = output_array_inference_2_load_1_reg_2991;
    end else begin
        output_array_inference_2_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        output_array_inference_2_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        output_array_inference_3_out = output_array_inference_3_fu_224;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        output_array_inference_3_out = output_array_inference_3_load_1_reg_2996;
    end else begin
        output_array_inference_3_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        output_array_inference_3_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        output_array_inference_4_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        output_array_inference_5_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        output_array_inference_6_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        output_array_inference_7_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        output_array_inference_out = output_array_inference_fu_212;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        output_array_inference_out = output_array_inference_load_1_reg_2981;
    end else begin
        output_array_inference_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        output_array_inference_out_ap_vld = 1'b1;
    end else begin
        output_array_inference_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        w1_local_0_out = w1_local_0_fu_244;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        w1_local_0_out = w1_local_0_load_1_reg_2669;
    end else begin
        w1_local_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        w1_local_0_out_ap_vld = 1'b1;
    end else begin
        w1_local_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        w1_local_1_0_out = w1_local_1_0_fu_248;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        w1_local_1_0_out = w1_local_1_0_load_1_reg_2675;
    end else begin
        w1_local_1_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        w1_local_1_0_out_ap_vld = 1'b1;
    end else begin
        w1_local_1_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        w1_local_2_0_out = w1_local_2_0_fu_252;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        w1_local_2_0_out = w1_local_2_0_load_1_reg_2681;
    end else begin
        w1_local_2_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        w1_local_2_0_out_ap_vld = 1'b1;
    end else begin
        w1_local_2_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        w1_local_3_0_out = w1_local_3_0_fu_256;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        w1_local_3_0_out = w1_local_3_0_load_1_reg_2687;
    end else begin
        w1_local_3_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        w1_local_3_0_out_ap_vld = 1'b1;
    end else begin
        w1_local_3_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        w2_local_0_out = w2_local_0_fu_260;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        w2_local_0_out = w2_local_0_load_1_reg_2705;
    end else begin
        w2_local_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        w2_local_0_out_ap_vld = 1'b1;
    end else begin
        w2_local_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        w2_local_1_0_out = w2_local_1_0_fu_264;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        w2_local_1_0_out = w2_local_1_0_load_1_reg_2711;
    end else begin
        w2_local_1_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        w2_local_1_0_out_ap_vld = 1'b1;
    end else begin
        w2_local_1_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        w2_local_2_0_out = w2_local_2_0_fu_268;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        w2_local_2_0_out = w2_local_2_0_load_1_reg_2717;
    end else begin
        w2_local_2_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        w2_local_2_0_out_ap_vld = 1'b1;
    end else begin
        w2_local_2_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        w2_local_3_0_out = w2_local_3_0_fu_272;
    end else if (((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84))) begin
        w2_local_3_0_out = w2_local_3_0_load_1_reg_2723;
    end else begin
        w2_local_3_0_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((icmp_ln65_reg_2648 == 1'd0) & (1'b1 == ap_CS_fsm_state84)))) begin
        w2_local_3_0_out_ap_vld = 1'b1;
    end else begin
        w2_local_3_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            if (((icmp_ln65_reg_2648 == 1'd0) & (cmp_i_i_read_read_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln65_reg_2648 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_1_fu_1480_p5 = {{tmp_16_fu_1473_p3}, {zext_ln94_17_fu_1442_p1[51:0]}};

assign LD_2_fu_1759_p5 = {{tmp_26_fu_1752_p3}, {zext_ln94_18_fu_1721_p1[51:0]}};

assign LD_3_fu_2055_p5 = {{tmp_36_fu_2048_p3}, {zext_ln94_19_fu_2017_p1[51:0]}};

assign LD_fu_1201_p5 = {{tmp_s_fu_1194_p3}, {zext_ln94_16_fu_1163_p1[51:0]}};

assign add_ln94_10_fu_1705_p2 = (cond50_i_i315_2_fu_1696_p3 + zext_ln94_11_fu_1702_p1);

assign add_ln94_11_fu_1746_p2 = (select_ln94_5_fu_1733_p3 + sub_ln94_11_fu_1741_p2);

assign add_ln94_12_fu_1838_p2 = ($signed(sub_ln94_13_fu_1832_p2) + $signed(32'd4294967243));

assign add_ln94_13_fu_1963_p2 = ($signed(sub_ln94_13_reg_2934) + $signed(32'd4294967242));

assign add_ln94_14_fu_2001_p2 = (cond50_i_i315_3_fu_1992_p3 + zext_ln94_15_fu_1998_p1);

assign add_ln94_15_fu_2042_p2 = (select_ln94_7_fu_2029_p3 + sub_ln94_15_fu_2037_p2);

assign add_ln94_1_fu_1109_p2 = ($signed(sub_ln94_1_reg_2745) + $signed(32'd4294967242));

assign add_ln94_2_fu_1147_p2 = (cond50_i_i315_fu_1138_p3 + zext_ln94_3_fu_1144_p1);

assign add_ln94_3_fu_1188_p2 = (select_ln94_1_fu_1175_p3 + sub_ln94_3_fu_1183_p2);

assign add_ln94_4_fu_1276_p2 = ($signed(sub_ln94_5_fu_1270_p2) + $signed(32'd4294967243));

assign add_ln94_5_fu_1388_p2 = ($signed(sub_ln94_5_reg_2808) + $signed(32'd4294967242));

assign add_ln94_6_fu_1426_p2 = (cond50_i_i315_1_fu_1417_p3 + zext_ln94_7_fu_1423_p1);

assign add_ln94_7_fu_1467_p2 = (select_ln94_3_fu_1454_p3 + sub_ln94_7_fu_1462_p2);

assign add_ln94_8_fu_1555_p2 = ($signed(sub_ln94_9_fu_1549_p2) + $signed(32'd4294967243));

assign add_ln94_9_fu_1667_p2 = ($signed(sub_ln94_9_reg_2871) + $signed(32'd4294967242));

assign add_ln94_fu_984_p2 = ($signed(sub_ln94_1_fu_978_p2) + $signed(32'd4294967243));

assign and_ln94_10_fu_2298_p2 = (tmp_37_reg_2971 & or_ln94_10_reg_2965);

assign and_ln94_11_fu_2327_p2 = (xor_ln94_3_fu_2322_p2 & and_ln94_10_fu_2298_p2);

assign and_ln94_12_fu_1026_p2 = (lshr_ln94_8_fu_1020_p2 & grp_fu_652_p3);

assign and_ln94_13_fu_1318_p2 = (lshr_ln94_9_fu_1312_p2 & grp_fu_652_p3);

assign and_ln94_14_fu_1597_p2 = (lshr_ln94_10_fu_1591_p2 & grp_fu_652_p3);

assign and_ln94_15_fu_1880_p2 = (lshr_ln94_11_fu_1874_p2 & grp_fu_652_p3);

assign and_ln94_1_fu_2112_p2 = (tmp_7_reg_2782 & or_ln94_7_reg_2776);

assign and_ln94_2_fu_2141_p2 = (xor_ln94_fu_2136_p2 & and_ln94_1_fu_2112_p2);

assign and_ln94_3_fu_1358_p2 = (xor_ln94_5_fu_1344_p2 & tmp_19_fu_1350_p3);

assign and_ln94_4_fu_2174_p2 = (tmp_17_reg_2845 & or_ln94_8_reg_2839);

assign and_ln94_5_fu_2203_p2 = (xor_ln94_1_fu_2198_p2 & and_ln94_4_fu_2174_p2);

assign and_ln94_6_fu_1637_p2 = (xor_ln94_6_fu_1623_p2 & tmp_33_fu_1629_p3);

assign and_ln94_7_fu_2236_p2 = (tmp_27_reg_2908 & or_ln94_9_reg_2902);

assign and_ln94_8_fu_2265_p2 = (xor_ln94_2_fu_2260_p2 & and_ln94_7_fu_2236_p2);

assign and_ln94_9_fu_1920_p2 = (xor_ln94_7_fu_1906_p2 & tmp_41_fu_1912_p3);

assign and_ln94_fu_1066_p2 = (xor_ln94_4_fu_1052_p2 & tmp_6_fu_1058_p3);

assign and_ln97_1_fu_2186_p2 = (tmp_18_reg_2850 & or_ln94_8_reg_2839);

assign and_ln97_2_fu_2248_p2 = (tmp_28_reg_2913 & or_ln94_9_reg_2902);

assign and_ln97_3_fu_2310_p2 = (tmp_38_reg_2976 & or_ln94_10_reg_2965);

assign and_ln97_fu_2124_p2 = (tmp_8_reg_2787 & or_ln94_7_reg_2776);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_NS_fsm_state13 = ap_NS_fsm[32'd12];

assign ap_NS_fsm_state18 = ap_NS_fsm[32'd17];

assign ap_NS_fsm_state23 = ap_NS_fsm[32'd22];

assign ap_NS_fsm_state28 = ap_NS_fsm[32'd27];

assign ap_NS_fsm_state3 = ap_NS_fsm[32'd2];

assign ap_NS_fsm_state33 = ap_NS_fsm[32'd32];

assign ap_NS_fsm_state38 = ap_NS_fsm[32'd37];

assign ap_NS_fsm_state43 = ap_NS_fsm[32'd42];

assign ap_NS_fsm_state48 = ap_NS_fsm[32'd47];

assign ap_NS_fsm_state53 = ap_NS_fsm[32'd52];

assign ap_NS_fsm_state58 = ap_NS_fsm[32'd57];

assign ap_NS_fsm_state63 = ap_NS_fsm[32'd62];

assign ap_NS_fsm_state68 = ap_NS_fsm[32'd67];

assign ap_NS_fsm_state73 = ap_NS_fsm[32'd72];

assign ap_NS_fsm_state78 = ap_NS_fsm[32'd77];

assign ap_NS_fsm_state8 = ap_NS_fsm[32'd7];

assign array_back1_bias_change_8_out = reg_810;

assign array_back1_bias_change_9_out = reg_816;

assign array_back1_weight_changes_24_out = reg_786;

assign array_back1_weight_changes_25_out = reg_792;

assign array_back1_weight_changes_26_out = reg_798;

assign array_back1_weight_changes_27_out = reg_804;

assign array_back2_bias_change_8_out = reg_774;

assign array_back2_bias_change_9_out = reg_780;

assign array_back2_weight_changes_24_out = reg_750;

assign array_back2_weight_changes_25_out = reg_756;

assign array_back2_weight_changes_26_out = reg_762;

assign array_back2_weight_changes_27_out = reg_768;

assign bitcast_ln748_1_fu_1492_p1 = LD_1_fu_1480_p5;

assign bitcast_ln748_2_fu_1771_p1 = LD_2_fu_1759_p5;

assign bitcast_ln748_3_fu_2067_p1 = LD_3_fu_2055_p5;

assign bitcast_ln748_fu_1213_p1 = LD_fu_1201_p5;

assign cmp_i_i_read_read_fu_276_p2 = cmp_i_i;

assign cond50_i_i315_1_fu_1417_p3 = ((icmp_ln94_9_reg_2819[0:0] == 1'b1) ? lshr_ln94_2_reg_2829 : shl_ln94_1_fu_1412_p2);

assign cond50_i_i315_2_fu_1696_p3 = ((icmp_ln94_14_reg_2882[0:0] == 1'b1) ? lshr_ln94_4_reg_2892 : shl_ln94_2_fu_1691_p2);

assign cond50_i_i315_3_fu_1992_p3 = ((icmp_ln94_19_reg_2945[0:0] == 1'b1) ? lshr_ln94_6_reg_2955 : shl_ln94_3_fu_1987_p2);

assign cond50_i_i315_fu_1138_p3 = ((icmp_ln94_3_reg_2756[0:0] == 1'b1) ? lshr_ln94_reg_2766 : shl_ln94_fu_1133_p2);

assign grp_fu_632_p2 = ((grp_model_array_fu_596_ap_return_0 == 16'd0) ? 1'b1 : 1'b0);

assign grp_fu_638_p3 = grp_model_array_fu_596_ap_return_0[32'd15];

assign grp_fu_646_p2 = (16'd0 - grp_model_array_fu_596_ap_return_0);

assign grp_fu_652_p3 = ((grp_fu_638_p3[0:0] == 1'b1) ? grp_fu_646_p2 : grp_model_array_fu_596_ap_return_0);

integer ap_tvar_int_0;

always @ (grp_fu_652_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            grp_fu_660_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            grp_fu_660_p4[ap_tvar_int_0] = grp_fu_652_p3[15 - ap_tvar_int_0];
        end
    end
end

assign grp_fu_670_p2 = (($signed(grp_model_array_fu_596_ap_return_0) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign grp_fu_716_p2 = ($signed(grp_model_array_fu_596_ap_return_0) + $signed(16'd65024));

assign grp_fu_722_p3 = ((grp_fu_670_p2[0:0] == 1'b1) ? grp_fu_716_p2 : 16'd0);

assign grp_model_array_fu_596_ap_start = grp_model_array_fu_596_ap_start_reg;

assign i_2_fu_896_p2 = (i_fu_208 + 9'd1);

assign icmp_ln65_fu_890_p2 = ((i_fu_208 == 9'd500) ? 1'b1 : 1'b0);

assign icmp_ln94_11_fu_1507_p2 = ((add_ln94_7_fu_1467_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln94_12_fu_1603_p2 = ((and_ln94_14_fu_1597_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_13_fu_1513_p2 = ((trunc_ln94_3_fu_1497_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_14_fu_1657_p2 = (($signed(add_ln94_8_fu_1555_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln94_16_fu_1571_p2 = (($signed(tmp_25_fu_1561_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln94_17_fu_1886_p2 = ((and_ln94_15_fu_1880_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_18_fu_1786_p2 = ((add_ln94_11_fu_1746_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln94_19_fu_1940_p2 = (($signed(add_ln94_12_fu_1838_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln94_1_fu_1000_p2 = (($signed(tmp_4_fu_990_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln94_20_fu_1792_p2 = ((trunc_ln94_5_fu_1776_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_21_fu_1854_p2 = (($signed(tmp_39_fu_1844_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln94_22_fu_2082_p2 = ((add_ln94_15_fu_2042_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln94_23_fu_2088_p2 = ((trunc_ln94_7_fu_2072_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_2_fu_1032_p2 = ((and_ln94_12_fu_1026_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_3_fu_1086_p2 = (($signed(add_ln94_fu_984_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln94_4_fu_1228_p2 = ((add_ln94_3_fu_1188_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln94_6_fu_1234_p2 = ((trunc_ln94_2_fu_1218_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_7_fu_1324_p2 = ((and_ln94_13_fu_1318_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_8_fu_1292_p2 = (($signed(tmp_14_fu_1282_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln94_9_fu_1378_p2 = (($signed(add_ln94_4_fu_1276_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign lshr_ln94_10_fu_1591_p2 = 16'd65535 >> zext_ln94_22_fu_1587_p1;

assign lshr_ln94_11_fu_1874_p2 = 16'd65535 >> zext_ln94_23_fu_1870_p1;

assign lshr_ln94_1_fu_1153_p4 = {{add_ln94_2_fu_1147_p2[63:1]}};

assign lshr_ln94_2_fu_1397_p2 = zext_ln94_4_fu_1384_p1 >> zext_ln94_5_fu_1393_p1;

assign lshr_ln94_3_fu_1432_p4 = {{add_ln94_6_fu_1426_p2[63:1]}};

assign lshr_ln94_4_fu_1676_p2 = zext_ln94_8_fu_1663_p1 >> zext_ln94_9_fu_1672_p1;

assign lshr_ln94_5_fu_1711_p4 = {{add_ln94_10_fu_1705_p2[63:1]}};

assign lshr_ln94_6_fu_1972_p2 = zext_ln94_12_fu_1959_p1 >> zext_ln94_13_fu_1968_p1;

assign lshr_ln94_7_fu_2007_p4 = {{add_ln94_14_fu_2001_p2[63:1]}};

assign lshr_ln94_8_fu_1020_p2 = 16'd65535 >> zext_ln94_20_fu_1016_p1;

assign lshr_ln94_9_fu_1312_p2 = 16'd65535 >> zext_ln94_21_fu_1308_p1;

assign lshr_ln94_fu_1118_p2 = zext_ln94_fu_1105_p1 >> zext_ln94_1_fu_1114_p1;

assign or_ln94_10_fu_2094_p2 = (icmp_ln94_23_fu_2088_p2 | icmp_ln94_22_fu_2082_p2);

assign or_ln94_1_fu_1370_p3 = {{1'd0}, {or_ln94_fu_1364_p2}};

assign or_ln94_2_fu_1649_p3 = {{1'd0}, {or_ln94_5_fu_1643_p2}};

assign or_ln94_3_fu_1932_p3 = {{1'd0}, {or_ln94_6_fu_1926_p2}};

assign or_ln94_4_fu_1072_p2 = (phi_ln94_fu_1038_p2 | and_ln94_fu_1066_p2);

assign or_ln94_5_fu_1643_p2 = (phi_ln94_2_fu_1609_p2 | and_ln94_6_fu_1637_p2);

assign or_ln94_6_fu_1926_p2 = (phi_ln94_3_fu_1892_p2 | and_ln94_9_fu_1920_p2);

assign or_ln94_7_fu_1240_p2 = (icmp_ln94_6_fu_1234_p2 | icmp_ln94_4_fu_1228_p2);

assign or_ln94_8_fu_1519_p2 = (icmp_ln94_13_fu_1513_p2 | icmp_ln94_11_fu_1507_p2);

assign or_ln94_9_fu_1798_p2 = (icmp_ln94_20_fu_1792_p2 | icmp_ln94_18_fu_1786_p2);

assign or_ln94_fu_1364_p2 = (phi_ln94_1_fu_1330_p2 | and_ln94_3_fu_1358_p2);

assign or_ln_fu_1078_p3 = {{1'd0}, {or_ln94_4_fu_1072_p2}};

assign output_array_inference_4_fu_2154_p4 = ((and_ln94_1_fu_2112_p2[0:0] == 1'b1) ? 16'd512 : 16'd0);

assign output_array_inference_4_fu_2154_p6 = ((and_ln97_fu_2124_p2[0:0] == 1'b1) ? 16'd0 : output_array_inference_3_fu_224);

assign output_array_inference_4_fu_2154_p7 = 'bx;

assign output_array_inference_4_fu_2154_p8 = {{icmp_ln94_reg_2729}, {and_ln94_2_fu_2141_p2}};

assign output_array_inference_4_out = output_array_inference_4_reg_3001;

assign output_array_inference_5_fu_2216_p4 = ((and_ln94_4_fu_2174_p2[0:0] == 1'b1) ? 16'd512 : 16'd0);

assign output_array_inference_5_fu_2216_p6 = ((and_ln97_1_fu_2186_p2[0:0] == 1'b1) ? 16'd0 : output_array_inference_2_fu_220);

assign output_array_inference_5_fu_2216_p7 = 'bx;

assign output_array_inference_5_fu_2216_p8 = {{icmp_ln94_5_reg_2792}, {and_ln94_5_fu_2203_p2}};

assign output_array_inference_5_out = output_array_inference_5_reg_3006;

assign output_array_inference_6_fu_2278_p4 = ((and_ln94_7_fu_2236_p2[0:0] == 1'b1) ? 16'd512 : 16'd0);

assign output_array_inference_6_fu_2278_p6 = ((and_ln97_2_fu_2248_p2[0:0] == 1'b1) ? 16'd0 : output_array_inference_1_fu_216);

assign output_array_inference_6_fu_2278_p7 = 'bx;

assign output_array_inference_6_fu_2278_p8 = {{icmp_ln94_10_reg_2855}, {and_ln94_8_fu_2265_p2}};

assign output_array_inference_6_out = output_array_inference_6_reg_3011;

assign output_array_inference_7_fu_2340_p4 = ((and_ln94_10_fu_2298_p2[0:0] == 1'b1) ? 16'd512 : 16'd0);

assign output_array_inference_7_fu_2340_p6 = ((and_ln97_3_fu_2310_p2[0:0] == 1'b1) ? 16'd0 : output_array_inference_fu_212);

assign output_array_inference_7_fu_2340_p7 = 'bx;

assign output_array_inference_7_fu_2340_p8 = {{icmp_ln94_15_reg_2918}, {and_ln94_11_fu_2327_p2}};

assign output_array_inference_7_out = output_array_inference_7_reg_3016;

assign phi_ln94_1_fu_1330_p2 = (icmp_ln94_8_fu_1292_p2 & icmp_ln94_7_fu_1324_p2);

assign phi_ln94_2_fu_1609_p2 = (icmp_ln94_16_fu_1571_p2 & icmp_ln94_12_fu_1603_p2);

assign phi_ln94_3_fu_1892_p2 = (icmp_ln94_21_fu_1854_p2 & icmp_ln94_17_fu_1886_p2);

assign phi_ln94_fu_1038_p2 = (icmp_ln94_2_fu_1032_p2 & icmp_ln94_1_fu_1000_p2);

assign select_ln106_3_fu_1946_p3 = ((grp_fu_670_p2[0:0] == 1'b1) ? trunc_ln89_1_fu_1804_p1 : 15'd0);

assign select_ln106_fu_1092_p3 = ((grp_fu_670_p2[0:0] == 1'b1) ? trunc_ln89_fu_950_p1 : 15'd0);

assign select_ln94_1_fu_1175_p3 = ((tmp_9_fu_1167_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln94_3_fu_1454_p3 = ((tmp_23_fu_1446_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln94_5_fu_1733_p3 = ((tmp_34_fu_1725_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln94_7_fu_2029_p3 = ((tmp_42_fu_2021_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln94_1_fu_1254_p1 = $signed(tmp_11_fu_1246_p3);

assign sext_ln94_2_fu_1533_p1 = $signed(tmp_21_fu_1525_p3);

assign sext_ln94_3_fu_1816_p1 = $signed(tmp_31_fu_1808_p3);

assign sext_ln94_fu_962_p1 = $signed(tmp_2_fu_954_p3);

assign shl_ln94_1_fu_1412_p2 = zext_ln94_4_reg_2824 << zext_ln94_6_fu_1408_p1;

assign shl_ln94_2_fu_1691_p2 = zext_ln94_8_reg_2887 << zext_ln94_10_fu_1687_p1;

assign shl_ln94_3_fu_1987_p2 = zext_ln94_12_reg_2950 << zext_ln94_14_fu_1983_p1;

assign shl_ln94_fu_1133_p2 = zext_ln94_reg_2761 << zext_ln94_2_fu_1129_p1;

assign sub_ln94_10_fu_1682_p2 = (32'd54 - sub_ln94_9_reg_2871);

assign sub_ln94_11_fu_1741_p2 = (11'd7 - trunc_ln94_8_reg_2866);

assign sub_ln94_13_fu_1832_p2 = (32'd16 - tmp_32_fu_1820_p3);

assign sub_ln94_14_fu_1978_p2 = (32'd54 - sub_ln94_13_reg_2934);

assign sub_ln94_15_fu_2037_p2 = (11'd7 - trunc_ln94_10_reg_2929);

assign sub_ln94_16_fu_1010_p2 = (4'd6 - trunc_ln94_1_fu_1006_p1);

assign sub_ln94_17_fu_1302_p2 = (4'd6 - trunc_ln94_6_fu_1298_p1);

assign sub_ln94_18_fu_1581_p2 = (4'd6 - trunc_ln94_9_fu_1577_p1);

assign sub_ln94_19_fu_1864_p2 = (4'd6 - trunc_ln94_11_fu_1860_p1);

assign sub_ln94_1_fu_978_p2 = (32'd16 - tmp_3_fu_966_p3);

assign sub_ln94_2_fu_1124_p2 = (32'd54 - sub_ln94_1_reg_2745);

assign sub_ln94_3_fu_1183_p2 = (11'd7 - trunc_ln94_reg_2740);

assign sub_ln94_5_fu_1270_p2 = (32'd16 - tmp_12_fu_1258_p3);

assign sub_ln94_6_fu_1403_p2 = (32'd54 - sub_ln94_5_reg_2808);

assign sub_ln94_7_fu_1462_p2 = (11'd7 - trunc_ln94_4_reg_2803);

assign sub_ln94_9_fu_1549_p2 = (32'd16 - tmp_22_fu_1537_p3);

assign tmp_11_fu_1246_p3 = {{1'd1}, {grp_fu_660_p4}};


always @ (sext_ln94_1_fu_1254_p1) begin
    if (sext_ln94_1_fu_1254_p1[0] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd0;
    end else if (sext_ln94_1_fu_1254_p1[1] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd1;
    end else if (sext_ln94_1_fu_1254_p1[2] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd2;
    end else if (sext_ln94_1_fu_1254_p1[3] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd3;
    end else if (sext_ln94_1_fu_1254_p1[4] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd4;
    end else if (sext_ln94_1_fu_1254_p1[5] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd5;
    end else if (sext_ln94_1_fu_1254_p1[6] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd6;
    end else if (sext_ln94_1_fu_1254_p1[7] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd7;
    end else if (sext_ln94_1_fu_1254_p1[8] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd8;
    end else if (sext_ln94_1_fu_1254_p1[9] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd9;
    end else if (sext_ln94_1_fu_1254_p1[10] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd10;
    end else if (sext_ln94_1_fu_1254_p1[11] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd11;
    end else if (sext_ln94_1_fu_1254_p1[12] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd12;
    end else if (sext_ln94_1_fu_1254_p1[13] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd13;
    end else if (sext_ln94_1_fu_1254_p1[14] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd14;
    end else if (sext_ln94_1_fu_1254_p1[15] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd15;
    end else if (sext_ln94_1_fu_1254_p1[16] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd16;
    end else if (sext_ln94_1_fu_1254_p1[17] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd17;
    end else if (sext_ln94_1_fu_1254_p1[18] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd18;
    end else if (sext_ln94_1_fu_1254_p1[19] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd19;
    end else if (sext_ln94_1_fu_1254_p1[20] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd20;
    end else if (sext_ln94_1_fu_1254_p1[21] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd21;
    end else if (sext_ln94_1_fu_1254_p1[22] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd22;
    end else if (sext_ln94_1_fu_1254_p1[23] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd23;
    end else if (sext_ln94_1_fu_1254_p1[24] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd24;
    end else if (sext_ln94_1_fu_1254_p1[25] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd25;
    end else if (sext_ln94_1_fu_1254_p1[26] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd26;
    end else if (sext_ln94_1_fu_1254_p1[27] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd27;
    end else if (sext_ln94_1_fu_1254_p1[28] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd28;
    end else if (sext_ln94_1_fu_1254_p1[29] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd29;
    end else if (sext_ln94_1_fu_1254_p1[30] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd30;
    end else if (sext_ln94_1_fu_1254_p1[31] == 1'b1) begin
        tmp_12_fu_1258_p3 = 32'd31;
    end else begin
        tmp_12_fu_1258_p3 = 32'd32;
    end
end

assign tmp_14_fu_1282_p4 = {{add_ln94_4_fu_1276_p2[31:1]}};

assign tmp_15_fu_1336_p3 = add_ln94_4_fu_1276_p2[32'd31];

assign tmp_16_fu_1473_p3 = {{tmp_13_reg_2798}, {add_ln94_7_fu_1467_p2}};

assign tmp_19_fu_1350_p3 = grp_fu_652_p3[add_ln94_4_fu_1276_p2];

assign tmp_21_fu_1525_p3 = {{1'd1}, {grp_fu_660_p4}};


always @ (sext_ln94_2_fu_1533_p1) begin
    if (sext_ln94_2_fu_1533_p1[0] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd0;
    end else if (sext_ln94_2_fu_1533_p1[1] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd1;
    end else if (sext_ln94_2_fu_1533_p1[2] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd2;
    end else if (sext_ln94_2_fu_1533_p1[3] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd3;
    end else if (sext_ln94_2_fu_1533_p1[4] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd4;
    end else if (sext_ln94_2_fu_1533_p1[5] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd5;
    end else if (sext_ln94_2_fu_1533_p1[6] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd6;
    end else if (sext_ln94_2_fu_1533_p1[7] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd7;
    end else if (sext_ln94_2_fu_1533_p1[8] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd8;
    end else if (sext_ln94_2_fu_1533_p1[9] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd9;
    end else if (sext_ln94_2_fu_1533_p1[10] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd10;
    end else if (sext_ln94_2_fu_1533_p1[11] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd11;
    end else if (sext_ln94_2_fu_1533_p1[12] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd12;
    end else if (sext_ln94_2_fu_1533_p1[13] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd13;
    end else if (sext_ln94_2_fu_1533_p1[14] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd14;
    end else if (sext_ln94_2_fu_1533_p1[15] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd15;
    end else if (sext_ln94_2_fu_1533_p1[16] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd16;
    end else if (sext_ln94_2_fu_1533_p1[17] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd17;
    end else if (sext_ln94_2_fu_1533_p1[18] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd18;
    end else if (sext_ln94_2_fu_1533_p1[19] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd19;
    end else if (sext_ln94_2_fu_1533_p1[20] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd20;
    end else if (sext_ln94_2_fu_1533_p1[21] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd21;
    end else if (sext_ln94_2_fu_1533_p1[22] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd22;
    end else if (sext_ln94_2_fu_1533_p1[23] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd23;
    end else if (sext_ln94_2_fu_1533_p1[24] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd24;
    end else if (sext_ln94_2_fu_1533_p1[25] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd25;
    end else if (sext_ln94_2_fu_1533_p1[26] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd26;
    end else if (sext_ln94_2_fu_1533_p1[27] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd27;
    end else if (sext_ln94_2_fu_1533_p1[28] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd28;
    end else if (sext_ln94_2_fu_1533_p1[29] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd29;
    end else if (sext_ln94_2_fu_1533_p1[30] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd30;
    end else if (sext_ln94_2_fu_1533_p1[31] == 1'b1) begin
        tmp_22_fu_1537_p3 = 32'd31;
    end else begin
        tmp_22_fu_1537_p3 = 32'd32;
    end
end

assign tmp_23_fu_1446_p3 = add_ln94_6_fu_1426_p2[32'd54];

assign tmp_25_fu_1561_p4 = {{add_ln94_8_fu_1555_p2[31:1]}};

assign tmp_26_fu_1752_p3 = {{tmp_24_reg_2861}, {add_ln94_11_fu_1746_p2}};

assign tmp_29_fu_1615_p3 = add_ln94_8_fu_1555_p2[32'd31];

assign tmp_2_fu_954_p3 = {{1'd1}, {grp_fu_660_p4}};

assign tmp_31_fu_1808_p3 = {{1'd1}, {grp_fu_660_p4}};


always @ (sext_ln94_3_fu_1816_p1) begin
    if (sext_ln94_3_fu_1816_p1[0] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd0;
    end else if (sext_ln94_3_fu_1816_p1[1] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd1;
    end else if (sext_ln94_3_fu_1816_p1[2] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd2;
    end else if (sext_ln94_3_fu_1816_p1[3] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd3;
    end else if (sext_ln94_3_fu_1816_p1[4] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd4;
    end else if (sext_ln94_3_fu_1816_p1[5] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd5;
    end else if (sext_ln94_3_fu_1816_p1[6] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd6;
    end else if (sext_ln94_3_fu_1816_p1[7] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd7;
    end else if (sext_ln94_3_fu_1816_p1[8] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd8;
    end else if (sext_ln94_3_fu_1816_p1[9] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd9;
    end else if (sext_ln94_3_fu_1816_p1[10] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd10;
    end else if (sext_ln94_3_fu_1816_p1[11] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd11;
    end else if (sext_ln94_3_fu_1816_p1[12] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd12;
    end else if (sext_ln94_3_fu_1816_p1[13] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd13;
    end else if (sext_ln94_3_fu_1816_p1[14] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd14;
    end else if (sext_ln94_3_fu_1816_p1[15] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd15;
    end else if (sext_ln94_3_fu_1816_p1[16] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd16;
    end else if (sext_ln94_3_fu_1816_p1[17] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd17;
    end else if (sext_ln94_3_fu_1816_p1[18] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd18;
    end else if (sext_ln94_3_fu_1816_p1[19] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd19;
    end else if (sext_ln94_3_fu_1816_p1[20] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd20;
    end else if (sext_ln94_3_fu_1816_p1[21] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd21;
    end else if (sext_ln94_3_fu_1816_p1[22] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd22;
    end else if (sext_ln94_3_fu_1816_p1[23] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd23;
    end else if (sext_ln94_3_fu_1816_p1[24] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd24;
    end else if (sext_ln94_3_fu_1816_p1[25] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd25;
    end else if (sext_ln94_3_fu_1816_p1[26] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd26;
    end else if (sext_ln94_3_fu_1816_p1[27] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd27;
    end else if (sext_ln94_3_fu_1816_p1[28] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd28;
    end else if (sext_ln94_3_fu_1816_p1[29] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd29;
    end else if (sext_ln94_3_fu_1816_p1[30] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd30;
    end else if (sext_ln94_3_fu_1816_p1[31] == 1'b1) begin
        tmp_32_fu_1820_p3 = 32'd31;
    end else begin
        tmp_32_fu_1820_p3 = 32'd32;
    end
end

assign tmp_33_fu_1629_p3 = grp_fu_652_p3[add_ln94_8_fu_1555_p2];

assign tmp_34_fu_1725_p3 = add_ln94_10_fu_1705_p2[32'd54];

assign tmp_36_fu_2048_p3 = {{tmp_35_reg_2924}, {add_ln94_15_fu_2042_p2}};

assign tmp_39_fu_1844_p4 = {{add_ln94_12_fu_1838_p2[31:1]}};


always @ (sext_ln94_fu_962_p1) begin
    if (sext_ln94_fu_962_p1[0] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd0;
    end else if (sext_ln94_fu_962_p1[1] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd1;
    end else if (sext_ln94_fu_962_p1[2] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd2;
    end else if (sext_ln94_fu_962_p1[3] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd3;
    end else if (sext_ln94_fu_962_p1[4] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd4;
    end else if (sext_ln94_fu_962_p1[5] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd5;
    end else if (sext_ln94_fu_962_p1[6] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd6;
    end else if (sext_ln94_fu_962_p1[7] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd7;
    end else if (sext_ln94_fu_962_p1[8] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd8;
    end else if (sext_ln94_fu_962_p1[9] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd9;
    end else if (sext_ln94_fu_962_p1[10] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd10;
    end else if (sext_ln94_fu_962_p1[11] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd11;
    end else if (sext_ln94_fu_962_p1[12] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd12;
    end else if (sext_ln94_fu_962_p1[13] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd13;
    end else if (sext_ln94_fu_962_p1[14] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd14;
    end else if (sext_ln94_fu_962_p1[15] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd15;
    end else if (sext_ln94_fu_962_p1[16] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd16;
    end else if (sext_ln94_fu_962_p1[17] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd17;
    end else if (sext_ln94_fu_962_p1[18] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd18;
    end else if (sext_ln94_fu_962_p1[19] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd19;
    end else if (sext_ln94_fu_962_p1[20] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd20;
    end else if (sext_ln94_fu_962_p1[21] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd21;
    end else if (sext_ln94_fu_962_p1[22] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd22;
    end else if (sext_ln94_fu_962_p1[23] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd23;
    end else if (sext_ln94_fu_962_p1[24] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd24;
    end else if (sext_ln94_fu_962_p1[25] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd25;
    end else if (sext_ln94_fu_962_p1[26] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd26;
    end else if (sext_ln94_fu_962_p1[27] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd27;
    end else if (sext_ln94_fu_962_p1[28] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd28;
    end else if (sext_ln94_fu_962_p1[29] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd29;
    end else if (sext_ln94_fu_962_p1[30] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd30;
    end else if (sext_ln94_fu_962_p1[31] == 1'b1) begin
        tmp_3_fu_966_p3 = 32'd31;
    end else begin
        tmp_3_fu_966_p3 = 32'd32;
    end
end

assign tmp_40_fu_1898_p3 = add_ln94_12_fu_1838_p2[32'd31];

assign tmp_41_fu_1912_p3 = grp_fu_652_p3[add_ln94_12_fu_1838_p2];

assign tmp_42_fu_2021_p3 = add_ln94_14_fu_2001_p2[32'd54];

assign tmp_4_fu_990_p4 = {{add_ln94_fu_984_p2[31:1]}};

assign tmp_5_fu_1044_p3 = add_ln94_fu_984_p2[32'd31];

assign tmp_6_fu_1058_p3 = grp_fu_652_p3[add_ln94_fu_984_p2];

assign tmp_9_fu_1167_p3 = add_ln94_2_fu_1147_p2[32'd54];

assign tmp_s_fu_1194_p3 = {{tmp_reg_2735}, {add_ln94_3_fu_1188_p2}};

assign trunc_ln89_1_fu_1804_p1 = grp_model_array_fu_596_ap_return_0[14:0];

assign trunc_ln89_fu_950_p1 = grp_model_array_fu_596_ap_return_0[14:0];

assign trunc_ln94_10_fu_1828_p1 = tmp_32_fu_1820_p3[10:0];

assign trunc_ln94_11_fu_1860_p1 = sub_ln94_13_fu_1832_p2[3:0];

assign trunc_ln94_1_fu_1006_p1 = sub_ln94_1_fu_978_p2[3:0];

assign trunc_ln94_2_fu_1218_p4 = {{add_ln94_2_fu_1147_p2[52:1]}};

assign trunc_ln94_3_fu_1497_p4 = {{add_ln94_6_fu_1426_p2[52:1]}};

assign trunc_ln94_4_fu_1266_p1 = tmp_12_fu_1258_p3[10:0];

assign trunc_ln94_5_fu_1776_p4 = {{add_ln94_10_fu_1705_p2[52:1]}};

assign trunc_ln94_6_fu_1298_p1 = sub_ln94_5_fu_1270_p2[3:0];

assign trunc_ln94_7_fu_2072_p4 = {{add_ln94_14_fu_2001_p2[52:1]}};

assign trunc_ln94_8_fu_1545_p1 = tmp_22_fu_1537_p3[10:0];

assign trunc_ln94_9_fu_1577_p1 = sub_ln94_9_fu_1549_p2[3:0];

assign trunc_ln94_fu_974_p1 = tmp_3_fu_966_p3[10:0];

assign xor_ln94_1_fu_2198_p2 = (icmp_ln94_5_reg_2792 ^ 1'd1);

assign xor_ln94_2_fu_2260_p2 = (icmp_ln94_10_reg_2855 ^ 1'd1);

assign xor_ln94_3_fu_2322_p2 = (icmp_ln94_15_reg_2918 ^ 1'd1);

assign xor_ln94_4_fu_1052_p2 = (tmp_5_fu_1044_p3 ^ 1'd1);

assign xor_ln94_5_fu_1344_p2 = (tmp_15_fu_1336_p3 ^ 1'd1);

assign xor_ln94_6_fu_1623_p2 = (tmp_29_fu_1615_p3 ^ 1'd1);

assign xor_ln94_7_fu_1906_p2 = (tmp_40_fu_1898_p3 ^ 1'd1);

assign xor_ln94_fu_2136_p2 = (icmp_ln94_reg_2729 ^ 1'd1);

assign zext_ln124_1_fu_1954_p1 = select_ln106_3_fu_1946_p3;

assign zext_ln124_fu_1100_p1 = select_ln106_fu_1092_p3;

assign zext_ln94_10_fu_1687_p1 = sub_ln94_10_fu_1682_p2;

assign zext_ln94_11_fu_1702_p1 = or_ln94_2_reg_2877;

assign zext_ln94_12_fu_1959_p1 = reg_741;

assign zext_ln94_13_fu_1968_p1 = add_ln94_13_fu_1963_p2;

assign zext_ln94_14_fu_1983_p1 = sub_ln94_14_fu_1978_p2;

assign zext_ln94_15_fu_1998_p1 = or_ln94_3_reg_2940;

assign zext_ln94_16_fu_1163_p1 = lshr_ln94_1_fu_1153_p4;

assign zext_ln94_17_fu_1442_p1 = lshr_ln94_3_fu_1432_p4;

assign zext_ln94_18_fu_1721_p1 = lshr_ln94_5_fu_1711_p4;

assign zext_ln94_19_fu_2017_p1 = lshr_ln94_7_fu_2007_p4;

assign zext_ln94_1_fu_1114_p1 = add_ln94_1_fu_1109_p2;

assign zext_ln94_20_fu_1016_p1 = sub_ln94_16_fu_1010_p2;

assign zext_ln94_21_fu_1308_p1 = sub_ln94_17_fu_1302_p2;

assign zext_ln94_22_fu_1587_p1 = sub_ln94_18_fu_1581_p2;

assign zext_ln94_23_fu_1870_p1 = sub_ln94_19_fu_1864_p2;

assign zext_ln94_2_fu_1129_p1 = sub_ln94_2_fu_1124_p2;

assign zext_ln94_3_fu_1144_p1 = or_ln_reg_2751;

assign zext_ln94_4_fu_1384_p1 = reg_741;

assign zext_ln94_5_fu_1393_p1 = add_ln94_5_fu_1388_p2;

assign zext_ln94_6_fu_1408_p1 = sub_ln94_6_fu_1403_p2;

assign zext_ln94_7_fu_1423_p1 = or_ln94_1_reg_2814;

assign zext_ln94_8_fu_1663_p1 = reg_741;

assign zext_ln94_9_fu_1672_p1 = add_ln94_9_fu_1667_p2;

assign zext_ln94_fu_1105_p1 = reg_741;

always @ (posedge ap_clk) begin
    or_ln_reg_2751[1] <= 1'b0;
    zext_ln94_reg_2761[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    or_ln94_1_reg_2814[1] <= 1'b0;
    zext_ln94_4_reg_2824[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    or_ln94_2_reg_2877[1] <= 1'b0;
    zext_ln94_8_reg_2887[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    or_ln94_3_reg_2940[1] <= 1'b0;
    zext_ln94_12_reg_2950[63:16] <= 48'b000000000000000000000000000000000000000000000000;
end

endmodule //accelerator_accelerator_Pipeline_VITIS_LOOP_65_3
