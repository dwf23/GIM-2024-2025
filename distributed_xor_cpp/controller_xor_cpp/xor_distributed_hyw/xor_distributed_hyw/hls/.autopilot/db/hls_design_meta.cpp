#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("w1_address0", 2, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("w1_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("w1_q0", 16, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("w1_address1", 2, hls_out, 0, "ap_memory", "MemPortADDR2", 1),
	Port_Property("w1_ce1", 1, hls_out, 0, "ap_memory", "MemPortCE2", 1),
	Port_Property("w1_q1", 16, hls_in, 0, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("bias_1_address0", 1, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("bias_1_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("bias_1_q0", 16, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("training", 16, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("data_out_din", 64, hls_out, 3, "ap_fifo", "fifo_data_in", 1),
	Port_Property("data_out_full_n", 1, hls_in, 3, "ap_fifo", "fifo_status", 1),
	Port_Property("data_out_write", 1, hls_out, 3, "ap_fifo", "fifo_port_we", 1),
	Port_Property("data_in", 64, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "accelerator_controller";
